{"mappings":"A,M,0C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,SCQA,IAAM,EAAO,GAAI,CAAA,EAAA,EAAA,OAAI,AAAJ,EAAM,CACrB,OAAQ,CACN,GAAI,CAAA,EAAA,EAAA,OAAU,AAAV,EAAY,CACd,OAAQ,GAAI,CAAA,EAAA,EAAA,OAAU,AAAV,CACd,GACD,CACD,SAAU,AAAA,CAAA,EAAA,EAAA,QAAgB,AAAhB,EAAkB,CAC1B,mBAAoB,CAClB,YAAa,CAAA,CACf,CACF,GACA,OAAQ,YACR,KAAM,GAAI,CAAA,EAAA,EAAA,OAAK,AAAL,EAAO,CACf,OAAQ,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,CAAC,GAAI,GAAG,CAAE,YAAa,aACzC,KAAM,CACR,EACF,GAEM,EAAO,GAAI,CAAA,EAAA,EAAA,OAAO,AAAP,EAAS,CACxB,IAAK,CACP,GACM,EAAQ,EAAK,cAAc,GAOjC,SAAS,IACP,IAAM,EAAa,SAAS,aAAa,CAAC,eAAe,KAAK,CACxD,EAAS,EAAM,MAAM,CACrB,EAAI,KAAK,GAAG,CAAC,EAAO,KAAK,CAAE,EAAO,MAAM,QAC9C,AACO,aADC,EAEG,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,EAAiB,EAAQ,EAAI,EAAG,EAAI,GAEpC,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,EAAiB,EAAQ,EAAI,EAAG,EAAI,EAEjD,CAhBA,EAAK,UAAU,CAAC,CAAA,GAGhB,SAAS,cAAc,CAAC,UAAU,gBAAgB,CAAC,QAAS,IAAM,EAAK,UAAU,CAAC,CAAC,EAAK,UAAU,KAClG,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,SAAU,AAAA,GAAO,EAAK,kBAAkB,CAAC,OAAO,UAAU,CAAC,EAAI,MAAM,CAAC,KAAK,IAalI,AAAA,CAAA,EAAA,EAAA,YAAW,AAAX,EAAa,EAAO,IAAM,IAAiB,OAAO,EAElD,SAAS,aAAa,CAAC,mBAAmB,gBAAgB,CAAC,QAAS,OAAO,cAAc,EAEzF,OAAO,cAAiB,CAAG,iBACzB,IAAM,EAAI,IACV,QAAQ,GAAG,CAAC,GACZ,IAAM,EAAQ,MAAM,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,EAAe,EAAO,GACpC,EAAM,IAAI,MACV,EAAS,EAAM,MAAM,AAC3B,CAAA,EAAI,GAAG,CAAG,EACV,EAAI,KAAK,CAAG,EAAE,KAAK,CAAI,CAAA,EAAO,KAAK,CAAG,EAAO,WAAU,AAAV,EAC7C,EAAI,MAAM,CAAG,EAAE,MAAM,CAAI,CAAA,EAAO,MAAM,CAAG,EAAO,YAAW,AAAX,EAChD,SAAS,aAAa,CAAC,gBAAgB,MAAM,CAAC,EAChD,EAKA,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB","sources":["<anon>","examples/print.js"],"sourcesContent":["import \"./buildings.88bb1910.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire73bb\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire73bb\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $cc3xD = parcelRequire(\"cc3xD\");\n\nvar $dpRHA = parcelRequire(\"dpRHA\");\n\nvar $9DiKA = parcelRequire(\"9DiKA\");\n\nvar $f3WAG = parcelRequire(\"f3WAG\");\n\nvar $9jDAx = parcelRequire(\"9jDAx\");\n\nvar $4mWlF = parcelRequire(\"4mWlF\");\n\nvar $5DwXE = parcelRequire(\"5DwXE\");\n\nvar $5gNCk = parcelRequire(\"5gNCk\");\nconst $88be8afb4af92ff4$var$ol2d = new (0, $5DwXE.default)({\n    layers: [\n        new (0, $4mWlF.default)({\n            source: new (0, $9jDAx.default)()\n        })\n    ],\n    controls: (0, $f3WAG.defaults)({\n        attributionOptions: {\n            collapsible: false\n        }\n    }),\n    target: 'mapCesium',\n    view: new (0, $9DiKA.default)({\n        center: (0, $dpRHA.transform)([\n            25,\n            20\n        ], 'EPSG:4326', 'EPSG:3857'),\n        zoom: 3\n    })\n});\nconst $88be8afb4af92ff4$var$ol3d = new (0, $cc3xD.default)({\n    map: $88be8afb4af92ff4$var$ol2d\n});\nconst $88be8afb4af92ff4$var$scene = $88be8afb4af92ff4$var$ol3d.getCesiumScene();\n$88be8afb4af92ff4$var$ol3d.setEnabled(true);\ndocument.getElementById('enable').addEventListener('click', ()=>$88be8afb4af92ff4$var$ol3d.setEnabled(!$88be8afb4af92ff4$var$ol3d.getEnabled()));\ndocument.getElementById('printScale').addEventListener('change', (evt)=>$88be8afb4af92ff4$var$ol3d.setResolutionScale(Number.parseFloat(evt.target.value)));\nfunction $88be8afb4af92ff4$var$scalingOptions() {\n    const printValue = document.querySelector('#printValue').value;\n    const canvas = $88be8afb4af92ff4$var$scene.canvas;\n    const v = Math.min(canvas.width, canvas.height);\n    switch(printValue){\n        case 'portrait':\n            return (0, $cc3xD.computeRectangle)(canvas, v / 4, v / 2);\n        default:\n            return (0, $cc3xD.computeRectangle)(canvas, v / 2, v / 4);\n    }\n}\n(0, $cc3xD.autoDrawMask)($88be8afb4af92ff4$var$scene, ()=>$88be8afb4af92ff4$var$scalingOptions().scaling);\ndocument.querySelector('#takeScreenshot').addEventListener('click', window.takeScreenshot);\nwindow['takeScreenshot'] = async function() {\n    const r = $88be8afb4af92ff4$var$scalingOptions();\n    console.log(r);\n    const value = await (0, $cc3xD.takeScreenshot)($88be8afb4af92ff4$var$scene, r);\n    const img = new Image();\n    const canvas = $88be8afb4af92ff4$var$scene.canvas;\n    img.src = value;\n    img.width = r.width / (canvas.width / canvas.clientWidth);\n    img.height = r.height / (canvas.height / canvas.clientHeight);\n    document.querySelector('#screenshots').append(img);\n};\n(0, $5gNCk.initCodeSandbox)('rawjs/print.js');\n\n\n//# sourceMappingURL=print.049e49e0.js.map\n","import OLCesium, {takeScreenshot, autoDrawMask, computeRectangle} from 'olcs';\nimport {transform} from 'ol/proj.js';\nimport olView from 'ol/View.js';\nimport {defaults as olControlDefaults} from 'ol/control.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olMap from 'ol/Map.js';\n\nconst ol2d = new olMap({\n  layers: [\n    new olLayerTile({\n      source: new olSourceOSM()\n    })\n  ],\n  controls: olControlDefaults({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  target: 'mapCesium',\n  view: new olView({\n    center: transform([25, 20], 'EPSG:4326', 'EPSG:3857'),\n    zoom: 3\n  })\n});\n\nconst ol3d = new OLCesium({\n  map: ol2d,\n});\nconst scene = ol3d.getCesiumScene();\nol3d.setEnabled(true);\n\n\ndocument.getElementById('enable').addEventListener('click', () => ol3d.setEnabled(!ol3d.getEnabled()));\ndocument.getElementById('printScale').addEventListener('change', evt => ol3d.setResolutionScale(Number.parseFloat(evt.target.value)));\n\nfunction scalingOptions() {\n  const printValue = document.querySelector('#printValue').value;\n  const canvas = scene.canvas;\n  const v = Math.min(canvas.width, canvas.height);\n  switch (printValue) {\n    case 'portrait':\n      return computeRectangle(canvas, v / 4, v / 2);\n    default:\n      return computeRectangle(canvas, v / 2, v / 4);\n  }\n}\nautoDrawMask(scene, () => scalingOptions().scaling);\n\ndocument.querySelector('#takeScreenshot').addEventListener('click', window.takeScreenshot);\n\nwindow['takeScreenshot'] = async function() {\n  const r = scalingOptions();\n  console.log(r);\n  const value = await takeScreenshot(scene, r);\n  const img = new Image();\n  const canvas = scene.canvas;\n  img.src = value;\n  img.width = r.width / (canvas.width / canvas.clientWidth);\n  img.height = r.height / (canvas.height / canvas.clientHeight);\n  document.querySelector('#screenshots').append(img);\n};\n\n//##REMOVE## Keep this tag, split code here for code sandbox\n\nimport {initCodeSandbox} from './_code-sandbox.js';\ninitCodeSandbox('rawjs/print.js');\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$cc3xD","$dpRHA","$9DiKA","$f3WAG","$9jDAx","$4mWlF","$5DwXE","$5gNCk","$88be8afb4af92ff4$var$ol2d","default","layers","source","controls","defaults","attributionOptions","collapsible","target","view","center","transform","zoom","$88be8afb4af92ff4$var$ol3d","map","$88be8afb4af92ff4$var$scene","getCesiumScene","$88be8afb4af92ff4$var$scalingOptions","printValue","document","querySelector","value","canvas","v","Math","min","width","height","computeRectangle","setEnabled","getElementById","addEventListener","getEnabled","evt","setResolutionScale","Number","parseFloat","autoDrawMask","scaling","window","takeScreenshot","r","console","log","img","Image","src","clientWidth","clientHeight","append","initCodeSandbox"],"version":3,"file":"print.049e49e0.js.map"}