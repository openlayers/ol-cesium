{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,I,E,E,S,E,E,S,E,E,SCmBA,AAAA,EAAA,OAAI,CAAE,IAAI,CAAC,aAdU,yKAgBrB,AAAA,CAAA,EAAA,EAAA,QAAc,AAAd,EAAgB,EAAA,OAAI,EACpB,AAAA,CAAA,EAAA,EAAA,GAAY,AAAZ,EAAc,cAAc,SAAS,CALb,CAAC,KAAQ,IAAO,IAAQ,KAAO,C,G,E,Q,S,C,C,C,E,E,E,O,C,W,I,GCftD,IAAA,EAAA,EAAA,S,E,E,S,E,E,S,E,E,SAyCM,SAAS,EAAS,CAAK,EAG5B,IAEI,EAAG,EAFD,EAAY,OAAO,IAAI,CAAC,EAAM,IAAI,EAClC,EAAM,EAAU,MAAM,CAE5B,IAAK,EAAI,EAAG,EAAI,EAAK,EAAE,EAAG,CACxB,IAAM,EAAO,CAAS,CAAC,EAAE,CACzB,GAAI,CAAC,AAAA,CAAA,EAAA,EAAA,GAAkB,AAAlB,EAAoB,GAAO,CAC9B,IAAM,EAAM,EAAM,IAAI,CAAC,GACnB,EAAmD,EAAI,KAAK,AAC5D,CAAC,GAAS,AAAiB,YAAjB,EAAI,QAAQ,EACxB,CAAA,EAAQ,SADV,EAGA,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,EACE,GAAI,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,CACb,KAAM,EACN,gBAAiB,EAAI,IAAI,CACzB,cAAe,EAAI,QAAQ,CAC3B,MAAA,CACF,GAEJ,CACF,CACA,IAAK,EAAI,EAAG,EAAI,EAAK,EAAE,EAAG,CACxB,IAAM,EAAQ,CAAS,CAAC,EAAE,CACpB,EAAQ,AAAA,CAAA,EAAA,EAAA,GAAkB,AAAlB,EAAoB,GAClC,IAAK,EAAI,EAAG,EAAI,E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CR,QAAS,eACT,QAAS,SACT,UAAW,UACb,EACA,cAAe,CACb,QAAS,cACT,QAAS,SACT,UAAW,uBACb,EACA,MAAO,CACL,QAAS,wDACT,QAAS,OACT,UAAW,4BACb,EACA,UAAW,CACT,QAAS,iDACX,EACA,YAAa,CACX,QAAS,qDACX,EACA,UAAW,CACT,QAAS,oEACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,WAAY,CACV,QAAS,oDACX,EACA,WAAY,CACV,QAAS,mDACX,EACA,WAAY,CACV,QAAS,kDACX,EACA,UAAW,CACT,QAAS,6CACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,0CACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,+CACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,4CACX,EACA,UAAW,CACT,QAAS,yCACX,EACA,UAAW,CACT,QAAS,0DACX,EACA,UAAW,CACT,QAAS,6DACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,yCACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,6CACX,EACA,UAAW,CACT,QAAS,0DACX,EACA,UAAW,CACT,QAAS,0BACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,mEACX,EACA,UAAW,CACT,QAAS,wDACX,EACA,UAAW,CACT,QAAS,2DACX,EACA,UAAW,CACT,QAAS,4DACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,+DACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,iEACX,EACA,UAAW,CACT,QAAS,0DACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,mDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,8BACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,mDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,YAAa,CACX,QAAS,qDACX,EACA,UAAW,CACT,QAAS,0BACX,EACA,UAAW,CACT,QAAS,SACX,EACA,UAAW,CACT,QAAS,SACX,EACA,UAAW,CACT,QAAS,mDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,2CACX,EACA,UAAW,CACT,QAAS,4DACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,SACX,EACA,UAAW,CACT,QAAS,sCACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,sCACX,EACA,YAAa,CACX,QAAS,6CACX,EACA,UAAW,CACT,QAAS,6CACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,iEACX,EACA,UAAW,CACT,QAAS,0DACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,+CACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,sDACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,wDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,6DACX,EACA,UAAW,CACT,QAAS,yDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,sDACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,gEACX,EACA,UAAW,CACT,QAAS,yDACX,EACA,UAAW,CACT,QAAS,sDACX,EACA,UAAW,CACT,QAAS,mDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,2DACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,2DACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,YAAa,CACX,QAAS,kDACX,EACA,YAAa,CACX,QAAS,OACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,iDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,uEACX,EACA,UAAW,CACT,QAAS,4CACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,2DACX,EACA,YAAa,CACX,QAAS,cACX,EACA,YAAa,CACX,QAAS,cACX,EACA,WAAY,CACV,QAAS,WACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,YAAa,CACX,QAAS,0BACX,EACA,YAAa,CACX,QAAS,2BACX,EACA,YAAa,CACX,QAAS,mBACX,EACA,YAAa,CACX,QAAS,QACX,EACA,UAAW,CACT,QAAS,cACX,EACA,cAAe,CACb,QAAS,eACX,EACA,YAAa,CACX,QAAS,mBACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,YAAa,CACX,QAAS,cACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,aAAc,CACZ,QAAS,aACX,EACA,YAAa,CACX,QAAS,WACX,EACA,aAAc,CACZ,QAAS,WACX,EACA,gBAAiB,CACf,QAAS,aACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,YAAa,CACX,QAAS,eACX,EACA,YAAa,CACX,QAAS,cACX,EACA,WAAY,CACV,QAAS,YACX,EACA,cAAe,CACb,QAAS,sBACX,EACA,cAAe,CACb,QAAS,qBACX,EACA,aAAc,CACZ,QAAS,qBACX,EACA,YAAa,CACX,QAAS,kBACX,EACA,aAAc,CACZ,QAAS,uBACX,EACA,aAAc,CACZ,QAAS,sBACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,eAAgB,CACd,QAAS,qBACX,EACA,aAAc,CACZ,QAAS,oBACX,EACA,aAAc,CACZ,QAAS,sBACX,EACA,aAAc,CACZ,QAAS,uBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,6BACX,EACA,YAAa,CACX,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,2BACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,4BACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,0BACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,0BACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,YAAa,CACX,QAAS,eACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,aACX,EACA,WAAY,CACV,QAAS,eACX,EACA,WAAY,CACV,QAAS,YACX,EACA,WAAY,CACV,QAAS,eACX,EACA,UAAW,CACT,QAAS,eACX,EACA,YAAa,CACX,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,cAAe,CACb,QAAS,OACX,EACA,cAAe,CACb,QAAS,OACX,EACA,gBAAiB,CACf,QAAS,OACX,EACA,iBAAkB,CAChB,QAAS,OACX,EACA,eAAgB,CACd,QAAS,OACX,EACA,WAAY,CACV,QAAS,OACX,EACA,aAAc,CACZ,QAAS,OACX,EACA,aAAc,CACZ,QAAS,OACX,EA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","sources":["<anon>","examples/_proj21781.js","node_modules/ol/proj/proj4.js","node_modules/proj4/lib/index.js","node_modules/proj4/lib/core.js","node_modules/proj4/lib/Proj.js","node_modules/proj4/lib/parseCode.js","node_modules/proj4/lib/defs.js","node_modules/proj4/lib/global.js","node_modules/proj4/lib/projString.js","node_modules/proj4/lib/constants/values.js","node_modules/proj4/lib/constants/PrimeMeridian.js","node_modules/proj4/lib/constants/units.js","node_modules/proj4/lib/match.js","node_modules/wkt-parser/index.js","node_modules/wkt-parser/buildPROJJSON.js","node_modules/wkt-parser/PROJJSONBuilder2015.js","node_modules/wkt-parser/PROJJSONBuilderBase.js","node_modules/wkt-parser/PROJJSONBuilder2019.js","node_modules/wkt-parser/detectWKTVersion.js","node_modules/wkt-parser/parser.js","node_modules/wkt-parser/process.js","node_modules/wkt-parser/transformPROJJSON.js","node_modules/wkt-parser/util.js","node_modules/proj4/lib/extend.js","node_modules/proj4/lib/projections.js","node_modules/proj4/lib/projections/merc.js","node_modules/proj4/lib/common/msfnz.js","node_modules/proj4/lib/common/adjust_lon.js","node_modules/proj4/lib/common/sign.js","node_modules/proj4/lib/common/tsfnz.js","node_modules/proj4/lib/common/phi2z.js","node_modules/proj4/lib/projections/longlat.js","node_modules/proj4/lib/deriveConstants.js","node_modules/proj4/lib/constants/Ellipsoid.js","node_modules/proj4/lib/constants/Datum.js","node_modules/proj4/lib/datum.js","node_modules/proj4/lib/nadgrid.js","node_modules/proj4/lib/transform.js","node_modules/proj4/lib/datum_transform.js","node_modules/proj4/lib/datumUtils.js","node_modules/proj4/lib/adjust_axis.js","node_modules/proj4/lib/common/toPoint.js","node_modules/proj4/lib/checkSanity.js","node_modules/proj4/lib/Point.js","node_modules/mgrs/mgrs.js","node_modules/proj4/projs.js","node_modules/proj4/lib/projections/tmerc.js","node_modules/proj4/lib/common/pj_enfn.js","node_modules/proj4/lib/common/pj_mlfn.js","node_modules/proj4/lib/common/pj_inv_mlfn.js","node_modules/proj4/lib/projections/etmerc.js","node_modules/proj4/lib/common/sinh.js","node_modules/proj4/lib/common/hypot.js","node_modules/proj4/lib/common/asinhy.js","node_modules/proj4/lib/common/log1py.js","node_modules/proj4/lib/common/gatg.js","node_modules/proj4/lib/common/clens.js","node_modules/proj4/lib/common/clens_cmplx.js","node_modules/proj4/lib/common/cosh.js","node_modules/proj4/lib/projections/utm.js","node_modules/proj4/lib/common/adjust_zone.js","node_modules/proj4/lib/projections/sterea.js","node_modules/proj4/lib/projections/gauss.js","node_modules/proj4/lib/common/srat.js","node_modules/proj4/lib/projections/stere.js","node_modules/proj4/lib/projections/somerc.js","node_modules/proj4/lib/projections/omerc.js","node_modules/proj4/lib/projections/lcc.js","node_modules/proj4/lib/projections/krovak.js","node_modules/proj4/lib/projections/cass.js","node_modules/proj4/lib/common/mlfn.js","node_modules/proj4/lib/common/e0fn.js","node_modules/proj4/lib/common/e1fn.js","node_modules/proj4/lib/common/e2fn.js","node_modules/proj4/lib/common/e3fn.js","node_modules/proj4/lib/common/gN.js","node_modules/proj4/lib/common/adjust_lat.js","node_modules/proj4/lib/common/imlfn.js","node_modules/proj4/lib/projections/laea.js","node_modules/proj4/lib/common/qsfnz.js","node_modules/proj4/lib/projections/aea.js","node_modules/proj4/lib/common/asinz.js","node_modules/proj4/lib/projections/gnom.js","node_modules/proj4/lib/projections/cea.js","node_modules/proj4/lib/common/iqsfnz.js","node_modules/proj4/lib/projections/eqc.js","node_modules/proj4/lib/projections/poly.js","node_modules/proj4/lib/projections/nzmg.js","node_modules/proj4/lib/projections/mill.js","node_modules/proj4/lib/projections/sinu.js","node_modules/proj4/lib/projections/moll.js","node_modules/proj4/lib/projections/eqdc.js","node_modules/proj4/lib/projections/vandg.js","node_modules/proj4/lib/projections/aeqd.js","node_modules/geographiclib-geodesic/geographiclib-geodesic.min.js","node_modules/proj4/lib/projections/ortho.js","node_modules/proj4/lib/projections/qsc.js","node_modules/proj4/lib/projections/robin.js","node_modules/proj4/lib/projections/geocent.js","node_modules/proj4/lib/projections/tpers.js","node_modules/proj4/lib/projections/geos.js","node_modules/proj4/lib/projections/eqearth.js","node_modules/proj4/lib/projections/bonne.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire73bb\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire73bb\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"fXDXi\", function(module, exports) {\n\nvar $448DI = parcelRequire(\"448DI\");\n\nvar $ebcW3 = parcelRequire(\"ebcW3\");\n\nvar $dpRHA = parcelRequire(\"dpRHA\");\nconst $b9eb5bfcc92e683f$var$epsg21781def = [\n    '+proj=somerc',\n    '+lat_0=46.95240555555556',\n    '+lon_0=7.439583333333333',\n    '+k_0=1',\n    '+x_0=600000',\n    '+y_0=200000',\n    '+ellps=bessel',\n    '+towgs84=674.374,15.056,405.346,0,0,0,0',\n    '+units=m',\n    '+no_defs'\n].join(' ');\nconst $b9eb5bfcc92e683f$var$epsg21781extent = [\n    420000,\n    30000,\n    900000,\n    350000\n];\n(0, $ebcW3.default).defs('EPSG:21781', $b9eb5bfcc92e683f$var$epsg21781def);\n(0, $448DI.register)((0, $ebcW3.default));\n(0, $dpRHA.get)('EPSG:21781').setExtent($b9eb5bfcc92e683f$var$epsg21781extent);\n\n});\nparcelRegister(\"448DI\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $2f5e3cce9f26ffcd$export$6503ec6e8aabbaf);\n/**\n * @module ol/proj/proj4\n */ \nvar $dpRHA = parcelRequire(\"dpRHA\");\n\nvar $9qhtr = parcelRequire(\"9qhtr\");\n\nvar $l72II = parcelRequire(\"l72II\");\n\nvar $1wgRP = parcelRequire(\"1wgRP\");\n/**\n * @type {import(\"proj4\")|null}\n */ let $2f5e3cce9f26ffcd$var$registered = null;\nfunction $2f5e3cce9f26ffcd$export$bd9a8eae248cc953() {\n    return !!$2f5e3cce9f26ffcd$var$registered;\n}\nfunction $2f5e3cce9f26ffcd$export$d07f55d4c15c0440() {\n    $2f5e3cce9f26ffcd$var$registered = null;\n}\nfunction $2f5e3cce9f26ffcd$export$6503ec6e8aabbaf(proj4) {\n    $2f5e3cce9f26ffcd$var$registered = proj4;\n    const projCodes = Object.keys(proj4.defs);\n    const len = projCodes.length;\n    let i, j;\n    for(i = 0; i < len; ++i){\n        const code = projCodes[i];\n        if (!(0, $l72II.get)(code)) {\n            const def = proj4.defs(code);\n            let units = /** @type {import(\"./Units.js\").Units} */ def.units;\n            if (!units && def.projName === 'longlat') units = 'degrees';\n            (0, $dpRHA.addProjection)(new (0, $9qhtr.default)({\n                code: code,\n                axisOrientation: def.axis,\n                metersPerUnit: def.to_meter,\n                units: units\n            }));\n        }\n    }\n    for(i = 0; i < len; ++i){\n        const code1 = projCodes[i];\n        const proj1 = (0, $l72II.get)(code1);\n        for(j = 0; j < len; ++j){\n            const code2 = projCodes[j];\n            const proj2 = (0, $l72II.get)(code2);\n            if (!(0, $1wgRP.get)(code1, code2)) {\n                if (proj4.defs[code1] === proj4.defs[code2]) (0, $dpRHA.addEquivalentProjections)([\n                    proj1,\n                    proj2\n                ]);\n                else {\n                    const transform = proj4(code1, code2);\n                    (0, $dpRHA.addCoordinateTransforms)(proj1, proj2, (0, $dpRHA.createSafeCoordinateTransform)(proj1, proj2, transform.forward), (0, $dpRHA.createSafeCoordinateTransform)(proj2, proj1, transform.inverse));\n                }\n            }\n        }\n    }\n}\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */ let $2f5e3cce9f26ffcd$var$epsgLookup = async function(code) {\n    const response = await fetch(`https://epsg.io/${code}.proj4`);\n    if (!response.ok) throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n    return response.text();\n};\nfunction $2f5e3cce9f26ffcd$export$a2ab1dacaf978878(func) {\n    $2f5e3cce9f26ffcd$var$epsgLookup = func;\n}\nfunction $2f5e3cce9f26ffcd$export$740126bd4cc01b24() {\n    return $2f5e3cce9f26ffcd$var$epsgLookup;\n}\nasync function $2f5e3cce9f26ffcd$export$8d835cefe312e037(code) {\n    if (typeof code === 'string') code = parseInt(code.split(':').pop(), 10);\n    const proj4 = $2f5e3cce9f26ffcd$var$registered;\n    if (!proj4) throw new Error('Proj4 must be registered first with register(proj4)');\n    const epsgCode = 'EPSG:' + code;\n    if (proj4.defs(epsgCode)) return (0, $l72II.get)(epsgCode);\n    proj4.defs(epsgCode, await $2f5e3cce9f26ffcd$var$epsgLookup(code));\n    $2f5e3cce9f26ffcd$export$6503ec6e8aabbaf(proj4);\n    return (0, $l72II.get)(epsgCode);\n}\nfunction $2f5e3cce9f26ffcd$export$71e713433eeb8730(key) {\n    return async function(code) {\n        const response = await fetch(`https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`);\n        if (!response.ok) throw new Error(`Unexpected response from maptiler.com: ${response.status}`);\n        return response.json().then((json)=>{\n            const results = json['results'];\n            if (results?.length > 0) {\n                const result = results.filter((r)=>r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code)[0];\n                if (result) {\n                    const transforms = result['transformations'];\n                    if (transforms?.length > 0) {\n                        // use default transform if it does not require grids\n                        const defaultTransform = result['default_transformation'];\n                        if (transforms.filter((t)=>t['id']?.['authority'] === defaultTransform?.['authority'] && t['id']?.['code'] === defaultTransform?.['code'] && t['grids']?.length === 0).length > 0) return result['exports']?.['proj4'];\n                        // otherwise use most accurate alternative without grids\n                        const transform = transforms.filter((t)=>t['grids']?.length === 0 && t['target_crs']?.['authority'] === 'EPSG' && t['target_crs']?.['code'] === 4326 && t['deprecated'] === false && t['usable'] === true).sort((t1, t2)=>t1['accuracy'] - t2['accuracy'])[0]?.['exports']?.['proj4'];\n                        if (transform) return transform;\n                    }\n                    // fallback to default\n                    return result['exports']?.['proj4'];\n                }\n            }\n        });\n    };\n}\n\n});\n\nparcelRegister(\"ebcW3\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $a52c207aab93bf4f$export$2e2bcd8739ae039);\n\nvar $66mQQ = parcelRequire(\"66mQQ\");\n\nvar $38qqf = parcelRequire(\"38qqf\");\n\nvar $iCFRA = parcelRequire(\"iCFRA\");\n\nvar $5vTfu = parcelRequire(\"5vTfu\");\n\nvar $ezj1P = parcelRequire(\"ezj1P\");\n\nvar $flUkq = parcelRequire(\"flUkq\");\n\nvar $ceNev = parcelRequire(\"ceNev\");\n\nvar $4hMrQ = parcelRequire(\"4hMrQ\");\n\nvar $j48cx = parcelRequire(\"j48cx\");\n(0, $66mQQ.default).defaultDatum = 'WGS84'; // default datum\n(0, $66mQQ.default).Proj = (0, $38qqf.default);\n(0, $66mQQ.default).WGS84 = new (0, $66mQQ.default).Proj('WGS84');\n(0, $66mQQ.default).Point = (0, $iCFRA.default);\n(0, $66mQQ.default).toPoint = (0, $5vTfu.default);\n(0, $66mQQ.default).defs = (0, $ezj1P.default);\n(0, $66mQQ.default).nadgrid = (0, $flUkq.default);\n(0, $66mQQ.default).transform = (0, $ceNev.default);\n(0, $66mQQ.default).mgrs = (0, $4hMrQ.default);\n(0, $66mQQ.default).version = '__VERSION__';\n(0, $j48cx.default)((0, $66mQQ.default));\nvar $a52c207aab93bf4f$export$2e2bcd8739ae039 = (0, $66mQQ.default);\n\n});\nparcelRegister(\"66mQQ\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $471507637a3ff861$export$2e2bcd8739ae039);\n\nvar $38qqf = parcelRequire(\"38qqf\");\n\nvar $ceNev = parcelRequire(\"ceNev\");\nvar $471507637a3ff861$var$wgs84 = (0, $38qqf.default)('WGS84');\nfunction $471507637a3ff861$var$transformer(from, to, coords, enforceAxis) {\n    var transformedArray, out, keys;\n    if (Array.isArray(coords)) {\n        transformedArray = (0, $ceNev.default)(from, to, coords, enforceAxis) || {\n            x: NaN,\n            y: NaN\n        };\n        if (coords.length > 2) {\n            if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n                if (typeof transformedArray.z === 'number') return [\n                    transformedArray.x,\n                    transformedArray.y,\n                    transformedArray.z\n                ].concat(coords.slice(3));\n                else return [\n                    transformedArray.x,\n                    transformedArray.y,\n                    coords[2]\n                ].concat(coords.slice(3));\n            } else return [\n                transformedArray.x,\n                transformedArray.y\n            ].concat(coords.slice(2));\n        } else return [\n            transformedArray.x,\n            transformedArray.y\n        ];\n    } else {\n        out = (0, $ceNev.default)(from, to, coords, enforceAxis);\n        keys = Object.keys(coords);\n        if (keys.length === 2) return out;\n        keys.forEach(function(key) {\n            if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n                if (key === 'x' || key === 'y' || key === 'z') return;\n            } else {\n                if (key === 'x' || key === 'y') return;\n            }\n            out[key] = coords[key];\n        });\n        return out;\n    }\n}\nfunction $471507637a3ff861$var$checkProj(item) {\n    if (item instanceof (0, $38qqf.default)) return item;\n    if (item.oProj) return item.oProj;\n    return (0, $38qqf.default)(item);\n}\nfunction $471507637a3ff861$var$proj4(fromProj, toProj, coord) {\n    fromProj = $471507637a3ff861$var$checkProj(fromProj);\n    var single = false;\n    var obj;\n    if (typeof toProj === 'undefined') {\n        toProj = fromProj;\n        fromProj = $471507637a3ff861$var$wgs84;\n        single = true;\n    } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n        coord = toProj;\n        toProj = fromProj;\n        fromProj = $471507637a3ff861$var$wgs84;\n        single = true;\n    }\n    toProj = $471507637a3ff861$var$checkProj(toProj);\n    if (coord) return $471507637a3ff861$var$transformer(fromProj, toProj, coord);\n    else {\n        obj = {\n            forward: function(coords, enforceAxis) {\n                return $471507637a3ff861$var$transformer(fromProj, toProj, coords, enforceAxis);\n            },\n            inverse: function(coords, enforceAxis) {\n                return $471507637a3ff861$var$transformer(toProj, fromProj, coords, enforceAxis);\n            }\n        };\n        if (single) obj.oProj = toProj;\n        return obj;\n    }\n}\nvar $471507637a3ff861$export$2e2bcd8739ae039 = $471507637a3ff861$var$proj4;\n\n});\nparcelRegister(\"38qqf\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $24869d6338533b3b$export$2e2bcd8739ae039);\n\nvar $giDQh = parcelRequire(\"giDQh\");\n\nvar $cWauz = parcelRequire(\"cWauz\");\n\nvar $1Wo5P = parcelRequire(\"1Wo5P\");\n\nvar $d8b9d = parcelRequire(\"d8b9d\");\n\nvar $gMdFS = parcelRequire(\"gMdFS\");\n\nvar $3MCqb = parcelRequire(\"3MCqb\");\n\nvar $hzXAi = parcelRequire(\"hzXAi\");\n\nvar $flUkq = parcelRequire(\"flUkq\");\nfunction $24869d6338533b3b$var$Projection(srsCode, callback) {\n    if (!(this instanceof $24869d6338533b3b$var$Projection)) return new $24869d6338533b3b$var$Projection(srsCode);\n    callback = callback || function(error) {\n        if (error) throw error;\n    };\n    var json = (0, $giDQh.default)(srsCode);\n    if (typeof json !== 'object') {\n        callback('Could not parse to valid json: ' + srsCode);\n        return;\n    }\n    var ourProj = $24869d6338533b3b$var$Projection.projections.get(json.projName);\n    if (!ourProj) {\n        callback('Could not get projection name from: ' + srsCode);\n        return;\n    }\n    if (json.datumCode && json.datumCode !== 'none') {\n        var datumDef = (0, $hzXAi.default)((0, $gMdFS.default), json.datumCode);\n        if (datumDef) {\n            json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n            json.ellps = datumDef.ellipse;\n            json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n        }\n    }\n    json.k0 = json.k0 || 1.0;\n    json.axis = json.axis || 'enu';\n    json.ellps = json.ellps || 'wgs84';\n    json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n    var sphere_ = (0, $d8b9d.sphere)(json.a, json.b, json.rf, json.ellps, json.sphere);\n    var ecc = (0, $d8b9d.eccentricity)(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n    var nadgrids = (0, $flUkq.getNadgrids)(json.nadgrids);\n    var datumObj = json.datum || (0, $3MCqb.default)(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2, nadgrids);\n    (0, $cWauz.default)(this, json); // transfer everything over from the projection because we don't know what we'll need\n    (0, $cWauz.default)(this, ourProj); // transfer all the methods from the projection\n    // copy the 4 things over we calculated in deriveConstants.sphere\n    this.a = sphere_.a;\n    this.b = sphere_.b;\n    this.rf = sphere_.rf;\n    this.sphere = sphere_.sphere;\n    // copy the 3 things we calculated in deriveConstants.eccentricity\n    this.es = ecc.es;\n    this.e = ecc.e;\n    this.ep2 = ecc.ep2;\n    // add in the datum object\n    this.datum = datumObj;\n    // init the projection\n    this.init();\n    // legecy callback from back in the day when it went to spatialreference.org\n    callback(null, this);\n}\n$24869d6338533b3b$var$Projection.projections = (0, $1Wo5P.default);\n$24869d6338533b3b$var$Projection.projections.start();\nvar $24869d6338533b3b$export$2e2bcd8739ae039 = $24869d6338533b3b$var$Projection;\n\n});\nparcelRegister(\"giDQh\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $bddd3b9c0d2064cd$export$2e2bcd8739ae039);\n\nvar $ezj1P = parcelRequire(\"ezj1P\");\n\nvar $7UVTv = parcelRequire(\"7UVTv\");\n\nvar $7zrM7 = parcelRequire(\"7zrM7\");\n\nvar $hzXAi = parcelRequire(\"hzXAi\");\nfunction $bddd3b9c0d2064cd$var$testObj(code) {\n    return typeof code === 'string';\n}\nfunction $bddd3b9c0d2064cd$var$testDef(code) {\n    return code in (0, $ezj1P.default);\n}\nfunction $bddd3b9c0d2064cd$var$testWKT(code) {\n    return code.indexOf('+') !== 0 && code.indexOf('[') !== -1 || typeof code === 'object' && !('srsCode' in code);\n}\nvar $bddd3b9c0d2064cd$var$codes = [\n    '3857',\n    '900913',\n    '3785',\n    '102113'\n];\nfunction $bddd3b9c0d2064cd$var$checkMercator(item) {\n    var auth = (0, $hzXAi.default)(item, 'authority');\n    if (!auth) return;\n    var code = (0, $hzXAi.default)(auth, 'epsg');\n    return code && $bddd3b9c0d2064cd$var$codes.indexOf(code) > -1;\n}\nfunction $bddd3b9c0d2064cd$var$checkProjStr(item) {\n    var ext = (0, $hzXAi.default)(item, 'extension');\n    if (!ext) return;\n    return (0, $hzXAi.default)(ext, 'proj4');\n}\nfunction $bddd3b9c0d2064cd$var$testProj(code) {\n    return code[0] === '+';\n}\nfunction $bddd3b9c0d2064cd$var$parse(code) {\n    if ($bddd3b9c0d2064cd$var$testObj(code)) {\n        // check to see if this is a WKT string\n        if ($bddd3b9c0d2064cd$var$testDef(code)) return (0, $ezj1P.default)[code];\n        if ($bddd3b9c0d2064cd$var$testWKT(code)) {\n            var out = (0, $7UVTv.default)(code);\n            // test of spetial case, due to this being a very common and often malformed\n            if ($bddd3b9c0d2064cd$var$checkMercator(out)) return (0, $ezj1P.default)['EPSG:3857'];\n            var maybeProjStr = $bddd3b9c0d2064cd$var$checkProjStr(out);\n            if (maybeProjStr) return (0, $7zrM7.default)(maybeProjStr);\n            return out;\n        }\n        if ($bddd3b9c0d2064cd$var$testProj(code)) return (0, $7zrM7.default)(code);\n    } else if (!code.projName) return (0, $7UVTv.default)(code);\n    else return code;\n}\nvar $bddd3b9c0d2064cd$export$2e2bcd8739ae039 = $bddd3b9c0d2064cd$var$parse;\n\n});\nparcelRegister(\"ezj1P\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $a9b3183caccb3297$export$2e2bcd8739ae039);\n\nvar $cR6T8 = parcelRequire(\"cR6T8\");\n\nvar $7zrM7 = parcelRequire(\"7zrM7\");\n\nvar $7UVTv = parcelRequire(\"7UVTv\");\nfunction $a9b3183caccb3297$var$defs(name) {\n    /* global console */ var that = this;\n    if (arguments.length === 2) {\n        var def = arguments[1];\n        if (typeof def === 'string') {\n            if (def.charAt(0) === '+') $a9b3183caccb3297$var$defs[name] = (0, $7zrM7.default)(arguments[1]);\n            else $a9b3183caccb3297$var$defs[name] = (0, $7UVTv.default)(arguments[1]);\n        } else $a9b3183caccb3297$var$defs[name] = def;\n    } else if (arguments.length === 1) {\n        if (Array.isArray(name)) return name.map(function(v) {\n            if (Array.isArray(v)) $a9b3183caccb3297$var$defs.apply(that, v);\n            else $a9b3183caccb3297$var$defs(v);\n        });\n        else if (typeof name === 'string') {\n            if (name in $a9b3183caccb3297$var$defs) return $a9b3183caccb3297$var$defs[name];\n        } else if ('EPSG' in name) $a9b3183caccb3297$var$defs['EPSG:' + name.EPSG] = name;\n        else if ('ESRI' in name) $a9b3183caccb3297$var$defs['ESRI:' + name.ESRI] = name;\n        else if ('IAU2000' in name) $a9b3183caccb3297$var$defs['IAU2000:' + name.IAU2000] = name;\n        else console.log(name);\n        return;\n    }\n}\n(0, $cR6T8.default)($a9b3183caccb3297$var$defs);\nvar $a9b3183caccb3297$export$2e2bcd8739ae039 = $a9b3183caccb3297$var$defs;\n\n});\nparcelRegister(\"cR6T8\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $95bfc720255032a6$export$2e2bcd8739ae039);\nfunction $95bfc720255032a6$export$2e2bcd8739ae039(defs) {\n    defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n    defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n    defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n    // UTM WGS84\n    for(var i = 1; i <= 60; ++i){\n        defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n        defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n    }\n    defs.WGS84 = defs['EPSG:4326'];\n    defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n    defs.GOOGLE = defs['EPSG:3857'];\n    defs['EPSG:900913'] = defs['EPSG:3857'];\n    defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n});\n\nparcelRegister(\"7zrM7\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $583158df16d3522c$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $gyWgF = parcelRequire(\"gyWgF\");\n\nvar $6CY0Z = parcelRequire(\"6CY0Z\");\n\nvar $hzXAi = parcelRequire(\"hzXAi\");\nfunction $583158df16d3522c$export$2e2bcd8739ae039(defData) {\n    var self = {};\n    var paramObj = defData.split('+').map(function(v) {\n        return v.trim();\n    }).filter(function(a) {\n        return a;\n    }).reduce(function(p, a) {\n        var split = a.split('=');\n        split.push(true);\n        p[split[0].toLowerCase()] = split[1];\n        return p;\n    }, {});\n    var paramName, paramVal, paramOutname;\n    var params = {\n        proj: 'projName',\n        datum: 'datumCode',\n        rf: function(v) {\n            self.rf = parseFloat(v);\n        },\n        lat_0: function(v) {\n            self.lat0 = v * (0, $gyVUi.D2R);\n        },\n        lat_1: function(v) {\n            self.lat1 = v * (0, $gyVUi.D2R);\n        },\n        lat_2: function(v) {\n            self.lat2 = v * (0, $gyVUi.D2R);\n        },\n        lat_ts: function(v) {\n            self.lat_ts = v * (0, $gyVUi.D2R);\n        },\n        lon_0: function(v) {\n            self.long0 = v * (0, $gyVUi.D2R);\n        },\n        lon_1: function(v) {\n            self.long1 = v * (0, $gyVUi.D2R);\n        },\n        lon_2: function(v) {\n            self.long2 = v * (0, $gyVUi.D2R);\n        },\n        alpha: function(v) {\n            self.alpha = parseFloat(v) * (0, $gyVUi.D2R);\n        },\n        gamma: function(v) {\n            self.rectified_grid_angle = parseFloat(v) * (0, $gyVUi.D2R);\n        },\n        lonc: function(v) {\n            self.longc = v * (0, $gyVUi.D2R);\n        },\n        x_0: function(v) {\n            self.x0 = parseFloat(v);\n        },\n        y_0: function(v) {\n            self.y0 = parseFloat(v);\n        },\n        k_0: function(v) {\n            self.k0 = parseFloat(v);\n        },\n        k: function(v) {\n            self.k0 = parseFloat(v);\n        },\n        a: function(v) {\n            self.a = parseFloat(v);\n        },\n        b: function(v) {\n            self.b = parseFloat(v);\n        },\n        r: function(v) {\n            self.a = self.b = parseFloat(v);\n        },\n        r_a: function() {\n            self.R_A = true;\n        },\n        zone: function(v) {\n            self.zone = parseInt(v, 10);\n        },\n        south: function() {\n            self.utmSouth = true;\n        },\n        towgs84: function(v) {\n            self.datum_params = v.split(',').map(function(a) {\n                return parseFloat(a);\n            });\n        },\n        to_meter: function(v) {\n            self.to_meter = parseFloat(v);\n        },\n        units: function(v) {\n            self.units = v;\n            var unit = (0, $hzXAi.default)((0, $6CY0Z.default), v);\n            if (unit) self.to_meter = unit.to_meter;\n        },\n        from_greenwich: function(v) {\n            self.from_greenwich = v * (0, $gyVUi.D2R);\n        },\n        pm: function(v) {\n            var pm = (0, $hzXAi.default)((0, $gyWgF.default), v);\n            self.from_greenwich = (pm ? pm : parseFloat(v)) * (0, $gyVUi.D2R);\n        },\n        nadgrids: function(v) {\n            if (v === '@null') self.datumCode = 'none';\n            else self.nadgrids = v;\n        },\n        axis: function(v) {\n            var legalAxis = 'ewnsud';\n            if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) self.axis = v;\n        },\n        approx: function() {\n            self.approx = true;\n        }\n    };\n    for(paramName in paramObj){\n        paramVal = paramObj[paramName];\n        if (paramName in params) {\n            paramOutname = params[paramName];\n            if (typeof paramOutname === 'function') paramOutname(paramVal);\n            else self[paramOutname] = paramVal;\n        } else self[paramName] = paramVal;\n    }\n    if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') self.datumCode = self.datumCode.toLowerCase();\n    return self;\n}\n\n});\nparcelRegister(\"gyVUi\", function(module, exports) {\n\n$parcel$export(module.exports, \"PJD_3PARAM\", () => $c0ecbd71ed29ee86$export$3a3ed3e590e8ec27);\n$parcel$export(module.exports, \"PJD_7PARAM\", () => $c0ecbd71ed29ee86$export$8cab19b7f383a7a7);\n$parcel$export(module.exports, \"PJD_GRIDSHIFT\", () => $c0ecbd71ed29ee86$export$83d26ae02793dd10);\n$parcel$export(module.exports, \"PJD_WGS84\", () => $c0ecbd71ed29ee86$export$ab5bf8c731b6bbbb);\n$parcel$export(module.exports, \"PJD_NODATUM\", () => $c0ecbd71ed29ee86$export$8df4c7729d8ed58d);\n$parcel$export(module.exports, \"SRS_WGS84_SEMIMAJOR\", () => $c0ecbd71ed29ee86$export$d612c03b7390d945);\n$parcel$export(module.exports, \"SRS_WGS84_SEMIMINOR\", () => $c0ecbd71ed29ee86$export$59af086d7527ec46);\n$parcel$export(module.exports, \"SRS_WGS84_ESQUARED\", () => $c0ecbd71ed29ee86$export$9b798f9d78b99fc0);\n$parcel$export(module.exports, \"SEC_TO_RAD\", () => $c0ecbd71ed29ee86$export$e0b9011552f3b2f7);\n$parcel$export(module.exports, \"HALF_PI\", () => $c0ecbd71ed29ee86$export$f504979d7e0a75c7);\n$parcel$export(module.exports, \"SIXTH\", () => $c0ecbd71ed29ee86$export$d7977f56a0faa834);\n$parcel$export(module.exports, \"RA4\", () => $c0ecbd71ed29ee86$export$9e703428410a9c7b);\n$parcel$export(module.exports, \"RA6\", () => $c0ecbd71ed29ee86$export$bb54dde5565ed6e3);\n$parcel$export(module.exports, \"EPSLN\", () => $c0ecbd71ed29ee86$export$2aa89dbfb8b504bb);\n$parcel$export(module.exports, \"D2R\", () => $c0ecbd71ed29ee86$export$ed6012a68c0f4a70);\n$parcel$export(module.exports, \"R2D\", () => $c0ecbd71ed29ee86$export$456934b8be7498c3);\n$parcel$export(module.exports, \"FORTPI\", () => $c0ecbd71ed29ee86$export$10cb69dd603c11b0);\n$parcel$export(module.exports, \"TWO_PI\", () => $c0ecbd71ed29ee86$export$6eec49b1a6289c4e);\n$parcel$export(module.exports, \"SPI\", () => $c0ecbd71ed29ee86$export$703a92fc6506ffb9);\nvar $c0ecbd71ed29ee86$export$3a3ed3e590e8ec27 = 1;\nvar $c0ecbd71ed29ee86$export$8cab19b7f383a7a7 = 2;\nvar $c0ecbd71ed29ee86$export$83d26ae02793dd10 = 3;\nvar $c0ecbd71ed29ee86$export$ab5bf8c731b6bbbb = 4; // WGS84 or equivalent\nvar $c0ecbd71ed29ee86$export$8df4c7729d8ed58d = 5; // WGS84 or equivalent\nvar $c0ecbd71ed29ee86$export$d612c03b7390d945 = 6378137.0; // only used in grid shift transforms\nvar $c0ecbd71ed29ee86$export$59af086d7527ec46 = 6356752.314; // only used in grid shift transforms\nvar $c0ecbd71ed29ee86$export$9b798f9d78b99fc0 = 0.0066943799901413165; // only used in grid shift transforms\nvar $c0ecbd71ed29ee86$export$e0b9011552f3b2f7 = 4.84813681109535993589914102357e-6;\nvar $c0ecbd71ed29ee86$export$f504979d7e0a75c7 = Math.PI / 2;\nvar $c0ecbd71ed29ee86$export$d7977f56a0faa834 = 0.1666666666666666667;\nvar $c0ecbd71ed29ee86$export$9e703428410a9c7b = 0.04722222222222222222;\nvar $c0ecbd71ed29ee86$export$bb54dde5565ed6e3 = 0.02215608465608465608;\nvar $c0ecbd71ed29ee86$export$2aa89dbfb8b504bb = 1.0e-10;\nvar $c0ecbd71ed29ee86$export$ed6012a68c0f4a70 = 0.01745329251994329577;\nvar $c0ecbd71ed29ee86$export$456934b8be7498c3 = 57.29577951308232088;\nvar $c0ecbd71ed29ee86$export$10cb69dd603c11b0 = Math.PI / 4;\nvar $c0ecbd71ed29ee86$export$6eec49b1a6289c4e = Math.PI * 2;\nvar $c0ecbd71ed29ee86$export$703a92fc6506ffb9 = 3.14159265359;\n\n});\n\nparcelRegister(\"gyWgF\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $c0ed0517e336f22b$export$2e2bcd8739ae039);\nvar $c0ed0517e336f22b$export$2e2bcd8739ae039 = {};\n$c0ed0517e336f22b$export$2e2bcd8739ae039.greenwich = 0.0; // \"0dE\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.ferro = -17.666666666667; // \"17d40'W\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.brussels = 4.367975; // \"4d22'4.71\\\"E\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.athens = 23.7163375; // \"23d42'58.815\\\"E\",\n$c0ed0517e336f22b$export$2e2bcd8739ae039.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n\n});\n\nparcelRegister(\"6CY0Z\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $4d34d8675ead8d22$export$2e2bcd8739ae039);\nvar $4d34d8675ead8d22$export$2e2bcd8739ae039 = {\n    mm: {\n        to_meter: 0.001\n    },\n    cm: {\n        to_meter: 0.01\n    },\n    ft: {\n        to_meter: 0.3048\n    },\n    'us-ft': {\n        to_meter: 1200 / 3937\n    },\n    fath: {\n        to_meter: 1.8288\n    },\n    kmi: {\n        to_meter: 1852\n    },\n    'us-ch': {\n        to_meter: 20.1168402336805\n    },\n    'us-mi': {\n        to_meter: 1609.34721869444\n    },\n    km: {\n        to_meter: 1000\n    },\n    'ind-ft': {\n        to_meter: 0.30479841\n    },\n    'ind-yd': {\n        to_meter: 0.91439523\n    },\n    mi: {\n        to_meter: 1609.344\n    },\n    yd: {\n        to_meter: 0.9144\n    },\n    ch: {\n        to_meter: 20.1168\n    },\n    link: {\n        to_meter: 0.201168\n    },\n    dm: {\n        to_meter: 0.1\n    },\n    in: {\n        to_meter: 0.0254\n    },\n    'ind-ch': {\n        to_meter: 20.11669506\n    },\n    'us-in': {\n        to_meter: 0.025400050800101\n    },\n    'us-yd': {\n        to_meter: 0.914401828803658\n    }\n};\n\n});\n\nparcelRegister(\"hzXAi\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $ccc3ecc4732a4173$export$2e2bcd8739ae039);\nvar $ccc3ecc4732a4173$var$ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction $ccc3ecc4732a4173$export$2e2bcd8739ae039(obj, key) {\n    if (obj[key]) return obj[key];\n    var keys = Object.keys(obj);\n    var lkey = key.toLowerCase().replace($ccc3ecc4732a4173$var$ignoredChar, '');\n    var i = -1;\n    var testkey, processedKey;\n    while(++i < keys.length){\n        testkey = keys[i];\n        processedKey = testkey.toLowerCase().replace($ccc3ecc4732a4173$var$ignoredChar, '');\n        if (processedKey === lkey) return obj[testkey];\n    }\n}\n\n});\n\n\nparcelRegister(\"7UVTv\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $5c3aabf591259c07$export$2e2bcd8739ae039);\n\nvar $5uKqK = parcelRequire(\"5uKqK\");\n\nvar $ad1Gh = parcelRequire(\"ad1Gh\");\n\nvar $6Pz8X = parcelRequire(\"6Pz8X\");\n\nvar $7SVqc = parcelRequire(\"7SVqc\");\n\nvar $hwbbo = parcelRequire(\"hwbbo\");\n\nvar $am47V = parcelRequire(\"am47V\");\nvar $5c3aabf591259c07$var$knownTypes = [\n    'PROJECTEDCRS',\n    'PROJCRS',\n    'GEOGCS',\n    'GEOCCS',\n    'PROJCS',\n    'LOCAL_CS',\n    'GEODCRS',\n    'GEODETICCRS',\n    'GEODETICDATUM',\n    'ENGCRS',\n    'ENGINEERINGCRS'\n];\nfunction $5c3aabf591259c07$var$rename(obj, params) {\n    var outName = params[0];\n    var inName = params[1];\n    if (!(outName in obj) && inName in obj) {\n        obj[outName] = obj[inName];\n        if (params.length === 3) obj[outName] = params[2](obj[outName]);\n    }\n}\nfunction $5c3aabf591259c07$var$cleanWKT(wkt) {\n    var keys = Object.keys(wkt);\n    for(var i = 0, ii = keys.length; i < ii; ++i){\n        var key = keys[i];\n        // the followings are the crs defined in\n        // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n        if ($5c3aabf591259c07$var$knownTypes.indexOf(key) !== -1) $5c3aabf591259c07$var$setPropertiesFromWkt(wkt[key]);\n        if (typeof wkt[key] === 'object') $5c3aabf591259c07$var$cleanWKT(wkt[key]);\n    }\n}\nfunction $5c3aabf591259c07$var$setPropertiesFromWkt(wkt) {\n    if (wkt.AUTHORITY) {\n        var authority = Object.keys(wkt.AUTHORITY)[0];\n        if (authority && authority in wkt.AUTHORITY) wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n    if (wkt.type === 'GEOGCS') wkt.projName = 'longlat';\n    else if (wkt.type === 'LOCAL_CS') {\n        wkt.projName = 'identity';\n        wkt.local = true;\n    } else if (typeof wkt.PROJECTION === 'object') wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    else wkt.projName = wkt.PROJECTION;\n    if (wkt.AXIS) {\n        var axisOrder = '';\n        for(var i = 0, ii = wkt.AXIS.length; i < ii; ++i){\n            var axis = [\n                wkt.AXIS[i][0].toLowerCase(),\n                wkt.AXIS[i][1].toLowerCase()\n            ];\n            if (axis[0].indexOf('north') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north') axisOrder += 'n';\n            else if (axis[0].indexOf('south') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south') axisOrder += 's';\n            else if (axis[0].indexOf('east') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east') axisOrder += 'e';\n            else if (axis[0].indexOf('west') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west') axisOrder += 'w';\n        }\n        if (axisOrder.length === 2) axisOrder += 'u';\n        if (axisOrder.length === 3) wkt.axis = axisOrder;\n    }\n    if (wkt.UNIT) {\n        wkt.units = wkt.UNIT.name.toLowerCase();\n        if (wkt.units === 'metre') wkt.units = 'meter';\n        if (wkt.UNIT.convert) {\n            if (wkt.type === 'GEOGCS') {\n                if (wkt.DATUM && wkt.DATUM.SPHEROID) wkt.to_meter = wkt.UNIT.convert * wkt.DATUM.SPHEROID.a;\n            } else wkt.to_meter = wkt.UNIT.convert;\n        }\n    }\n    var geogcs = wkt.GEOGCS;\n    if (wkt.type === 'GEOGCS') geogcs = wkt;\n    if (geogcs) {\n        //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n        //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n        //}\n        if (geogcs.DATUM) wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n        else wkt.datumCode = geogcs.name.toLowerCase();\n        if (wkt.datumCode.slice(0, 2) === 'd_') wkt.datumCode = wkt.datumCode.slice(2);\n        if (wkt.datumCode === 'new_zealand_1949') wkt.datumCode = 'nzgd49';\n        if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n            if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') wkt.sphere = true;\n            wkt.datumCode = 'wgs84';\n        }\n        if (wkt.datumCode === 'belge_1972') wkt.datumCode = 'rnb72';\n        if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n            wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n            if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') wkt.ellps = 'intl';\n            wkt.a = geogcs.DATUM.SPHEROID.a;\n            wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n        }\n        if (geogcs.DATUM && geogcs.DATUM.TOWGS84) wkt.datum_params = geogcs.DATUM.TOWGS84;\n        if (~wkt.datumCode.indexOf('osgb_1936')) wkt.datumCode = 'osgb36';\n        if (~wkt.datumCode.indexOf('osni_1952')) wkt.datumCode = 'osni52';\n        if (~wkt.datumCode.indexOf('tm65') || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) wkt.datumCode = 'ire65';\n        if (wkt.datumCode === 'ch1903+') wkt.datumCode = 'ch1903';\n        if (~wkt.datumCode.indexOf('israel')) wkt.datumCode = 'isr93';\n    }\n    if (wkt.b && !isFinite(wkt.b)) wkt.b = wkt.a;\n    if (wkt.rectified_grid_angle) wkt.rectified_grid_angle = (0, $am47V.d2r)(wkt.rectified_grid_angle);\n    function toMeter(input) {\n        var ratio = wkt.to_meter || 1;\n        return input * ratio;\n    }\n    var renamer = function(a) {\n        return $5c3aabf591259c07$var$rename(wkt, a);\n    };\n    var list = [\n        [\n            'standard_parallel_1',\n            'Standard_Parallel_1'\n        ],\n        [\n            'standard_parallel_1',\n            'Latitude of 1st standard parallel'\n        ],\n        [\n            'standard_parallel_2',\n            'Standard_Parallel_2'\n        ],\n        [\n            'standard_parallel_2',\n            'Latitude of 2nd standard parallel'\n        ],\n        [\n            'false_easting',\n            'False_Easting'\n        ],\n        [\n            'false_easting',\n            'False easting'\n        ],\n        [\n            'false-easting',\n            'Easting at false origin'\n        ],\n        [\n            'false_northing',\n            'False_Northing'\n        ],\n        [\n            'false_northing',\n            'False northing'\n        ],\n        [\n            'false_northing',\n            'Northing at false origin'\n        ],\n        [\n            'central_meridian',\n            'Central_Meridian'\n        ],\n        [\n            'central_meridian',\n            'Longitude of natural origin'\n        ],\n        [\n            'central_meridian',\n            'Longitude of false origin'\n        ],\n        [\n            'latitude_of_origin',\n            'Latitude_Of_Origin'\n        ],\n        [\n            'latitude_of_origin',\n            'Central_Parallel'\n        ],\n        [\n            'latitude_of_origin',\n            'Latitude of natural origin'\n        ],\n        [\n            'latitude_of_origin',\n            'Latitude of false origin'\n        ],\n        [\n            'scale_factor',\n            'Scale_Factor'\n        ],\n        [\n            'k0',\n            'scale_factor'\n        ],\n        [\n            'latitude_of_center',\n            'Latitude_Of_Center'\n        ],\n        [\n            'latitude_of_center',\n            'Latitude_of_center'\n        ],\n        [\n            'lat0',\n            'latitude_of_center',\n            (0, $am47V.d2r)\n        ],\n        [\n            'longitude_of_center',\n            'Longitude_Of_Center'\n        ],\n        [\n            'longitude_of_center',\n            'Longitude_of_center'\n        ],\n        [\n            'longc',\n            'longitude_of_center',\n            (0, $am47V.d2r)\n        ],\n        [\n            'x0',\n            'false_easting',\n            toMeter\n        ],\n        [\n            'y0',\n            'false_northing',\n            toMeter\n        ],\n        [\n            'long0',\n            'central_meridian',\n            (0, $am47V.d2r)\n        ],\n        [\n            'lat0',\n            'latitude_of_origin',\n            (0, $am47V.d2r)\n        ],\n        [\n            'lat0',\n            'standard_parallel_1',\n            (0, $am47V.d2r)\n        ],\n        [\n            'lat1',\n            'standard_parallel_1',\n            (0, $am47V.d2r)\n        ],\n        [\n            'lat2',\n            'standard_parallel_2',\n            (0, $am47V.d2r)\n        ],\n        [\n            'azimuth',\n            'Azimuth'\n        ],\n        [\n            'alpha',\n            'azimuth',\n            (0, $am47V.d2r)\n        ],\n        [\n            'srsCode',\n            'name'\n        ]\n    ];\n    list.forEach(renamer);\n    (0, $am47V.applyProjectionDefaults)(wkt);\n}\nfunction $5c3aabf591259c07$export$2e2bcd8739ae039(wkt) {\n    if (typeof wkt === 'object') return (0, $hwbbo.transformPROJJSON)(wkt);\n    const version = (0, $ad1Gh.detectWKTVersion)(wkt);\n    var lisp = (0, $6Pz8X.default)(wkt);\n    if (version === 'WKT2') {\n        const projjson = (0, $5uKqK.buildPROJJSON)(lisp);\n        return (0, $hwbbo.transformPROJJSON)(projjson);\n    }\n    var type = lisp[0];\n    var obj = {};\n    (0, $7SVqc.sExpr)(lisp, obj);\n    $5c3aabf591259c07$var$cleanWKT(obj);\n    return obj[type];\n}\n\n});\nparcelRegister(\"5uKqK\", function(module, exports) {\n\n$parcel$export(module.exports, \"buildPROJJSON\", () => $4003c53a8a2e570b$export$48d0005f67ba915);\n\nvar $g1F38 = parcelRequire(\"g1F38\");\n\nvar $7HCiu = parcelRequire(\"7HCiu\");\n/**\n * Detects the WKT2 version based on the structure of the WKT.\n * @param {Array} root The root WKT array node.\n * @returns {string} The detected version (\"2015\" or \"2019\").\n */ function $4003c53a8a2e570b$var$detectWKT2Version(root) {\n    // Check for WKT2-2019-specific nodes\n    if (root.find((child)=>Array.isArray(child) && child[0] === 'USAGE')) return '2019'; // `USAGE` is specific to WKT2-2019\n    // Check for WKT2-2015-specific nodes\n    if (root.find((child)=>Array.isArray(child) && child[0] === 'CS')) return '2015'; // `CS` is valid in both, but default to 2015 unless `USAGE` is present\n    if (root[0] === 'BOUNDCRS' || root[0] === 'PROJCRS' || root[0] === 'GEOGCRS') return '2015'; // These are valid in both, but default to 2015\n    // Default to WKT2-2015 if no specific indicators are found\n    return '2015';\n}\nfunction $4003c53a8a2e570b$export$48d0005f67ba915(root) {\n    const version = $4003c53a8a2e570b$var$detectWKT2Version(root);\n    const builder = version === '2019' ? (0, $7HCiu.default) : (0, $g1F38.default);\n    return builder.convert(root);\n}\n\n});\nparcelRegister(\"g1F38\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $baac94ed6bfdac10$export$2e2bcd8739ae039);\n\nvar $fYQzQ = parcelRequire(\"fYQzQ\");\nclass $baac94ed6bfdac10$var$PROJJSONBuilder2015 extends (0, $fYQzQ.default) {\n    static convert(node, result = {}) {\n        super.convert(node, result);\n        // Skip `CS` and `USAGE` nodes for WKT2-2015\n        if (result.coordinate_system && result.coordinate_system.subtype === 'Cartesian') delete result.coordinate_system;\n        if (result.usage) delete result.usage;\n        return result;\n    }\n}\nvar $baac94ed6bfdac10$export$2e2bcd8739ae039 = $baac94ed6bfdac10$var$PROJJSONBuilder2015;\n\n});\nparcelRegister(\"fYQzQ\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $ba253e570caf793b$export$2e2bcd8739ae039);\nclass $ba253e570caf793b$var$PROJJSONBuilderBase {\n    static getId(node) {\n        const idNode = node.find((child)=>Array.isArray(child) && child[0] === 'ID');\n        if (idNode && idNode.length >= 3) return {\n            authority: idNode[1],\n            code: parseInt(idNode[2], 10)\n        };\n        return null;\n    }\n    static convertUnit(node, type = 'unit') {\n        if (!node || node.length < 3) return {\n            type: type,\n            name: 'unknown',\n            conversion_factor: null\n        };\n        const name = node[1];\n        const conversionFactor = parseFloat(node[2]) || null;\n        const idNode = node.find((child)=>Array.isArray(child) && child[0] === 'ID');\n        const id = idNode ? {\n            authority: idNode[1],\n            code: parseInt(idNode[2], 10)\n        } : null;\n        return {\n            type: type,\n            name: name,\n            conversion_factor: conversionFactor,\n            id: id\n        };\n    }\n    static convertAxis(node) {\n        const name = node[1] || 'Unknown';\n        // Determine the direction\n        let direction;\n        const abbreviationMatch = name.match(/^\\((.)\\)$/); // Match abbreviations like \"(E)\" or \"(N)\"\n        if (abbreviationMatch) {\n            // Use the abbreviation to determine the direction\n            const abbreviation = abbreviationMatch[1].toUpperCase();\n            if (abbreviation === 'E') direction = 'east';\n            else if (abbreviation === 'N') direction = 'north';\n            else if (abbreviation === 'U') direction = 'up';\n            else throw new Error(`Unknown axis abbreviation: ${abbreviation}`);\n        } else // Use the explicit direction provided in the AXIS node\n        direction = node[2] ? node[2].toLowerCase() : 'unknown';\n        const orderNode = node.find((child)=>Array.isArray(child) && child[0] === 'ORDER');\n        const order = orderNode ? parseInt(orderNode[1], 10) : null;\n        const unitNode = node.find((child)=>Array.isArray(child) && (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT'));\n        const unit = this.convertUnit(unitNode);\n        return {\n            name: name,\n            direction: direction,\n            unit: unit,\n            order: order\n        };\n    }\n    static extractAxes(node) {\n        return node.filter((child)=>Array.isArray(child) && child[0] === 'AXIS').map((axis)=>this.convertAxis(axis)).sort((a, b)=>(a.order || 0) - (b.order || 0)); // Sort by the \"order\" property\n    }\n    static convert(node, result = {}) {\n        switch(node[0]){\n            case 'PROJCRS':\n                result.type = 'ProjectedCRS';\n                result.name = node[1];\n                result.base_crs = node.find((child)=>Array.isArray(child) && child[0] === 'BASEGEOGCRS') ? this.convert(node.find((child)=>Array.isArray(child) && child[0] === 'BASEGEOGCRS')) : null;\n                result.conversion = node.find((child)=>Array.isArray(child) && child[0] === 'CONVERSION') ? this.convert(node.find((child)=>Array.isArray(child) && child[0] === 'CONVERSION')) : null;\n                const csNode = node.find((child)=>Array.isArray(child) && child[0] === 'CS');\n                if (csNode) result.coordinate_system = {\n                    type: csNode[1],\n                    axis: this.extractAxes(node)\n                };\n                const lengthUnitNode = node.find((child)=>Array.isArray(child) && child[0] === 'LENGTHUNIT');\n                if (lengthUnitNode) {\n                    const unit = this.convertUnit(lengthUnitNode);\n                    result.coordinate_system.unit = unit; // Add unit to coordinate_system\n                }\n                result.id = this.getId(node);\n                break;\n            case 'BASEGEOGCRS':\n            case 'GEOGCRS':\n                result.type = 'GeographicCRS';\n                result.name = node[1];\n                // Handle DATUM or ENSEMBLE\n                const datumOrEnsembleNode = node.find((child)=>Array.isArray(child) && (child[0] === 'DATUM' || child[0] === 'ENSEMBLE'));\n                if (datumOrEnsembleNode) {\n                    const datumOrEnsemble = this.convert(datumOrEnsembleNode);\n                    if (datumOrEnsembleNode[0] === 'ENSEMBLE') result.datum_ensemble = datumOrEnsemble;\n                    else result.datum = datumOrEnsemble;\n                    const primem = node.find((child)=>Array.isArray(child) && child[0] === 'PRIMEM');\n                    if (primem && primem[1] !== 'Greenwich') datumOrEnsemble.prime_meridian = {\n                        name: primem[1],\n                        longitude: parseFloat(primem[2])\n                    };\n                }\n                result.coordinate_system = {\n                    type: 'ellipsoidal',\n                    axis: this.extractAxes(node)\n                };\n                result.id = this.getId(node);\n                break;\n            case 'DATUM':\n                result.type = 'GeodeticReferenceFrame';\n                result.name = node[1];\n                result.ellipsoid = node.find((child)=>Array.isArray(child) && child[0] === 'ELLIPSOID') ? this.convert(node.find((child)=>Array.isArray(child) && child[0] === 'ELLIPSOID')) : null;\n                break;\n            case 'ENSEMBLE':\n                result.type = 'DatumEnsemble';\n                result.name = node[1];\n                // Extract ensemble members\n                result.members = node.filter((child)=>Array.isArray(child) && child[0] === 'MEMBER').map((member)=>({\n                        type: 'DatumEnsembleMember',\n                        name: member[1],\n                        id: this.getId(member)\n                    }));\n                // Extract accuracy\n                const accuracyNode = node.find((child)=>Array.isArray(child) && child[0] === 'ENSEMBLEACCURACY');\n                if (accuracyNode) result.accuracy = parseFloat(accuracyNode[1]);\n                // Extract ellipsoid\n                const ellipsoidNode = node.find((child)=>Array.isArray(child) && child[0] === 'ELLIPSOID');\n                if (ellipsoidNode) result.ellipsoid = this.convert(ellipsoidNode); // Convert the ellipsoid node\n                // Extract identifier for the ensemble\n                result.id = this.getId(node);\n                break;\n            case 'ELLIPSOID':\n                result.type = 'Ellipsoid';\n                result.name = node[1];\n                result.semi_major_axis = parseFloat(node[2]);\n                result.inverse_flattening = parseFloat(node[3]);\n                const units = node.find((child)=>Array.isArray(child) && child[0] === 'LENGTHUNIT') ? this.convert(node.find((child)=>Array.isArray(child) && child[0] === 'LENGTHUNIT'), result) : null;\n                break;\n            case 'CONVERSION':\n                result.type = 'Conversion';\n                result.name = node[1];\n                result.method = node.find((child)=>Array.isArray(child) && child[0] === 'METHOD') ? this.convert(node.find((child)=>Array.isArray(child) && child[0] === 'METHOD')) : null;\n                result.parameters = node.filter((child)=>Array.isArray(child) && child[0] === 'PARAMETER').map((param)=>this.convert(param));\n                break;\n            case 'METHOD':\n                result.type = 'Method';\n                result.name = node[1];\n                result.id = this.getId(node);\n                break;\n            case 'PARAMETER':\n                result.type = 'Parameter';\n                result.name = node[1];\n                result.value = parseFloat(node[2]);\n                result.unit = this.convertUnit(node.find((child)=>Array.isArray(child) && (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')));\n                result.id = this.getId(node);\n                break;\n            case 'BOUNDCRS':\n                result.type = 'BoundCRS';\n                // Process SOURCECRS\n                const sourceCrsNode = node.find((child)=>Array.isArray(child) && child[0] === 'SOURCECRS');\n                if (sourceCrsNode) {\n                    const sourceCrsContent = sourceCrsNode.find((child)=>Array.isArray(child));\n                    result.source_crs = sourceCrsContent ? this.convert(sourceCrsContent) : null;\n                }\n                // Process TARGETCRS\n                const targetCrsNode = node.find((child)=>Array.isArray(child) && child[0] === 'TARGETCRS');\n                if (targetCrsNode) {\n                    const targetCrsContent = targetCrsNode.find((child)=>Array.isArray(child));\n                    result.target_crs = targetCrsContent ? this.convert(targetCrsContent) : null;\n                }\n                // Process ABRIDGEDTRANSFORMATION\n                const transformationNode = node.find((child)=>Array.isArray(child) && child[0] === 'ABRIDGEDTRANSFORMATION');\n                if (transformationNode) result.transformation = this.convert(transformationNode);\n                else result.transformation = null;\n                break;\n            case 'ABRIDGEDTRANSFORMATION':\n                result.type = 'Transformation';\n                result.name = node[1];\n                result.method = node.find((child)=>Array.isArray(child) && child[0] === 'METHOD') ? this.convert(node.find((child)=>Array.isArray(child) && child[0] === 'METHOD')) : null;\n                result.parameters = node.filter((child)=>Array.isArray(child) && (child[0] === 'PARAMETER' || child[0] === 'PARAMETERFILE')).map((param)=>{\n                    if (param[0] === 'PARAMETER') return this.convert(param);\n                    else if (param[0] === 'PARAMETERFILE') return {\n                        name: param[1],\n                        value: param[2],\n                        id: {\n                            'authority': 'EPSG',\n                            'code': 8656\n                        }\n                    };\n                });\n                // Adjust the Scale difference parameter if present\n                if (result.parameters.length === 7) {\n                    const scaleDifference = result.parameters[6];\n                    if (scaleDifference.name === 'Scale difference') scaleDifference.value = Math.round((scaleDifference.value - 1) * 1e12) / 1e6;\n                }\n                result.id = this.getId(node);\n                break;\n            case 'AXIS':\n                if (!result.coordinate_system) result.coordinate_system = {\n                    type: 'unspecified',\n                    axis: []\n                };\n                result.coordinate_system.axis.push(this.convertAxis(node));\n                break;\n            case 'LENGTHUNIT':\n                const unit = this.convertUnit(node, 'LinearUnit');\n                if (result.coordinate_system && result.coordinate_system.axis) result.coordinate_system.axis.forEach((axis)=>{\n                    if (!axis.unit) axis.unit = unit;\n                });\n                if (unit.conversion_factor && unit.conversion_factor !== 1) {\n                    if (result.semi_major_axis) result.semi_major_axis = {\n                        value: result.semi_major_axis,\n                        unit: unit\n                    };\n                }\n                break;\n            default:\n                result.keyword = node[0];\n                break;\n        }\n        return result;\n    }\n}\nvar $ba253e570caf793b$export$2e2bcd8739ae039 = $ba253e570caf793b$var$PROJJSONBuilderBase;\n\n});\n\n\nparcelRegister(\"7HCiu\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $59ba41957df98247$export$2e2bcd8739ae039);\n\nvar $fYQzQ = parcelRequire(\"fYQzQ\");\nclass $59ba41957df98247$var$PROJJSONBuilder2019 extends (0, $fYQzQ.default) {\n    static convert(node, result = {}) {\n        super.convert(node, result);\n        // Handle `CS` node for WKT2-2019\n        const csNode = node.find((child)=>Array.isArray(child) && child[0] === 'CS');\n        if (csNode) result.coordinate_system = {\n            subtype: csNode[1],\n            axis: this.extractAxes(node)\n        };\n        // Handle `USAGE` node for WKT2-2019\n        const usageNode = node.find((child)=>Array.isArray(child) && child[0] === 'USAGE');\n        if (usageNode) {\n            const scope = usageNode.find((child)=>Array.isArray(child) && child[0] === 'SCOPE');\n            const area = usageNode.find((child)=>Array.isArray(child) && child[0] === 'AREA');\n            const bbox = usageNode.find((child)=>Array.isArray(child) && child[0] === 'BBOX');\n            result.usage = {};\n            if (scope) result.usage.scope = scope[1];\n            if (area) result.usage.area = area[1];\n            if (bbox) result.usage.bbox = bbox.slice(1);\n        }\n        return result;\n    }\n}\nvar $59ba41957df98247$export$2e2bcd8739ae039 = $59ba41957df98247$var$PROJJSONBuilder2019;\n\n});\n\n\nparcelRegister(\"ad1Gh\", function(module, exports) {\n\n$parcel$export(module.exports, \"detectWKTVersion\", () => $76ec6c11849d6ec6$export$9362d65e4771b5d5);\n/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */ function $76ec6c11849d6ec6$export$9362d65e4771b5d5(wkt) {\n    // Normalize the WKT string for easier keyword matching\n    const normalizedWKT = wkt.toUpperCase();\n    // Check for WKT2-specific keywords\n    if (normalizedWKT.includes('PROJCRS') || normalizedWKT.includes('GEOGCRS') || normalizedWKT.includes('BOUNDCRS') || normalizedWKT.includes('VERTCRS') || normalizedWKT.includes('LENGTHUNIT') || normalizedWKT.includes('ANGLEUNIT') || normalizedWKT.includes('SCALEUNIT')) return 'WKT2';\n    // Check for WKT1-specific keywords\n    if (normalizedWKT.includes('PROJCS') || normalizedWKT.includes('GEOGCS') || normalizedWKT.includes('LOCAL_CS') || normalizedWKT.includes('VERT_CS') || normalizedWKT.includes('UNIT')) return 'WKT1';\n    // Default to WKT1 if no specific indicators are found\n    return 'WKT1';\n}\n\n});\n\nparcelRegister(\"6Pz8X\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $4f92c43f9960a1f4$export$2e2bcd8739ae039);\nvar $4f92c43f9960a1f4$export$2e2bcd8739ae039 = $4f92c43f9960a1f4$var$parseString;\nvar $4f92c43f9960a1f4$var$NEUTRAL = 1;\nvar $4f92c43f9960a1f4$var$KEYWORD = 2;\nvar $4f92c43f9960a1f4$var$NUMBER = 3;\nvar $4f92c43f9960a1f4$var$QUOTED = 4;\nvar $4f92c43f9960a1f4$var$AFTERQUOTE = 5;\nvar $4f92c43f9960a1f4$var$ENDED = -1;\nvar $4f92c43f9960a1f4$var$whitespace = /\\s/;\nvar $4f92c43f9960a1f4$var$latin = /[A-Za-z]/;\nvar $4f92c43f9960a1f4$var$keyword = /[A-Za-z84_]/;\nvar $4f92c43f9960a1f4$var$endThings = /[,\\]]/;\nvar $4f92c43f9960a1f4$var$digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction $4f92c43f9960a1f4$var$Parser(text) {\n    if (typeof text !== 'string') throw new Error('not a string');\n    this.text = text.trim();\n    this.level = 0;\n    this.place = 0;\n    this.root = null;\n    this.stack = [];\n    this.currentObject = null;\n    this.state = $4f92c43f9960a1f4$var$NEUTRAL;\n}\n$4f92c43f9960a1f4$var$Parser.prototype.readCharicter = function() {\n    var char = this.text[this.place++];\n    if (this.state !== $4f92c43f9960a1f4$var$QUOTED) while($4f92c43f9960a1f4$var$whitespace.test(char)){\n        if (this.place >= this.text.length) return;\n        char = this.text[this.place++];\n    }\n    switch(this.state){\n        case $4f92c43f9960a1f4$var$NEUTRAL:\n            return this.neutral(char);\n        case $4f92c43f9960a1f4$var$KEYWORD:\n            return this.keyword(char);\n        case $4f92c43f9960a1f4$var$QUOTED:\n            return this.quoted(char);\n        case $4f92c43f9960a1f4$var$AFTERQUOTE:\n            return this.afterquote(char);\n        case $4f92c43f9960a1f4$var$NUMBER:\n            return this.number(char);\n        case $4f92c43f9960a1f4$var$ENDED:\n            return;\n    }\n};\n$4f92c43f9960a1f4$var$Parser.prototype.afterquote = function(char) {\n    if (char === '\"') {\n        this.word += '\"';\n        this.state = $4f92c43f9960a1f4$var$QUOTED;\n        return;\n    }\n    if ($4f92c43f9960a1f4$var$endThings.test(char)) {\n        this.word = this.word.trim();\n        this.afterItem(char);\n        return;\n    }\n    throw new Error('havn\\'t handled \"' + char + '\" in afterquote yet, index ' + this.place);\n};\n$4f92c43f9960a1f4$var$Parser.prototype.afterItem = function(char) {\n    if (char === ',') {\n        if (this.word !== null) this.currentObject.push(this.word);\n        this.word = null;\n        this.state = $4f92c43f9960a1f4$var$NEUTRAL;\n        return;\n    }\n    if (char === ']') {\n        this.level--;\n        if (this.word !== null) {\n            this.currentObject.push(this.word);\n            this.word = null;\n        }\n        this.state = $4f92c43f9960a1f4$var$NEUTRAL;\n        this.currentObject = this.stack.pop();\n        if (!this.currentObject) this.state = $4f92c43f9960a1f4$var$ENDED;\n        return;\n    }\n};\n$4f92c43f9960a1f4$var$Parser.prototype.number = function(char) {\n    if ($4f92c43f9960a1f4$var$digets.test(char)) {\n        this.word += char;\n        return;\n    }\n    if ($4f92c43f9960a1f4$var$endThings.test(char)) {\n        this.word = parseFloat(this.word);\n        this.afterItem(char);\n        return;\n    }\n    throw new Error('havn\\'t handled \"' + char + '\" in number yet, index ' + this.place);\n};\n$4f92c43f9960a1f4$var$Parser.prototype.quoted = function(char) {\n    if (char === '\"') {\n        this.state = $4f92c43f9960a1f4$var$AFTERQUOTE;\n        return;\n    }\n    this.word += char;\n    return;\n};\n$4f92c43f9960a1f4$var$Parser.prototype.keyword = function(char) {\n    if ($4f92c43f9960a1f4$var$keyword.test(char)) {\n        this.word += char;\n        return;\n    }\n    if (char === '[') {\n        var newObjects = [];\n        newObjects.push(this.word);\n        this.level++;\n        if (this.root === null) this.root = newObjects;\n        else this.currentObject.push(newObjects);\n        this.stack.push(this.currentObject);\n        this.currentObject = newObjects;\n        this.state = $4f92c43f9960a1f4$var$NEUTRAL;\n        return;\n    }\n    if ($4f92c43f9960a1f4$var$endThings.test(char)) {\n        this.afterItem(char);\n        return;\n    }\n    throw new Error('havn\\'t handled \"' + char + '\" in keyword yet, index ' + this.place);\n};\n$4f92c43f9960a1f4$var$Parser.prototype.neutral = function(char) {\n    if ($4f92c43f9960a1f4$var$latin.test(char)) {\n        this.word = char;\n        this.state = $4f92c43f9960a1f4$var$KEYWORD;\n        return;\n    }\n    if (char === '\"') {\n        this.word = '';\n        this.state = $4f92c43f9960a1f4$var$QUOTED;\n        return;\n    }\n    if ($4f92c43f9960a1f4$var$digets.test(char)) {\n        this.word = char;\n        this.state = $4f92c43f9960a1f4$var$NUMBER;\n        return;\n    }\n    if ($4f92c43f9960a1f4$var$endThings.test(char)) {\n        this.afterItem(char);\n        return;\n    }\n    throw new Error('havn\\'t handled \"' + char + '\" in neutral yet, index ' + this.place);\n};\n$4f92c43f9960a1f4$var$Parser.prototype.output = function() {\n    while(this.place < this.text.length)this.readCharicter();\n    if (this.state === $4f92c43f9960a1f4$var$ENDED) return this.root;\n    throw new Error('unable to parse string \"' + this.text + '\". State is ' + this.state);\n};\nfunction $4f92c43f9960a1f4$var$parseString(txt) {\n    var parser = new $4f92c43f9960a1f4$var$Parser(txt);\n    return parser.output();\n}\n\n});\n\nparcelRegister(\"7SVqc\", function(module, exports) {\n\n$parcel$export(module.exports, \"sExpr\", () => $5bda1e467f1c2649$export$337bc7a3aef1f775);\nfunction $5bda1e467f1c2649$var$mapit(obj, key, value) {\n    if (Array.isArray(key)) {\n        value.unshift(key);\n        key = null;\n    }\n    var thing = key ? {} : obj;\n    var out = value.reduce(function(newObj, item) {\n        $5bda1e467f1c2649$export$337bc7a3aef1f775(item, newObj);\n        return newObj;\n    }, thing);\n    if (key) obj[key] = out;\n}\nfunction $5bda1e467f1c2649$export$337bc7a3aef1f775(v, obj) {\n    if (!Array.isArray(v)) {\n        obj[v] = true;\n        return;\n    }\n    var key = v.shift();\n    if (key === 'PARAMETER') key = v.shift();\n    if (v.length === 1) {\n        if (Array.isArray(v[0])) {\n            obj[key] = {};\n            $5bda1e467f1c2649$export$337bc7a3aef1f775(v[0], obj[key]);\n            return;\n        }\n        obj[key] = v[0];\n        return;\n    }\n    if (!v.length) {\n        obj[key] = true;\n        return;\n    }\n    if (key === 'TOWGS84') {\n        obj[key] = v;\n        return;\n    }\n    if (key === 'AXIS') {\n        if (!(key in obj)) obj[key] = [];\n        obj[key].push(v);\n        return;\n    }\n    if (!Array.isArray(key)) obj[key] = {};\n    var i;\n    switch(key){\n        case 'UNIT':\n        case 'PRIMEM':\n        case 'VERT_DATUM':\n            obj[key] = {\n                name: v[0].toLowerCase(),\n                convert: v[1]\n            };\n            if (v.length === 3) $5bda1e467f1c2649$export$337bc7a3aef1f775(v[2], obj[key]);\n            return;\n        case 'SPHEROID':\n        case 'ELLIPSOID':\n            obj[key] = {\n                name: v[0],\n                a: v[1],\n                rf: v[2]\n            };\n            if (v.length === 4) $5bda1e467f1c2649$export$337bc7a3aef1f775(v[3], obj[key]);\n            return;\n        case 'EDATUM':\n        case 'ENGINEERINGDATUM':\n        case 'LOCAL_DATUM':\n        case 'DATUM':\n        case 'VERT_CS':\n        case 'VERTCRS':\n        case 'VERTICALCRS':\n            v[0] = [\n                'name',\n                v[0]\n            ];\n            $5bda1e467f1c2649$var$mapit(obj, key, v);\n            return;\n        case 'COMPD_CS':\n        case 'COMPOUNDCRS':\n        case 'FITTED_CS':\n        // the followings are the crs defined in\n        // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n        case 'PROJECTEDCRS':\n        case 'PROJCRS':\n        case 'GEOGCS':\n        case 'GEOCCS':\n        case 'PROJCS':\n        case 'LOCAL_CS':\n        case 'GEODCRS':\n        case 'GEODETICCRS':\n        case 'GEODETICDATUM':\n        case 'ENGCRS':\n        case 'ENGINEERINGCRS':\n            v[0] = [\n                'name',\n                v[0]\n            ];\n            $5bda1e467f1c2649$var$mapit(obj, key, v);\n            obj[key].type = key;\n            return;\n        default:\n            i = -1;\n            while(++i < v.length){\n                if (!Array.isArray(v[i])) return $5bda1e467f1c2649$export$337bc7a3aef1f775(v, obj[key]);\n            }\n            return $5bda1e467f1c2649$var$mapit(obj, key, v);\n    }\n}\n\n});\n\nparcelRegister(\"hwbbo\", function(module, exports) {\n\n$parcel$export(module.exports, \"transformPROJJSON\", () => $cc0e197ab4726924$export$b04e619e90585ec3);\n\nvar $am47V = parcelRequire(\"am47V\");\n// Helper function to process units and to_meter\nfunction $cc0e197ab4726924$var$processUnit(unit) {\n    let result = {\n        units: null,\n        to_meter: undefined\n    };\n    if (typeof unit === 'string') {\n        result.units = unit.toLowerCase();\n        if (result.units === 'metre') result.units = 'meter'; // Normalize 'metre' to 'meter'\n        if (result.units === 'meter') result.to_meter = 1; // Only set to_meter if units are 'meter'\n    } else if (unit && unit.name) {\n        result.units = unit.name.toLowerCase();\n        if (result.units === 'metre') result.units = 'meter'; // Normalize 'metre' to 'meter'\n        result.to_meter = unit.conversion_factor;\n    }\n    return result;\n}\nfunction $cc0e197ab4726924$var$toValue(valueOrObject) {\n    if (typeof valueOrObject === 'object') return valueOrObject.value * valueOrObject.unit.conversion_factor;\n    return valueOrObject;\n}\nfunction $cc0e197ab4726924$var$calculateEllipsoid(value, result) {\n    if (value.ellipsoid.radius) {\n        result.a = value.ellipsoid.radius;\n        result.rf = 0;\n    } else {\n        result.a = $cc0e197ab4726924$var$toValue(value.ellipsoid.semi_major_axis);\n        if (value.ellipsoid.inverse_flattening !== undefined) result.rf = value.ellipsoid.inverse_flattening;\n        else if (value.ellipsoid.semi_major_axis !== undefined && value.ellipsoid.semi_minor_axis !== undefined) result.rf = result.a / (result.a - $cc0e197ab4726924$var$toValue(value.ellipsoid.semi_minor_axis));\n    }\n}\nfunction $cc0e197ab4726924$export$b04e619e90585ec3(projjson, result = {}) {\n    if (!projjson || typeof projjson !== 'object') return projjson; // Return primitive values as-is\n    if (projjson.type === 'BoundCRS') {\n        $cc0e197ab4726924$export$b04e619e90585ec3(projjson.source_crs, result);\n        if (projjson.transformation) {\n            if (projjson.transformation.method && projjson.transformation.method.name === 'NTv2') // Set nadgrids to the filename from the parameterfile\n            result.nadgrids = projjson.transformation.parameters[0].value;\n            else // Populate datum_params if no parameterfile is found\n            result.datum_params = projjson.transformation.parameters.map((param)=>param.value);\n        }\n        return result; // Return early for BoundCRS\n    }\n    // Handle specific keys in PROJJSON\n    Object.keys(projjson).forEach((key)=>{\n        const value = projjson[key];\n        if (value === null) return;\n        switch(key){\n            case 'name':\n                if (result.srsCode) break;\n                result.name = value;\n                result.srsCode = value; // Map `name` to `srsCode`\n                break;\n            case 'type':\n                if (value === 'GeographicCRS') result.projName = 'longlat';\n                else if (value === 'ProjectedCRS' && projjson.conversion && projjson.conversion.method) result.projName = projjson.conversion.method.name; // Retain original capitalization\n                break;\n            case 'datum':\n            case 'datum_ensemble':\n                if (value.ellipsoid) {\n                    // Extract ellipsoid properties\n                    result.ellps = value.ellipsoid.name;\n                    $cc0e197ab4726924$var$calculateEllipsoid(value, result);\n                }\n                if (value.prime_meridian) result.from_greenwich = value.prime_meridian.longitude * Math.PI / 180; // Convert to radians\n                break;\n            case 'ellipsoid':\n                result.ellps = value.name;\n                $cc0e197ab4726924$var$calculateEllipsoid(value, result);\n                break;\n            case 'prime_meridian':\n                result.long0 = (value.longitude || 0) * Math.PI / 180; // Convert to radians\n                break;\n            case 'coordinate_system':\n                if (value.axis) {\n                    result.axis = value.axis.map((axis)=>{\n                        const direction = axis.direction;\n                        if (direction === 'east') return 'e';\n                        if (direction === 'north') return 'n';\n                        if (direction === 'west') return 'w';\n                        if (direction === 'south') return 's';\n                        throw new Error(`Unknown axis direction: ${direction}`);\n                    }).join('') + 'u'; // Combine into a single string (e.g., \"enu\")\n                    if (value.unit) {\n                        const { units: units, to_meter: to_meter } = $cc0e197ab4726924$var$processUnit(value.unit);\n                        result.units = units;\n                        result.to_meter = to_meter;\n                    } else if (value.axis[0] && value.axis[0].unit) {\n                        const { units: units, to_meter: to_meter } = $cc0e197ab4726924$var$processUnit(value.axis[0].unit);\n                        result.units = units;\n                        result.to_meter = to_meter;\n                    }\n                }\n                break;\n            case 'id':\n                if (value.authority && value.code) result.title = value.authority + ':' + value.code;\n                break;\n            case 'conversion':\n                if (value.method && value.method.name) result.projName = value.method.name; // Retain original capitalization\n                if (value.parameters) value.parameters.forEach((param)=>{\n                    const paramName = param.name.toLowerCase().replace(/\\s+/g, '_');\n                    const paramValue = param.value;\n                    if (param.unit && param.unit.conversion_factor) result[paramName] = paramValue * param.unit.conversion_factor; // Convert to radians or meters\n                    else if (param.unit === 'degree') result[paramName] = paramValue * Math.PI / 180; // Convert to radians\n                    else result[paramName] = paramValue;\n                });\n                break;\n            case 'unit':\n                if (value.name) {\n                    result.units = value.name.toLowerCase();\n                    if (result.units === 'metre') result.units = 'meter';\n                }\n                if (value.conversion_factor) result.to_meter = value.conversion_factor;\n                break;\n            case 'base_crs':\n                $cc0e197ab4726924$export$b04e619e90585ec3(value, result); // Pass `result` directly\n                result.datumCode = value.id ? value.id.authority + '_' + value.id.code : value.name; // Set datumCode\n                break;\n            default:\n                break;\n        }\n    });\n    // Additional calculated properties\n    if (result.latitude_of_false_origin !== undefined) result.lat0 = result.latitude_of_false_origin; // Already in radians\n    if (result.longitude_of_false_origin !== undefined) result.long0 = result.longitude_of_false_origin;\n    if (result.latitude_of_standard_parallel !== undefined) {\n        result.lat0 = result.latitude_of_standard_parallel;\n        result.lat1 = result.latitude_of_standard_parallel;\n    }\n    if (result.latitude_of_1st_standard_parallel !== undefined) result.lat1 = result.latitude_of_1st_standard_parallel;\n    if (result.latitude_of_2nd_standard_parallel !== undefined) result.lat2 = result.latitude_of_2nd_standard_parallel;\n    if (result.latitude_of_projection_centre !== undefined) result.lat0 = result.latitude_of_projection_centre;\n    if (result.longitude_of_projection_centre !== undefined) result.longc = result.longitude_of_projection_centre;\n    if (result.easting_at_false_origin !== undefined) result.x0 = result.easting_at_false_origin;\n    if (result.northing_at_false_origin !== undefined) result.y0 = result.northing_at_false_origin;\n    if (result.latitude_of_natural_origin !== undefined) result.lat0 = result.latitude_of_natural_origin;\n    if (result.longitude_of_natural_origin !== undefined) result.long0 = result.longitude_of_natural_origin;\n    if (result.longitude_of_origin !== undefined) result.long0 = result.longitude_of_origin;\n    if (result.false_easting !== undefined) result.x0 = result.false_easting;\n    if (result.easting_at_projection_centre) result.x0 = result.easting_at_projection_centre;\n    if (result.false_northing !== undefined) result.y0 = result.false_northing;\n    if (result.northing_at_projection_centre) result.y0 = result.northing_at_projection_centre;\n    if (result.standard_parallel_1 !== undefined) result.lat1 = result.standard_parallel_1;\n    if (result.standard_parallel_2 !== undefined) result.lat2 = result.standard_parallel_2;\n    if (result.scale_factor_at_natural_origin !== undefined) result.k0 = result.scale_factor_at_natural_origin;\n    if (result.scale_factor_at_projection_centre !== undefined) result.k0 = result.scale_factor_at_projection_centre;\n    if (result.scale_factor_on_pseudo_standard_parallel !== undefined) result.k0 = result.scale_factor_on_pseudo_standard_parallel;\n    if (result.azimuth !== undefined) result.alpha = result.azimuth;\n    if (result.azimuth_at_projection_centre !== undefined) result.alpha = result.azimuth_at_projection_centre;\n    if (result.angle_from_rectified_to_skew_grid) result.rectified_grid_angle = result.angle_from_rectified_to_skew_grid;\n    // Apply projection defaults\n    (0, $am47V.applyProjectionDefaults)(result);\n    return result;\n}\n\n});\nparcelRegister(\"am47V\", function(module, exports) {\n\n$parcel$export(module.exports, \"d2r\", () => $789f28efd4cd941a$export$e726aea149b4fd71);\n$parcel$export(module.exports, \"applyProjectionDefaults\", () => $789f28efd4cd941a$export$d6def86a6ec68808);\nvar $789f28efd4cd941a$var$D2R = 0.01745329251994329577;\nfunction $789f28efd4cd941a$export$e726aea149b4fd71(input) {\n    return input * $789f28efd4cd941a$var$D2R;\n}\nfunction $789f28efd4cd941a$export$d6def86a6ec68808(wkt) {\n    // Normalize projName for WKT2 compatibility\n    const normalizedProjName = (wkt.projName || '').toLowerCase().replace(/_/g, ' ');\n    if (!wkt.long0 && wkt.longc && (normalizedProjName === 'albers conic equal area' || normalizedProjName === 'lambert azimuthal equal area')) wkt.long0 = wkt.longc;\n    if (!wkt.lat_ts && wkt.lat1 && (normalizedProjName === 'stereographic south pole' || normalizedProjName === 'polar stereographic (variant b)')) {\n        wkt.lat0 = $789f28efd4cd941a$export$e726aea149b4fd71(wkt.lat1 > 0 ? 90 : -90);\n        wkt.lat_ts = wkt.lat1;\n        delete wkt.lat1;\n    } else if (!wkt.lat_ts && wkt.lat0 && (normalizedProjName === 'polar stereographic' || normalizedProjName === 'polar stereographic (variant a)')) {\n        wkt.lat_ts = wkt.lat0;\n        wkt.lat0 = $789f28efd4cd941a$export$e726aea149b4fd71(wkt.lat0 > 0 ? 90 : -90);\n        delete wkt.lat1;\n    }\n}\n\n});\n\n\n\n\n\nparcelRegister(\"cWauz\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $96b30a4c80088893$export$2e2bcd8739ae039);\nfunction $96b30a4c80088893$export$2e2bcd8739ae039(destination, source) {\n    destination = destination || {};\n    var value, property;\n    if (!source) return destination;\n    for(property in source){\n        value = source[property];\n        if (value !== undefined) destination[property] = value;\n    }\n    return destination;\n}\n\n});\n\nparcelRegister(\"1Wo5P\", function(module, exports) {\n\n$parcel$export(module.exports, \"getNormalizedProjName\", () => $169de593aeaa174c$export$9ee0bb5510679155);\n$parcel$export(module.exports, \"default\", () => $169de593aeaa174c$export$2e2bcd8739ae039);\n\nvar $ioIYn = parcelRequire(\"ioIYn\");\n\nvar $iMMJV = parcelRequire(\"iMMJV\");\nvar $169de593aeaa174c$var$projs = [\n    (0, $ioIYn.default),\n    (0, $iMMJV.default)\n];\nvar $169de593aeaa174c$var$names = {};\nvar $169de593aeaa174c$var$projStore = [];\nfunction $169de593aeaa174c$export$e16d8520af44a096(proj, i) {\n    var len = $169de593aeaa174c$var$projStore.length;\n    if (!proj.names) {\n        console.log(i);\n        return true;\n    }\n    $169de593aeaa174c$var$projStore[len] = proj;\n    proj.names.forEach(function(n) {\n        $169de593aeaa174c$var$names[n.toLowerCase()] = len;\n    });\n    return this;\n}\nfunction $169de593aeaa174c$export$9ee0bb5510679155(n) {\n    return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\nfunction $169de593aeaa174c$export$3988ae62b71be9a3(name) {\n    if (!name) return false;\n    var n = name.toLowerCase();\n    if (typeof $169de593aeaa174c$var$names[n] !== 'undefined' && $169de593aeaa174c$var$projStore[$169de593aeaa174c$var$names[n]]) return $169de593aeaa174c$var$projStore[$169de593aeaa174c$var$names[n]];\n    n = $169de593aeaa174c$export$9ee0bb5510679155(n);\n    if (n in $169de593aeaa174c$var$names && $169de593aeaa174c$var$projStore[$169de593aeaa174c$var$names[n]]) return $169de593aeaa174c$var$projStore[$169de593aeaa174c$var$names[n]];\n}\nfunction $169de593aeaa174c$export$b3571188c770cc5a() {\n    $169de593aeaa174c$var$projs.forEach($169de593aeaa174c$export$e16d8520af44a096);\n}\nvar $169de593aeaa174c$export$2e2bcd8739ae039 = {\n    start: $169de593aeaa174c$export$b3571188c770cc5a,\n    add: $169de593aeaa174c$export$e16d8520af44a096,\n    get: $169de593aeaa174c$export$3988ae62b71be9a3\n};\n\n});\nparcelRegister(\"ioIYn\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $d64d5a882433f366$export$2e2bcd8739ae039);\n\nvar $bi5ZC = parcelRequire(\"bi5ZC\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $3xC66 = parcelRequire(\"3xC66\");\n\nvar $2AZR8 = parcelRequire(\"2AZR8\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $d64d5a882433f366$export$2cd8252107eb640b() {\n    var con = this.b / this.a;\n    this.es = 1 - con * con;\n    if (!('x0' in this)) this.x0 = 0;\n    if (!('y0' in this)) this.y0 = 0;\n    this.e = Math.sqrt(this.es);\n    if (this.lat_ts) {\n        if (this.sphere) this.k0 = Math.cos(this.lat_ts);\n        else this.k0 = (0, $bi5ZC.default)(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    } else if (!this.k0) {\n        if (this.k) this.k0 = this.k;\n        else this.k0 = 1;\n    }\n}\nfunction $d64d5a882433f366$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    // convert to radians\n    if (lat * (0, $gyVUi.R2D) > 90 && lat * (0, $gyVUi.R2D) < -90 && lon * (0, $gyVUi.R2D) > 180 && lon * (0, $gyVUi.R2D) < -180) return null;\n    var x, y;\n    if (Math.abs(Math.abs(lat) - (0, $gyVUi.HALF_PI)) <= (0, $gyVUi.EPSLN)) return null;\n    else {\n        if (this.sphere) {\n            x = this.x0 + this.a * this.k0 * (0, $a9oRf.default)(lon - this.long0);\n            y = this.y0 + this.a * this.k0 * Math.log(Math.tan((0, $gyVUi.FORTPI) + 0.5 * lat));\n        } else {\n            var sinphi = Math.sin(lat);\n            var ts = (0, $3xC66.default)(this.e, lat, sinphi);\n            x = this.x0 + this.a * this.k0 * (0, $a9oRf.default)(lon - this.long0);\n            y = this.y0 - this.a * this.k0 * Math.log(ts);\n        }\n        p.x = x;\n        p.y = y;\n        return p;\n    }\n}\nfunction $d64d5a882433f366$export$70ae2c07e401031b(p) {\n    var x = p.x - this.x0;\n    var y = p.y - this.y0;\n    var lon, lat;\n    if (this.sphere) lat = (0, $gyVUi.HALF_PI) - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n    else {\n        var ts = Math.exp(-y / (this.a * this.k0));\n        lat = (0, $2AZR8.default)(this.e, ts);\n        if (lat === -9999) return null;\n    }\n    lon = (0, $a9oRf.default)(this.long0 + x / (this.a * this.k0));\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $d64d5a882433f366$export$e4b2ac9215619f8d = [\n    'Mercator',\n    'Popular Visualisation Pseudo Mercator',\n    'Mercator_1SP',\n    'Mercator_Auxiliary_Sphere',\n    'Mercator_Variant_A',\n    'merc'\n];\nvar $d64d5a882433f366$export$2e2bcd8739ae039 = {\n    init: $d64d5a882433f366$export$2cd8252107eb640b,\n    forward: $d64d5a882433f366$export$174bb771924e7eb1,\n    inverse: $d64d5a882433f366$export$70ae2c07e401031b,\n    names: $d64d5a882433f366$export$e4b2ac9215619f8d\n};\n\n});\nparcelRegister(\"bi5ZC\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $8386063044328ea8$export$2e2bcd8739ae039);\nfunction $8386063044328ea8$export$2e2bcd8739ae039(eccent, sinphi, cosphi) {\n    var con = eccent * sinphi;\n    return cosphi / Math.sqrt(1 - con * con);\n}\n\n});\n\nparcelRegister(\"a9oRf\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $763e06e438986b6c$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $boTd3 = parcelRequire(\"boTd3\");\nfunction $763e06e438986b6c$export$2e2bcd8739ae039(x) {\n    return Math.abs(x) <= (0, $gyVUi.SPI) ? x : x - (0, $boTd3.default)(x) * (0, $gyVUi.TWO_PI);\n}\n\n});\nparcelRegister(\"boTd3\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $84ccc316da8510bf$export$2e2bcd8739ae039);\nfunction $84ccc316da8510bf$export$2e2bcd8739ae039(x) {\n    return x < 0 ? -1 : 1;\n}\n\n});\n\n\nparcelRegister(\"3xC66\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $2942018063c2eff1$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $2942018063c2eff1$export$2e2bcd8739ae039(eccent, phi, sinphi) {\n    var con = eccent * sinphi;\n    var com = 0.5 * eccent;\n    con = Math.pow((1 - con) / (1 + con), com);\n    return Math.tan(0.5 * ((0, $gyVUi.HALF_PI) - phi)) / con;\n}\n\n});\n\nparcelRegister(\"2AZR8\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $1e3eece278ef2a71$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $1e3eece278ef2a71$export$2e2bcd8739ae039(eccent, ts) {\n    var eccnth = 0.5 * eccent;\n    var con, dphi;\n    var phi = (0, $gyVUi.HALF_PI) - 2 * Math.atan(ts);\n    for(var i = 0; i <= 15; i++){\n        con = eccent * Math.sin(phi);\n        dphi = (0, $gyVUi.HALF_PI) - 2 * Math.atan(ts * Math.pow((1 - con) / (1 + con), eccnth)) - phi;\n        phi += dphi;\n        if (Math.abs(dphi) <= 0.0000000001) return phi;\n    }\n    // console.log(\"phi2z has NoConvergence\");\n    return -9999;\n}\n\n});\n\n\nparcelRegister(\"iMMJV\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $dad2845bfa7291b9$export$2e2bcd8739ae039);\nfunction $dad2845bfa7291b9$export$2cd8252107eb640b() {\n// no-op for longlat\n}\nfunction $dad2845bfa7291b9$export$174bb771924e7eb1(pt) {\n    return pt;\n}\nvar $dad2845bfa7291b9$export$e4b2ac9215619f8d = [\n    'longlat',\n    'identity'\n];\nvar $dad2845bfa7291b9$export$2e2bcd8739ae039 = {\n    init: $dad2845bfa7291b9$export$2cd8252107eb640b,\n    forward: $dad2845bfa7291b9$export$174bb771924e7eb1,\n    inverse: $dad2845bfa7291b9$export$174bb771924e7eb1,\n    names: $dad2845bfa7291b9$export$e4b2ac9215619f8d\n};\n\n});\n\n\nparcelRegister(\"d8b9d\", function(module, exports) {\n\n$parcel$export(module.exports, \"eccentricity\", () => $98f4ab684186b766$export$e3d7bf2ed2a7479f);\n$parcel$export(module.exports, \"sphere\", () => $98f4ab684186b766$export$b2690196de52b050);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $bO5FE = parcelRequire(\"bO5FE\");\n\nvar $hzXAi = parcelRequire(\"hzXAi\");\nconst $98f4ab684186b766$var$WGS84 = (0, $bO5FE.default).WGS84; // default ellipsoid\nfunction $98f4ab684186b766$export$e3d7bf2ed2a7479f(a, b, rf, R_A) {\n    var a2 = a * a; // used in geocentric\n    var b2 = b * b; // used in geocentric\n    var es = (a2 - b2) / a2; // e ^ 2\n    var e = 0;\n    if (R_A) {\n        a *= 1 - es * ((0, $gyVUi.SIXTH) + es * ((0, $gyVUi.RA4) + es * (0, $gyVUi.RA6)));\n        a2 = a * a;\n        es = 0;\n    } else e = Math.sqrt(es); // eccentricity\n    var ep2 = (a2 - b2) / b2; // used in geocentric\n    return {\n        es: es,\n        e: e,\n        ep2: ep2\n    };\n}\nfunction $98f4ab684186b766$export$b2690196de52b050(a, b, rf, ellps, sphere) {\n    if (!a) {\n        var ellipse = (0, $hzXAi.default)((0, $bO5FE.default), ellps);\n        if (!ellipse) ellipse = $98f4ab684186b766$var$WGS84;\n        a = ellipse.a;\n        b = ellipse.b;\n        rf = ellipse.rf;\n    }\n    if (rf && !b) b = (1.0 - 1.0 / rf) * a;\n    if (rf === 0 || Math.abs(a - b) < (0, $gyVUi.EPSLN)) {\n        sphere = true;\n        b = a;\n    }\n    return {\n        a: a,\n        b: b,\n        rf: rf,\n        sphere: sphere\n    };\n}\n\n});\nparcelRegister(\"bO5FE\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $8988c354f092c217$export$2e2bcd8739ae039);\nvar $8988c354f092c217$var$ellipsoids = {\n    MERIT: {\n        a: 6378137,\n        rf: 298.257,\n        ellipseName: 'MERIT 1983'\n    },\n    SGS85: {\n        a: 6378136,\n        rf: 298.257,\n        ellipseName: 'Soviet Geodetic System 85'\n    },\n    GRS80: {\n        a: 6378137,\n        rf: 298.257222101,\n        ellipseName: 'GRS 1980(IUGG, 1980)'\n    },\n    IAU76: {\n        a: 6378140,\n        rf: 298.257,\n        ellipseName: 'IAU 1976'\n    },\n    airy: {\n        a: 6377563.396,\n        b: 6356256.91,\n        ellipseName: 'Airy 1830'\n    },\n    APL4: {\n        a: 6378137,\n        rf: 298.25,\n        ellipseName: 'Appl. Physics. 1965'\n    },\n    NWL9D: {\n        a: 6378145,\n        rf: 298.25,\n        ellipseName: 'Naval Weapons Lab., 1965'\n    },\n    mod_airy: {\n        a: 6377340.189,\n        b: 6356034.446,\n        ellipseName: 'Modified Airy'\n    },\n    andrae: {\n        a: 6377104.43,\n        rf: 300,\n        ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n    },\n    aust_SA: {\n        a: 6378160,\n        rf: 298.25,\n        ellipseName: 'Australian Natl & S. Amer. 1969'\n    },\n    GRS67: {\n        a: 6378160,\n        rf: 298.247167427,\n        ellipseName: 'GRS 67(IUGG 1967)'\n    },\n    bessel: {\n        a: 6377397.155,\n        rf: 299.1528128,\n        ellipseName: 'Bessel 1841'\n    },\n    bess_nam: {\n        a: 6377483.865,\n        rf: 299.1528128,\n        ellipseName: 'Bessel 1841 (Namibia)'\n    },\n    clrk66: {\n        a: 6378206.4,\n        b: 6356583.8,\n        ellipseName: 'Clarke 1866'\n    },\n    clrk80: {\n        a: 6378249.145,\n        rf: 293.4663,\n        ellipseName: 'Clarke 1880 mod.'\n    },\n    clrk80ign: {\n        a: 6378249.2,\n        b: 6356515,\n        rf: 293.4660213,\n        ellipseName: 'Clarke 1880 (IGN)'\n    },\n    clrk58: {\n        a: 6378293.645208759,\n        rf: 294.2606763692654,\n        ellipseName: 'Clarke 1858'\n    },\n    CPM: {\n        a: 6375738.7,\n        rf: 334.29,\n        ellipseName: 'Comm. des Poids et Mesures 1799'\n    },\n    delmbr: {\n        a: 6376428,\n        rf: 311.5,\n        ellipseName: 'Delambre 1810 (Belgium)'\n    },\n    engelis: {\n        a: 6378136.05,\n        rf: 298.2566,\n        ellipseName: 'Engelis 1985'\n    },\n    evrst30: {\n        a: 6377276.345,\n        rf: 300.8017,\n        ellipseName: 'Everest 1830'\n    },\n    evrst48: {\n        a: 6377304.063,\n        rf: 300.8017,\n        ellipseName: 'Everest 1948'\n    },\n    evrst56: {\n        a: 6377301.243,\n        rf: 300.8017,\n        ellipseName: 'Everest 1956'\n    },\n    evrst69: {\n        a: 6377295.664,\n        rf: 300.8017,\n        ellipseName: 'Everest 1969'\n    },\n    evrstSS: {\n        a: 6377298.556,\n        rf: 300.8017,\n        ellipseName: 'Everest (Sabah & Sarawak)'\n    },\n    fschr60: {\n        a: 6378166,\n        rf: 298.3,\n        ellipseName: 'Fischer (Mercury Datum) 1960'\n    },\n    fschr60m: {\n        a: 6378155,\n        rf: 298.3,\n        ellipseName: 'Fischer 1960'\n    },\n    fschr68: {\n        a: 6378150,\n        rf: 298.3,\n        ellipseName: 'Fischer 1968'\n    },\n    helmert: {\n        a: 6378200,\n        rf: 298.3,\n        ellipseName: 'Helmert 1906'\n    },\n    hough: {\n        a: 6378270,\n        rf: 297,\n        ellipseName: 'Hough'\n    },\n    intl: {\n        a: 6378388,\n        rf: 297,\n        ellipseName: 'International 1909 (Hayford)'\n    },\n    kaula: {\n        a: 6378163,\n        rf: 298.24,\n        ellipseName: 'Kaula 1961'\n    },\n    lerch: {\n        a: 6378139,\n        rf: 298.257,\n        ellipseName: 'Lerch 1979'\n    },\n    mprts: {\n        a: 6397300,\n        rf: 191,\n        ellipseName: 'Maupertius 1738'\n    },\n    new_intl: {\n        a: 6378157.5,\n        b: 6356772.2,\n        ellipseName: 'New International 1967'\n    },\n    plessis: {\n        a: 6376523,\n        rf: 6355863,\n        ellipseName: 'Plessis 1817 (France)'\n    },\n    krass: {\n        a: 6378245,\n        rf: 298.3,\n        ellipseName: 'Krassovsky, 1942'\n    },\n    SEasia: {\n        a: 6378155,\n        b: 6356773.3205,\n        ellipseName: 'Southeast Asia'\n    },\n    walbeck: {\n        a: 6376896,\n        b: 6355834.8467,\n        ellipseName: 'Walbeck'\n    },\n    WGS60: {\n        a: 6378165,\n        rf: 298.3,\n        ellipseName: 'WGS 60'\n    },\n    WGS66: {\n        a: 6378145,\n        rf: 298.25,\n        ellipseName: 'WGS 66'\n    },\n    WGS7: {\n        a: 6378135,\n        rf: 298.26,\n        ellipseName: 'WGS 72'\n    },\n    WGS84: {\n        a: 6378137,\n        rf: 298.257223563,\n        ellipseName: 'WGS 84'\n    },\n    sphere: {\n        a: 6370997,\n        b: 6370997,\n        ellipseName: 'Normal Sphere (r=6370997)'\n    }\n};\nvar $8988c354f092c217$export$2e2bcd8739ae039 = $8988c354f092c217$var$ellipsoids;\n\n});\n\n\nparcelRegister(\"gMdFS\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $c36bbc8057de3d00$export$2e2bcd8739ae039);\nvar $c36bbc8057de3d00$var$datums = {\n    wgs84: {\n        towgs84: '0,0,0',\n        ellipse: 'WGS84',\n        datumName: 'WGS84'\n    },\n    ch1903: {\n        towgs84: '674.374,15.056,405.346',\n        ellipse: 'bessel',\n        datumName: 'swiss'\n    },\n    ggrs87: {\n        towgs84: '-199.87,74.79,246.62',\n        ellipse: 'GRS80',\n        datumName: 'Greek_Geodetic_Reference_System_1987'\n    },\n    nad83: {\n        towgs84: '0,0,0',\n        ellipse: 'GRS80',\n        datumName: 'North_American_Datum_1983'\n    },\n    nad27: {\n        nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n        ellipse: 'clrk66',\n        datumName: 'North_American_Datum_1927'\n    },\n    potsdam: {\n        towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n        ellipse: 'bessel',\n        datumName: 'Potsdam Rauenberg 1950 DHDN'\n    },\n    carthage: {\n        towgs84: '-263.0,6.0,431.0',\n        ellipse: 'clark80',\n        datumName: 'Carthage 1934 Tunisia'\n    },\n    hermannskogel: {\n        towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n        ellipse: 'bessel',\n        datumName: 'Hermannskogel'\n    },\n    mgi: {\n        towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n        ellipse: 'bessel',\n        datumName: 'Militar-Geographische Institut'\n    },\n    osni52: {\n        towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n        ellipse: 'airy',\n        datumName: 'Irish National'\n    },\n    ire65: {\n        towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n        ellipse: 'mod_airy',\n        datumName: 'Ireland 1965'\n    },\n    rassadiran: {\n        towgs84: '-133.63,-157.5,-158.62',\n        ellipse: 'intl',\n        datumName: 'Rassadiran'\n    },\n    nzgd49: {\n        towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n        ellipse: 'intl',\n        datumName: 'New Zealand Geodetic Datum 1949'\n    },\n    osgb36: {\n        towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n        ellipse: 'airy',\n        datumName: 'Ordnance Survey of Great Britain 1936'\n    },\n    s_jtsk: {\n        towgs84: '589,76,480',\n        ellipse: 'bessel',\n        datumName: 'S-JTSK (Ferro)'\n    },\n    beduaram: {\n        towgs84: '-106,-87,188',\n        ellipse: 'clrk80',\n        datumName: 'Beduaram'\n    },\n    gunung_segara: {\n        towgs84: '-403,684,41',\n        ellipse: 'bessel',\n        datumName: 'Gunung Segara Jakarta'\n    },\n    rnb72: {\n        towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n        ellipse: 'intl',\n        datumName: 'Reseau National Belge 1972'\n    },\n    EPSG_5451: {\n        towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n    },\n    IGNF_LURESG: {\n        towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n    },\n    EPSG_4614: {\n        towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n    },\n    EPSG_4615: {\n        towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n    },\n    ESRI_37241: {\n        towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n    },\n    ESRI_37249: {\n        towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n    },\n    ESRI_37245: {\n        towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n    },\n    EPSG_4178: {\n        towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n    },\n    EPSG_4622: {\n        towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n    },\n    EPSG_4625: {\n        towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n    },\n    EPSG_5252: {\n        towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n    },\n    EPSG_4314: {\n        towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n    },\n    EPSG_4282: {\n        towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n    },\n    EPSG_4231: {\n        towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n    },\n    EPSG_4274: {\n        towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n    },\n    EPSG_4134: {\n        towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n    },\n    EPSG_4254: {\n        towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n    },\n    EPSG_4159: {\n        towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n    },\n    EPSG_4687: {\n        towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n    },\n    EPSG_4227: {\n        towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n    },\n    EPSG_4746: {\n        towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n    },\n    EPSG_4745: {\n        towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n    },\n    EPSG_6311: {\n        towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n    },\n    EPSG_4289: {\n        towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n    },\n    EPSG_4230: {\n        towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n    },\n    EPSG_4154: {\n        towgs84: '-123.02,-158.95,-168.47'\n    },\n    EPSG_4156: {\n        towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n    },\n    EPSG_4299: {\n        towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n    },\n    EPSG_4179: {\n        towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n    },\n    EPSG_4313: {\n        towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n    },\n    EPSG_4194: {\n        towgs84: '163.511,127.533,-159.789'\n    },\n    EPSG_4195: {\n        towgs84: '105,326,-102.5'\n    },\n    EPSG_4196: {\n        towgs84: '-45,417,-3.5'\n    },\n    EPSG_4611: {\n        towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n    },\n    EPSG_4633: {\n        towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n    },\n    EPSG_4641: {\n        towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n    },\n    EPSG_4643: {\n        towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n    },\n    EPSG_4300: {\n        towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n    },\n    EPSG_4188: {\n        towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n    },\n    EPSG_4660: {\n        towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n    },\n    EPSG_4662: {\n        towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n    },\n    EPSG_3906: {\n        towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n    },\n    EPSG_4307: {\n        towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n    },\n    EPSG_6892: {\n        towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n    },\n    EPSG_4690: {\n        towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n    },\n    EPSG_4691: {\n        towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n    },\n    EPSG_4629: {\n        towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n    },\n    EPSG_4630: {\n        towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n    },\n    EPSG_4692: {\n        towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n    },\n    EPSG_9333: {\n        towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n    },\n    EPSG_9059: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4312: {\n        towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n    },\n    EPSG_4123: {\n        towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n    },\n    EPSG_4309: {\n        towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n    },\n    ESRI_104106: {\n        towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n    },\n    EPSG_4281: {\n        towgs84: '-219.247,-73.802,269.529'\n    },\n    EPSG_4322: {\n        towgs84: '0,0,4.5'\n    },\n    EPSG_4324: {\n        towgs84: '0,0,1.9'\n    },\n    EPSG_4284: {\n        towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n    },\n    EPSG_4277: {\n        towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n    },\n    EPSG_4207: {\n        towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n    },\n    EPSG_4688: {\n        towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n    },\n    EPSG_4689: {\n        towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n    },\n    EPSG_4720: {\n        towgs84: '0,0,4.5'\n    },\n    EPSG_4273: {\n        towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n    },\n    EPSG_4240: {\n        towgs84: '204.64,834.74,293.8'\n    },\n    EPSG_4817: {\n        towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n    },\n    ESRI_104131: {\n        towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n    },\n    EPSG_4265: {\n        towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n    },\n    EPSG_4263: {\n        towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n    },\n    EPSG_4298: {\n        towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n    },\n    EPSG_4270: {\n        towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n    },\n    EPSG_4229: {\n        towgs84: '-121.8,98.1,-10.7'\n    },\n    EPSG_4220: {\n        towgs84: '-55.5,-348,-229.2'\n    },\n    EPSG_4214: {\n        towgs84: '12.646,-155.176,-80.863'\n    },\n    EPSG_4232: {\n        towgs84: '-345,3,223'\n    },\n    EPSG_4238: {\n        towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n    },\n    EPSG_4168: {\n        towgs84: '-170,33,326'\n    },\n    EPSG_4131: {\n        towgs84: '199,931,318.9'\n    },\n    EPSG_4152: {\n        towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n    },\n    EPSG_5228: {\n        towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n    },\n    EPSG_8351: {\n        towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n    },\n    EPSG_4683: {\n        towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n    },\n    EPSG_4133: {\n        towgs84: '0,0,0'\n    },\n    EPSG_7373: {\n        towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n    },\n    EPSG_9075: {\n        towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n    },\n    EPSG_9072: {\n        towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n    },\n    EPSG_9294: {\n        towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n    },\n    EPSG_4212: {\n        towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n    },\n    EPSG_4191: {\n        towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n    },\n    EPSG_4237: {\n        towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n    },\n    EPSG_4740: {\n        towgs84: '-1.08,-0.27,-0.9'\n    },\n    EPSG_4124: {\n        towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n    },\n    EPSG_5681: {\n        towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n    },\n    EPSG_4141: {\n        towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n    },\n    EPSG_4204: {\n        towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n    },\n    EPSG_4319: {\n        towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n    },\n    EPSG_4200: {\n        towgs84: '24.82,-131.21,-82.66'\n    },\n    EPSG_4130: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4127: {\n        towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n    },\n    EPSG_4149: {\n        towgs84: '674.374,15.056,405.346'\n    },\n    EPSG_4617: {\n        towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n    },\n    EPSG_4663: {\n        towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n    },\n    EPSG_4664: {\n        towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n    },\n    EPSG_4665: {\n        towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n    },\n    EPSG_4666: {\n        towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n    },\n    EPSG_4756: {\n        towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n    },\n    EPSG_4723: {\n        towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n    },\n    EPSG_4726: {\n        towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n    },\n    EPSG_4267: {\n        towgs84: '-8.0,160.0,176.0'\n    },\n    EPSG_5365: {\n        towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n    },\n    EPSG_4218: {\n        towgs84: '304.5,306.5,-318.1'\n    },\n    EPSG_4242: {\n        towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n    },\n    EPSG_4216: {\n        towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n    },\n    ESRI_104105: {\n        towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n    },\n    ESRI_104129: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4673: {\n        towgs84: '174.05,-25.49,112.57'\n    },\n    EPSG_4202: {\n        towgs84: '-124,-60,154'\n    },\n    EPSG_4203: {\n        towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n    },\n    EPSG_3819: {\n        towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n    },\n    EPSG_8694: {\n        towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n    },\n    EPSG_4145: {\n        towgs84: '275.57,676.78,229.6'\n    },\n    EPSG_4283: {\n        towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n    },\n    EPSG_4317: {\n        towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n    },\n    EPSG_4272: {\n        towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n    },\n    EPSG_4248: {\n        towgs84: '-307.7,265.3,-363.5'\n    },\n    EPSG_5561: {\n        towgs84: '24,-121,-76'\n    },\n    EPSG_5233: {\n        towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n    },\n    ESRI_104130: {\n        towgs84: '-86,-98,-119'\n    },\n    ESRI_104102: {\n        towgs84: '682,-203,480'\n    },\n    ESRI_37207: {\n        towgs84: '7,-10,-26'\n    },\n    EPSG_4675: {\n        towgs84: '59.935,118.4,-10.871'\n    },\n    ESRI_104109: {\n        towgs84: '-89.121,-348.182,260.871'\n    },\n    ESRI_104112: {\n        towgs84: '-185.583,-230.096,281.361'\n    },\n    ESRI_104113: {\n        towgs84: '25.1,-275.6,222.6'\n    },\n    IGNF_WGS72G: {\n        towgs84: '0,12,6'\n    },\n    IGNF_NTFG: {\n        towgs84: '-168,-60,320'\n    },\n    IGNF_EFATE57G: {\n        towgs84: '-127,-769,472'\n    },\n    IGNF_PGP50G: {\n        towgs84: '324.8,153.6,172.1'\n    },\n    IGNF_REUN47G: {\n        towgs84: '94,-948,-1262'\n    },\n    IGNF_CSG67G: {\n        towgs84: '-186,230,110'\n    },\n    IGNF_GUAD48G: {\n        towgs84: '-467,-16,-300'\n    },\n    IGNF_TAHI51G: {\n        towgs84: '162,117,154'\n    },\n    IGNF_TAHAAG: {\n        towgs84: '65,342,77'\n    },\n    IGNF_NUKU72G: {\n        towgs84: '84,274,65'\n    },\n    IGNF_PETRELS72G: {\n        towgs84: '365,194,166'\n    },\n    IGNF_WALL78G: {\n        towgs84: '253,-133,-127'\n    },\n    IGNF_MAYO50G: {\n        towgs84: '-382,-59,-262'\n    },\n    IGNF_TANNAG: {\n        towgs84: '-139,-967,436'\n    },\n    IGNF_IGN72G: {\n        towgs84: '-13,-348,292'\n    },\n    IGNF_ATIGG: {\n        towgs84: '1118,23,66'\n    },\n    IGNF_FANGA84G: {\n        towgs84: '150.57,158.33,118.32'\n    },\n    IGNF_RUSAT84G: {\n        towgs84: '202.13,174.6,-15.74'\n    },\n    IGNF_KAUE70G: {\n        towgs84: '126.74,300.1,-75.49'\n    },\n    IGNF_MOP90G: {\n        towgs84: '-10.8,-1.8,12.77'\n    },\n    IGNF_MHPF67G: {\n        towgs84: '338.08,212.58,-296.17'\n    },\n    IGNF_TAHI79G: {\n        towgs84: '160.61,116.05,153.69'\n    },\n    IGNF_ANAA92G: {\n        towgs84: '1.5,3.84,4.81'\n    },\n    IGNF_MARQUI72G: {\n        towgs84: '330.91,-13.92,58.56'\n    },\n    IGNF_APAT86G: {\n        towgs84: '143.6,197.82,74.05'\n    },\n    IGNF_TUBU69G: {\n        towgs84: '237.17,171.61,-77.84'\n    },\n    IGNF_STPM50G: {\n        towgs84: '11.363,424.148,373.13'\n    },\n    EPSG_4150: {\n        towgs84: '674.374,15.056,405.346'\n    },\n    EPSG_4754: {\n        towgs84: '-208.4058,-109.8777,-2.5764'\n    },\n    ESRI_104101: {\n        towgs84: '374,150,588'\n    },\n    EPSG_4693: {\n        towgs84: '0,-0.15,0.68'\n    },\n    EPSG_6207: {\n        towgs84: '293.17,726.18,245.36'\n    },\n    EPSG_4153: {\n        towgs84: '-133.63,-157.5,-158.62'\n    },\n    EPSG_4132: {\n        towgs84: '-241.54,-163.64,396.06'\n    },\n    EPSG_4221: {\n        towgs84: '-154.5,150.7,100.4'\n    },\n    EPSG_4266: {\n        towgs84: '-80.7,-132.5,41.1'\n    },\n    EPSG_4193: {\n        towgs84: '-70.9,-151.8,-41.4'\n    },\n    EPSG_5340: {\n        towgs84: '-0.41,0.46,-0.35'\n    },\n    EPSG_4246: {\n        towgs84: '-294.7,-200.1,525.5'\n    },\n    EPSG_4318: {\n        towgs84: '-3.2,-5.7,2.8'\n    },\n    EPSG_4121: {\n        towgs84: '-199.87,74.79,246.62'\n    },\n    EPSG_4223: {\n        towgs84: '-260.1,5.5,432.2'\n    },\n    EPSG_4158: {\n        towgs84: '-0.465,372.095,171.736'\n    },\n    EPSG_4285: {\n        towgs84: '-128.16,-282.42,21.93'\n    },\n    EPSG_4613: {\n        towgs84: '-404.78,685.68,45.47'\n    },\n    EPSG_4607: {\n        towgs84: '195.671,332.517,274.607'\n    },\n    EPSG_4475: {\n        towgs84: '-381.788,-57.501,-256.673'\n    },\n    EPSG_4208: {\n        towgs84: '-157.84,308.54,-146.6'\n    },\n    EPSG_4743: {\n        towgs84: '70.995,-335.916,262.898'\n    },\n    EPSG_4710: {\n        towgs84: '-323.65,551.39,-491.22'\n    },\n    EPSG_7881: {\n        towgs84: '-0.077,0.079,0.086'\n    },\n    EPSG_4682: {\n        towgs84: '283.729,735.942,261.143'\n    },\n    EPSG_4739: {\n        towgs84: '-156,-271,-189'\n    },\n    EPSG_4679: {\n        towgs84: '-80.01,253.26,291.19'\n    },\n    EPSG_4750: {\n        towgs84: '-56.263,16.136,-22.856'\n    },\n    EPSG_4644: {\n        towgs84: '-10.18,-350.43,291.37'\n    },\n    EPSG_4695: {\n        towgs84: '-103.746,-9.614,-255.95'\n    },\n    EPSG_4292: {\n        towgs84: '-355,21,72'\n    },\n    EPSG_4302: {\n        towgs84: '-61.702,284.488,472.052'\n    },\n    EPSG_4143: {\n        towgs84: '-124.76,53,466.79'\n    },\n    EPSG_4606: {\n        towgs84: '-153,153,307'\n    },\n    EPSG_4699: {\n        towgs84: '-770.1,158.4,-498.2'\n    },\n    EPSG_4247: {\n        towgs84: '-273.5,110.6,-357.9'\n    },\n    EPSG_4160: {\n        towgs84: '8.88,184.86,106.69'\n    },\n    EPSG_4161: {\n        towgs84: '-233.43,6.65,173.64'\n    },\n    EPSG_9251: {\n        towgs84: '-9.5,122.9,138.2'\n    },\n    EPSG_9253: {\n        towgs84: '-78.1,101.6,133.3'\n    },\n    EPSG_4297: {\n        towgs84: '-198.383,-240.517,-107.909'\n    },\n    EPSG_4269: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4301: {\n        towgs84: '-147,506,687'\n    },\n    EPSG_4618: {\n        towgs84: '-59,-11,-52'\n    },\n    EPSG_4612: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4678: {\n        towgs84: '44.585,-131.212,-39.544'\n    },\n    EPSG_4250: {\n        towgs84: '-130,29,364'\n    },\n    EPSG_4144: {\n        towgs84: '214,804,268'\n    },\n    EPSG_4147: {\n        towgs84: '-17.51,-108.32,-62.39'\n    },\n    EPSG_4259: {\n        towgs84: '-254.1,-5.36,-100.29'\n    },\n    EPSG_4164: {\n        towgs84: '-76,-138,67'\n    },\n    EPSG_4211: {\n        towgs84: '-378.873,676.002,-46.255'\n    },\n    EPSG_4182: {\n        towgs84: '-422.651,-172.995,84.02'\n    },\n    EPSG_4224: {\n        towgs84: '-143.87,243.37,-33.52'\n    },\n    EPSG_4225: {\n        towgs84: '-205.57,168.77,-4.12'\n    },\n    EPSG_5527: {\n        towgs84: '-67.35,3.88,-38.22'\n    },\n    EPSG_4752: {\n        towgs84: '98,390,-22'\n    },\n    EPSG_4310: {\n        towgs84: '-30,190,89'\n    },\n    EPSG_9248: {\n        towgs84: '-192.26,65.72,132.08'\n    },\n    EPSG_4680: {\n        towgs84: '124.5,-63.5,-281'\n    },\n    EPSG_4701: {\n        towgs84: '-79.9,-158,-168.9'\n    },\n    EPSG_4706: {\n        towgs84: '-146.21,112.63,4.05'\n    },\n    EPSG_4805: {\n        towgs84: '682,-203,480'\n    },\n    EPSG_4201: {\n        towgs84: '-165,-11,206'\n    },\n    EPSG_4210: {\n        towgs84: '-157,-2,-299'\n    },\n    EPSG_4183: {\n        towgs84: '-104,167,-38'\n    },\n    EPSG_4139: {\n        towgs84: '11,72,-101'\n    },\n    EPSG_4668: {\n        towgs84: '-86,-98,-119'\n    },\n    EPSG_4717: {\n        towgs84: '-2,151,181'\n    },\n    EPSG_4732: {\n        towgs84: '102,52,-38'\n    },\n    EPSG_4280: {\n        towgs84: '-377,681,-50'\n    },\n    EPSG_4209: {\n        towgs84: '-138,-105,-289'\n    },\n    EPSG_4261: {\n        towgs84: '31,146,47'\n    },\n    EPSG_4658: {\n        towgs84: '-73,46,-86'\n    },\n    EPSG_4721: {\n        towgs84: '265.025,384.929,-194.046'\n    },\n    EPSG_4222: {\n        towgs84: '-136,-108,-292'\n    },\n    EPSG_4601: {\n        towgs84: '-255,-15,71'\n    },\n    EPSG_4602: {\n        towgs84: '725,685,536'\n    },\n    EPSG_4603: {\n        towgs84: '72,213.7,93'\n    },\n    EPSG_4605: {\n        towgs84: '9,183,236'\n    },\n    EPSG_4621: {\n        towgs84: '137,248,-430'\n    },\n    EPSG_4657: {\n        towgs84: '-28,199,5'\n    },\n    EPSG_4316: {\n        towgs84: '103.25,-100.4,-307.19'\n    },\n    EPSG_4642: {\n        towgs84: '-13,-348,292'\n    },\n    EPSG_4698: {\n        towgs84: '145,-187,103'\n    },\n    EPSG_4192: {\n        towgs84: '-206.1,-174.7,-87.7'\n    },\n    EPSG_4311: {\n        towgs84: '-265,120,-358'\n    },\n    EPSG_4135: {\n        towgs84: '58,-283,-182'\n    },\n    ESRI_104138: {\n        towgs84: '198,-226,-347'\n    },\n    EPSG_4245: {\n        towgs84: '-11,851,5'\n    },\n    EPSG_4142: {\n        towgs84: '-125,53,467'\n    },\n    EPSG_4213: {\n        towgs84: '-106,-87,188'\n    },\n    EPSG_4253: {\n        towgs84: '-133,-77,-51'\n    },\n    EPSG_4129: {\n        towgs84: '-132,-110,-335'\n    },\n    EPSG_4713: {\n        towgs84: '-77,-128,142'\n    },\n    EPSG_4239: {\n        towgs84: '217,823,299'\n    },\n    EPSG_4146: {\n        towgs84: '295,736,257'\n    },\n    EPSG_4155: {\n        towgs84: '-83,37,124'\n    },\n    EPSG_4165: {\n        towgs84: '-173,253,27'\n    },\n    EPSG_4672: {\n        towgs84: '175,-38,113'\n    },\n    EPSG_4236: {\n        towgs84: '-637,-549,-203'\n    },\n    EPSG_4251: {\n        towgs84: '-90,40,88'\n    },\n    EPSG_4271: {\n        towgs84: '-2,374,172'\n    },\n    EPSG_4175: {\n        towgs84: '-88,4,101'\n    },\n    EPSG_4716: {\n        towgs84: '298,-304,-375'\n    },\n    EPSG_4315: {\n        towgs84: '-23,259,-9'\n    },\n    EPSG_4744: {\n        towgs84: '-242.2,-144.9,370.3'\n    },\n    EPSG_4244: {\n        towgs84: '-97,787,86'\n    },\n    EPSG_4293: {\n        towgs84: '616,97,-251'\n    },\n    EPSG_4714: {\n        towgs84: '-127,-769,472'\n    },\n    EPSG_4736: {\n        towgs84: '260,12,-147'\n    },\n    EPSG_6883: {\n        towgs84: '-235,-110,393'\n    },\n    EPSG_6894: {\n        towgs84: '-63,176,185'\n    },\n    EPSG_4205: {\n        towgs84: '-43,-163,45'\n    },\n    EPSG_4256: {\n        towgs84: '41,-220,-134'\n    },\n    EPSG_4262: {\n        towgs84: '639,405,60'\n    },\n    EPSG_4604: {\n        towgs84: '174,359,365'\n    },\n    EPSG_4169: {\n        towgs84: '-115,118,426'\n    },\n    EPSG_4620: {\n        towgs84: '-106,-129,165'\n    },\n    EPSG_4184: {\n        towgs84: '-203,141,53'\n    },\n    EPSG_4616: {\n        towgs84: '-289,-124,60'\n    },\n    EPSG_9403: {\n        towgs84: '-307,-92,127'\n    },\n    EPSG_4684: {\n        towgs84: '-133,-321,50'\n    },\n    EPSG_4708: {\n        towgs84: '-491,-22,435'\n    },\n    EPSG_4707: {\n        towgs84: '114,-116,-333'\n    },\n    EPSG_4709: {\n        towgs84: '145,75,-272'\n    },\n    EPSG_4712: {\n        towgs84: '-205,107,53'\n    },\n    EPSG_4711: {\n        towgs84: '124,-234,-25'\n    },\n    EPSG_4718: {\n        towgs84: '230,-199,-752'\n    },\n    EPSG_4719: {\n        towgs84: '211,147,111'\n    },\n    EPSG_4724: {\n        towgs84: '208,-435,-229'\n    },\n    EPSG_4725: {\n        towgs84: '189,-79,-202'\n    },\n    EPSG_4735: {\n        towgs84: '647,1777,-1124'\n    },\n    EPSG_4722: {\n        towgs84: '-794,119,-298'\n    },\n    EPSG_4728: {\n        towgs84: '-307,-92,127'\n    },\n    EPSG_4734: {\n        towgs84: '-632,438,-609'\n    },\n    EPSG_4727: {\n        towgs84: '912,-58,1227'\n    },\n    EPSG_4729: {\n        towgs84: '185,165,42'\n    },\n    EPSG_4730: {\n        towgs84: '170,42,84'\n    },\n    EPSG_4733: {\n        towgs84: '276,-57,149'\n    },\n    ESRI_37218: {\n        towgs84: '230,-199,-752'\n    },\n    ESRI_37240: {\n        towgs84: '-7,215,225'\n    },\n    ESRI_37221: {\n        towgs84: '252,-209,-751'\n    },\n    ESRI_4305: {\n        towgs84: '-123,-206,219'\n    },\n    ESRI_104139: {\n        towgs84: '-73,-247,227'\n    },\n    EPSG_4748: {\n        towgs84: '51,391,-36'\n    },\n    EPSG_4219: {\n        towgs84: '-384,664,-48'\n    },\n    EPSG_4255: {\n        towgs84: '-333,-222,114'\n    },\n    EPSG_4257: {\n        towgs84: '-587.8,519.75,145.76'\n    },\n    EPSG_4646: {\n        towgs84: '-963,510,-359'\n    },\n    EPSG_6881: {\n        towgs84: '-24,-203,268'\n    },\n    EPSG_6882: {\n        towgs84: '-183,-15,273'\n    },\n    EPSG_4715: {\n        towgs84: '-104,-129,239'\n    },\n    IGNF_RGF93GDD: {\n        towgs84: '0,0,0'\n    },\n    IGNF_RGM04GDD: {\n        towgs84: '0,0,0'\n    },\n    IGNF_RGSPM06GDD: {\n        towgs84: '0,0,0'\n    },\n    IGNF_RGTAAF07GDD: {\n        towgs84: '0,0,0'\n    },\n    IGNF_RGFG95GDD: {\n        towgs84: '0,0,0'\n    },\n    IGNF_RGNCG: {\n        towgs84: '0,0,0'\n    },\n    IGNF_RGPFGDD: {\n        towgs84: '0,0,0'\n    },\n    IGNF_ETRS89G: {\n        towgs84: '0,0,0'\n    },\n    IGNF_RGR92GDD: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4173: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4180: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4619: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4667: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4075: {\n        towgs84: '0,0,0'\n    },\n    EPSG_6706: {\n        towgs84: '0,0,0'\n    },\n    EPSG_7798: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4661: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4669: {\n        towgs84: '0,0,0'\n    },\n    EPSG_8685: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4151: {\n        towgs84: '0,0,0'\n    },\n    EPSG_9702: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4758: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4761: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4765: {\n        towgs84: '0,0,0'\n    },\n    EPSG_8997: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4023: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4670: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4694: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4148: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4163: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4167: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4189: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4190: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4176: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4659: {\n        towgs84: '0,0,0'\n    },\n    EPSG_3824: {\n        towgs84: '0,0,0'\n    },\n    EPSG_3889: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4046: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4081: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4558: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4483: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5013: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5264: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5324: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5354: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5371: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5373: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5381: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5393: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5489: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5593: {\n        towgs84: '0,0,0'\n    },\n    EPSG_6135: {\n        towgs84: '0,0,0'\n    },\n    EPSG_6365: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5246: {\n        towgs84: '0,0,0'\n    },\n    EPSG_7886: {\n        towgs84: '0,0,0'\n    },\n    EPSG_8431: {\n        towgs84: '0,0,0'\n    },\n    EPSG_8427: {\n        towgs84: '0,0,0'\n    },\n    EPSG_8699: {\n        towgs84: '0,0,0'\n    },\n    EPSG_8818: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4757: {\n        towgs84: '0,0,0'\n    },\n    EPSG_9140: {\n        towgs84: '0,0,0'\n    },\n    EPSG_8086: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4686: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4737: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4702: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4747: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4749: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4674: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4755: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4759: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4762: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4763: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4764: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4166: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4170: {\n        towgs84: '0,0,0'\n    },\n    EPSG_5546: {\n        towgs84: '0,0,0'\n    },\n    EPSG_7844: {\n        towgs84: '0,0,0'\n    },\n    EPSG_4818: {\n        towgs84: '589,76,480'\n    }\n};\nfor(var $c36bbc8057de3d00$var$key in $c36bbc8057de3d00$var$datums){\n    var $c36bbc8057de3d00$var$datum = $c36bbc8057de3d00$var$datums[$c36bbc8057de3d00$var$key];\n    if (!$c36bbc8057de3d00$var$datum.datumName) continue;\n    $c36bbc8057de3d00$var$datums[$c36bbc8057de3d00$var$datum.datumName] = $c36bbc8057de3d00$var$datum;\n}\nvar $c36bbc8057de3d00$export$2e2bcd8739ae039 = $c36bbc8057de3d00$var$datums;\n\n});\n\nparcelRegister(\"3MCqb\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $2c13a87cc45f972b$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $2c13a87cc45f972b$var$datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n    var out = {};\n    if (datumCode === undefined || datumCode === 'none') out.datum_type = (0, $gyVUi.PJD_NODATUM);\n    else out.datum_type = (0, $gyVUi.PJD_WGS84);\n    if (datum_params) {\n        out.datum_params = datum_params.map(parseFloat);\n        if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) out.datum_type = (0, $gyVUi.PJD_3PARAM);\n        if (out.datum_params.length > 3) {\n            if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n                out.datum_type = (0, $gyVUi.PJD_7PARAM);\n                out.datum_params[3] *= (0, $gyVUi.SEC_TO_RAD);\n                out.datum_params[4] *= (0, $gyVUi.SEC_TO_RAD);\n                out.datum_params[5] *= (0, $gyVUi.SEC_TO_RAD);\n                out.datum_params[6] = out.datum_params[6] / 1000000.0 + 1.0;\n            }\n        }\n    }\n    if (nadgrids) {\n        out.datum_type = (0, $gyVUi.PJD_GRIDSHIFT);\n        out.grids = nadgrids;\n    }\n    out.a = a; // datum object also uses these values\n    out.b = b;\n    out.es = es;\n    out.ep2 = ep2;\n    return out;\n}\nvar $2c13a87cc45f972b$export$2e2bcd8739ae039 = $2c13a87cc45f972b$var$datum;\n\n});\n\nparcelRegister(\"flUkq\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $b2d482da445fbb18$export$2e2bcd8739ae039);\n$parcel$export(module.exports, \"getNadgrids\", () => $b2d482da445fbb18$export$31c4d9288d81329a);\n/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */ var $b2d482da445fbb18$var$loadedNadgrids = {};\nfunction $b2d482da445fbb18$export$2e2bcd8739ae039(key, data, options) {\n    if (data instanceof ArrayBuffer) return $b2d482da445fbb18$var$readNTV2Grid(key, data, options);\n    return {\n        ready: $b2d482da445fbb18$var$readGeotiffGrid(key, data)\n    };\n}\nfunction $b2d482da445fbb18$var$readNTV2Grid(key, data, options) {\n    var includeErrorFields = true;\n    if (options !== undefined && options.includeErrorFields === false) includeErrorFields = false;\n    var view = new DataView(data);\n    var isLittleEndian = $b2d482da445fbb18$var$detectLittleEndian(view);\n    var header = $b2d482da445fbb18$var$readHeader(view, isLittleEndian);\n    var subgrids = $b2d482da445fbb18$var$readSubgrids(view, header, isLittleEndian, includeErrorFields);\n    var nadgrid = {\n        header: header,\n        subgrids: subgrids\n    };\n    $b2d482da445fbb18$var$loadedNadgrids[key] = nadgrid;\n    return nadgrid;\n}\nasync function $b2d482da445fbb18$var$readGeotiffGrid(key, tiff) {\n    var subgrids = [];\n    var subGridCount = await tiff.getImageCount();\n    // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n    for(var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--){\n        var image = await tiff.getImage(subgridIndex);\n        var rasters = await image.readRasters();\n        var data = rasters;\n        var lim = [\n            image.getWidth(),\n            image.getHeight()\n        ];\n        var imageBBoxRadians = image.getBoundingBox().map($b2d482da445fbb18$var$degreesToRadians);\n        var del = [\n            image.fileDirectory.ModelPixelScale[0],\n            image.fileDirectory.ModelPixelScale[1]\n        ].map($b2d482da445fbb18$var$degreesToRadians);\n        var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n        var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n        var latitudeOffsetBand = data[0];\n        var longitudeOffsetBand = data[1];\n        var nodes = [];\n        for(let i = lim[1] - 1; i >= 0; i--)for(let j = lim[0] - 1; j >= 0; j--){\n            var index = i * lim[0] + j;\n            nodes.push([\n                -$b2d482da445fbb18$var$secondsToRadians(longitudeOffsetBand[index]),\n                $b2d482da445fbb18$var$secondsToRadians(latitudeOffsetBand[index])\n            ]);\n        }\n        subgrids.push({\n            del: del,\n            lim: lim,\n            ll: [\n                -maxX,\n                minY\n            ],\n            cvs: nodes\n        });\n    }\n    var tifGrid = {\n        header: {\n            nSubgrids: subGridCount\n        },\n        subgrids: subgrids\n    };\n    $b2d482da445fbb18$var$loadedNadgrids[key] = tifGrid;\n    return tifGrid;\n}\nfunction $b2d482da445fbb18$export$31c4d9288d81329a(nadgrids) {\n    // Format details: http://proj.maptools.org/gen_parms.html\n    if (nadgrids === undefined) return null;\n    var grids = nadgrids.split(',');\n    return grids.map($b2d482da445fbb18$var$parseNadgridString);\n}\nfunction $b2d482da445fbb18$var$parseNadgridString(value) {\n    if (value.length === 0) return null;\n    var optional = value[0] === '@';\n    if (optional) value = value.slice(1);\n    if (value === 'null') return {\n        name: 'null',\n        mandatory: !optional,\n        grid: null,\n        isNull: true\n    };\n    return {\n        name: value,\n        mandatory: !optional,\n        grid: $b2d482da445fbb18$var$loadedNadgrids[value] || null,\n        isNull: false\n    };\n}\nfunction $b2d482da445fbb18$var$degreesToRadians(degrees) {\n    return degrees * Math.PI / 180;\n}\nfunction $b2d482da445fbb18$var$secondsToRadians(seconds) {\n    return seconds / 3600 * Math.PI / 180;\n}\nfunction $b2d482da445fbb18$var$detectLittleEndian(view) {\n    var nFields = view.getInt32(8, false);\n    if (nFields === 11) return false;\n    nFields = view.getInt32(8, true);\n    if (nFields !== 11) console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n    return true;\n}\nfunction $b2d482da445fbb18$var$readHeader(view, isLittleEndian) {\n    return {\n        nFields: view.getInt32(8, isLittleEndian),\n        nSubgridFields: view.getInt32(24, isLittleEndian),\n        nSubgrids: view.getInt32(40, isLittleEndian),\n        shiftType: $b2d482da445fbb18$var$decodeString(view, 56, 64).trim(),\n        fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n        fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n        toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n        toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n    };\n}\nfunction $b2d482da445fbb18$var$decodeString(view, start, end) {\n    return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\nfunction $b2d482da445fbb18$var$readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n    var gridOffset = 176;\n    var grids = [];\n    for(var i = 0; i < header.nSubgrids; i++){\n        var subHeader = $b2d482da445fbb18$var$readGridHeader(view, gridOffset, isLittleEndian);\n        var nodes = $b2d482da445fbb18$var$readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n        var lngColumnCount = Math.round(1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n        var latColumnCount = Math.round(1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n        // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n        grids.push({\n            ll: [\n                $b2d482da445fbb18$var$secondsToRadians(subHeader.lowerLongitude),\n                $b2d482da445fbb18$var$secondsToRadians(subHeader.lowerLatitude)\n            ],\n            del: [\n                $b2d482da445fbb18$var$secondsToRadians(subHeader.longitudeInterval),\n                $b2d482da445fbb18$var$secondsToRadians(subHeader.latitudeInterval)\n            ],\n            lim: [\n                lngColumnCount,\n                latColumnCount\n            ],\n            count: subHeader.gridNodeCount,\n            cvs: $b2d482da445fbb18$var$mapNodes(nodes)\n        });\n        var rowSize = 16;\n        if (includeErrorFields === false) rowSize = 8;\n        gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n    }\n    return grids;\n}\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */ function $b2d482da445fbb18$var$mapNodes(nodes) {\n    return nodes.map(function(r) {\n        return [\n            $b2d482da445fbb18$var$secondsToRadians(r.longitudeShift),\n            $b2d482da445fbb18$var$secondsToRadians(r.latitudeShift)\n        ];\n    });\n}\nfunction $b2d482da445fbb18$var$readGridHeader(view, offset, isLittleEndian) {\n    return {\n        name: $b2d482da445fbb18$var$decodeString(view, offset + 8, offset + 16).trim(),\n        parent: $b2d482da445fbb18$var$decodeString(view, offset + 24, offset + 24 + 8).trim(),\n        lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n        upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n        lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n        upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n        latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n        longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n        gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n    };\n}\nfunction $b2d482da445fbb18$var$readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n    var nodesOffset = offset + 176;\n    var gridRecordLength = 16;\n    if (includeErrorFields === false) gridRecordLength = 8;\n    var gridShiftRecords = [];\n    for(var i = 0; i < gridHeader.gridNodeCount; i++){\n        var record = {\n            latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n            longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n        };\n        if (includeErrorFields !== false) {\n            record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n            record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n        }\n        gridShiftRecords.push(record);\n    }\n    return gridShiftRecords;\n}\n\n});\n\n\nparcelRegister(\"ceNev\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $8e8cfb7cbefc2113$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $d7qcu = parcelRequire(\"d7qcu\");\n\nvar $hL60j = parcelRequire(\"hL60j\");\n\nvar $38qqf = parcelRequire(\"38qqf\");\n\nvar $5vTfu = parcelRequire(\"5vTfu\");\n\nvar $coO2L = parcelRequire(\"coO2L\");\nfunction $8e8cfb7cbefc2113$var$checkNotWGS(source, dest) {\n    return (source.datum.datum_type === (0, $gyVUi.PJD_3PARAM) || source.datum.datum_type === (0, $gyVUi.PJD_7PARAM) || source.datum.datum_type === (0, $gyVUi.PJD_GRIDSHIFT)) && dest.datumCode !== 'WGS84' || (dest.datum.datum_type === (0, $gyVUi.PJD_3PARAM) || dest.datum.datum_type === (0, $gyVUi.PJD_7PARAM) || dest.datum.datum_type === (0, $gyVUi.PJD_GRIDSHIFT)) && source.datumCode !== 'WGS84';\n}\nfunction $8e8cfb7cbefc2113$export$2e2bcd8739ae039(source, dest, point, enforceAxis) {\n    var wgs84;\n    if (Array.isArray(point)) point = (0, $5vTfu.default)(point);\n    else // Clone the point object so inputs don't get modified\n    point = {\n        x: point.x,\n        y: point.y,\n        z: point.z,\n        m: point.m\n    };\n    var hasZ = point.z !== undefined;\n    (0, $coO2L.default)(point);\n    // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n    if (source.datum && dest.datum && $8e8cfb7cbefc2113$var$checkNotWGS(source, dest)) {\n        wgs84 = new (0, $38qqf.default)('WGS84');\n        point = $8e8cfb7cbefc2113$export$2e2bcd8739ae039(source, wgs84, point, enforceAxis);\n        source = wgs84;\n    }\n    // DGR, 2010/11/12\n    if (enforceAxis && source.axis !== 'enu') point = (0, $hL60j.default)(source, false, point);\n    // Transform source points to long/lat, if they aren't already.\n    if (source.projName === 'longlat') point = {\n        x: point.x * (0, $gyVUi.D2R),\n        y: point.y * (0, $gyVUi.D2R),\n        z: point.z || 0\n    };\n    else {\n        if (source.to_meter) point = {\n            x: point.x * source.to_meter,\n            y: point.y * source.to_meter,\n            z: point.z || 0\n        };\n        point = source.inverse(point); // Convert Cartesian to longlat\n        if (!point) return;\n    }\n    // Adjust for the prime meridian if necessary\n    if (source.from_greenwich) point.x += source.from_greenwich;\n    // Convert datums if needed, and if possible.\n    point = (0, $d7qcu.default)(source.datum, dest.datum, point);\n    if (!point) return;\n    // Adjust for the prime meridian if necessary\n    if (dest.from_greenwich) point = {\n        x: point.x - dest.from_greenwich,\n        y: point.y,\n        z: point.z || 0\n    };\n    if (dest.projName === 'longlat') // convert radians to decimal degrees\n    point = {\n        x: point.x * (0, $gyVUi.R2D),\n        y: point.y * (0, $gyVUi.R2D),\n        z: point.z || 0\n    };\n    else {\n        point = dest.forward(point);\n        if (dest.to_meter) point = {\n            x: point.x / dest.to_meter,\n            y: point.y / dest.to_meter,\n            z: point.z || 0\n        };\n    }\n    // DGR, 2010/11/12\n    if (enforceAxis && dest.axis !== 'enu') return (0, $hL60j.default)(dest, true, point);\n    if (point && !hasZ) delete point.z;\n    return point;\n}\n\n});\nparcelRegister(\"d7qcu\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $98d040a88dc0214f$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $4YPx7 = parcelRequire(\"4YPx7\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\nfunction $98d040a88dc0214f$var$checkParams(type) {\n    return type === (0, $gyVUi.PJD_3PARAM) || type === (0, $gyVUi.PJD_7PARAM);\n}\nfunction $98d040a88dc0214f$export$2e2bcd8739ae039(source, dest, point) {\n    // Short cut if the datums are identical.\n    if ((0, $4YPx7.compareDatums)(source, dest)) return point; // in this case, zero is sucess,\n    // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n    if (source.datum_type === (0, $gyVUi.PJD_NODATUM) || dest.datum_type === (0, $gyVUi.PJD_NODATUM)) return point;\n    // If this datum requires grid shifts, then apply it to geodetic coordinates.\n    var source_a = source.a;\n    var source_es = source.es;\n    if (source.datum_type === (0, $gyVUi.PJD_GRIDSHIFT)) {\n        var gridShiftCode = $98d040a88dc0214f$export$cfa06df23524576a(source, false, point);\n        if (gridShiftCode !== 0) return undefined;\n        source_a = (0, $gyVUi.SRS_WGS84_SEMIMAJOR);\n        source_es = (0, $gyVUi.SRS_WGS84_ESQUARED);\n    }\n    var dest_a = dest.a;\n    var dest_b = dest.b;\n    var dest_es = dest.es;\n    if (dest.datum_type === (0, $gyVUi.PJD_GRIDSHIFT)) {\n        dest_a = (0, $gyVUi.SRS_WGS84_SEMIMAJOR);\n        dest_b = (0, $gyVUi.SRS_WGS84_SEMIMINOR);\n        dest_es = (0, $gyVUi.SRS_WGS84_ESQUARED);\n    }\n    // Do we need to go through geocentric coordinates?\n    if (source_es === dest_es && source_a === dest_a && !$98d040a88dc0214f$var$checkParams(source.datum_type) && !$98d040a88dc0214f$var$checkParams(dest.datum_type)) return point;\n    // Convert to geocentric coordinates.\n    point = (0, $4YPx7.geodeticToGeocentric)(point, source_es, source_a);\n    // Convert between datums\n    if ($98d040a88dc0214f$var$checkParams(source.datum_type)) point = (0, $4YPx7.geocentricToWgs84)(point, source.datum_type, source.datum_params);\n    if ($98d040a88dc0214f$var$checkParams(dest.datum_type)) point = (0, $4YPx7.geocentricFromWgs84)(point, dest.datum_type, dest.datum_params);\n    point = (0, $4YPx7.geocentricToGeodetic)(point, dest_es, dest_a, dest_b);\n    if (dest.datum_type === (0, $gyVUi.PJD_GRIDSHIFT)) {\n        var destGridShiftResult = $98d040a88dc0214f$export$cfa06df23524576a(dest, true, point);\n        if (destGridShiftResult !== 0) return undefined;\n    }\n    return point;\n}\nfunction $98d040a88dc0214f$export$cfa06df23524576a(source, inverse, point) {\n    if (source.grids === null || source.grids.length === 0) {\n        console.log('Grid shift grids not found');\n        return -1;\n    }\n    var input = {\n        x: -point.x,\n        y: point.y\n    };\n    var output = {\n        x: Number.NaN,\n        y: Number.NaN\n    };\n    var attemptedGrids = [];\n    outer: for(var i = 0; i < source.grids.length; i++){\n        var grid = source.grids[i];\n        attemptedGrids.push(grid.name);\n        if (grid.isNull) {\n            output = input;\n            break;\n        }\n        if (grid.grid === null) {\n            if (grid.mandatory) {\n                console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n                return -1;\n            }\n            continue;\n        }\n        var subgrids = grid.grid.subgrids;\n        for(var j = 0, jj = subgrids.length; j < jj; j++){\n            var subgrid = subgrids[j];\n            // skip tables that don't match our point at all\n            var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n            var minX = subgrid.ll[0] - epsilon;\n            var minY = subgrid.ll[1] - epsilon;\n            var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n            var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n            if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) continue;\n            output = $98d040a88dc0214f$var$applySubgridShift(input, inverse, subgrid);\n            if (!isNaN(output.x)) break outer;\n        }\n    }\n    if (isNaN(output.x)) {\n        console.log('Failed to find a grid shift table for location \\'' + -input.x * (0, $gyVUi.R2D) + ' ' + input.y * (0, $gyVUi.R2D) + ' tried: \\'' + attemptedGrids + '\\'');\n        return -1;\n    }\n    point.x = -output.x;\n    point.y = output.y;\n    return 0;\n}\nfunction $98d040a88dc0214f$var$applySubgridShift(pin, inverse, ct) {\n    var val = {\n        x: Number.NaN,\n        y: Number.NaN\n    };\n    if (isNaN(pin.x)) return val;\n    var tb = {\n        x: pin.x,\n        y: pin.y\n    };\n    tb.x -= ct.ll[0];\n    tb.y -= ct.ll[1];\n    tb.x = (0, $a9oRf.default)(tb.x - Math.PI) + Math.PI;\n    var t = $98d040a88dc0214f$var$nadInterpolate(tb, ct);\n    if (inverse) {\n        if (isNaN(t.x)) return val;\n        t.x = tb.x - t.x;\n        t.y = tb.y - t.y;\n        var i = 9, tol = 1e-12;\n        var dif, del;\n        do {\n            del = $98d040a88dc0214f$var$nadInterpolate(t, ct);\n            if (isNaN(del.x)) {\n                console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n                break;\n            }\n            dif = {\n                x: tb.x - (del.x + t.x),\n                y: tb.y - (del.y + t.y)\n            };\n            t.x += dif.x;\n            t.y += dif.y;\n        }while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n        if (i < 0) {\n            console.log('Inverse grid shift iterator failed to converge.');\n            return val;\n        }\n        val.x = (0, $a9oRf.default)(t.x + ct.ll[0]);\n        val.y = t.y + ct.ll[1];\n    } else if (!isNaN(t.x)) {\n        val.x = pin.x + t.x;\n        val.y = pin.y + t.y;\n    }\n    return val;\n}\nfunction $98d040a88dc0214f$var$nadInterpolate(pin, ct) {\n    var t = {\n        x: pin.x / ct.del[0],\n        y: pin.y / ct.del[1]\n    };\n    var indx = {\n        x: Math.floor(t.x),\n        y: Math.floor(t.y)\n    };\n    var frct = {\n        x: t.x - 1.0 * indx.x,\n        y: t.y - 1.0 * indx.y\n    };\n    var val = {\n        x: Number.NaN,\n        y: Number.NaN\n    };\n    var inx;\n    if (indx.x < 0 || indx.x >= ct.lim[0]) return val;\n    if (indx.y < 0 || indx.y >= ct.lim[1]) return val;\n    inx = indx.y * ct.lim[0] + indx.x;\n    var f00 = {\n        x: ct.cvs[inx][0],\n        y: ct.cvs[inx][1]\n    };\n    inx++;\n    var f10 = {\n        x: ct.cvs[inx][0],\n        y: ct.cvs[inx][1]\n    };\n    inx += ct.lim[0];\n    var f11 = {\n        x: ct.cvs[inx][0],\n        y: ct.cvs[inx][1]\n    };\n    inx--;\n    var f01 = {\n        x: ct.cvs[inx][0],\n        y: ct.cvs[inx][1]\n    };\n    var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y), m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n    val.x = m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x;\n    val.y = m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y;\n    return val;\n}\n\n});\nparcelRegister(\"4YPx7\", function(module, exports) {\n\n$parcel$export(module.exports, \"compareDatums\", () => $3a04bd721826a648$export$68c8d8590fbb24e4);\n$parcel$export(module.exports, \"geodeticToGeocentric\", () => $3a04bd721826a648$export$4a4ae2976f9a808a);\n$parcel$export(module.exports, \"geocentricToGeodetic\", () => $3a04bd721826a648$export$26210192c8922750);\n$parcel$export(module.exports, \"geocentricToWgs84\", () => $3a04bd721826a648$export$d18952b9ecb47c8f);\n$parcel$export(module.exports, \"geocentricFromWgs84\", () => $3a04bd721826a648$export$2b744ad521e7ac0b);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n'use strict';\nfunction $3a04bd721826a648$export$68c8d8590fbb24e4(source, dest) {\n    if (source.datum_type !== dest.datum_type) return false; // false, datums are not equal\n    else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n    else if (source.datum_type === (0, $gyVUi.PJD_3PARAM)) return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2];\n    else if (source.datum_type === (0, $gyVUi.PJD_7PARAM)) return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6];\n    else return true; // datums are equal\n} // cs_compare_datums()\nfunction $3a04bd721826a648$export$4a4ae2976f9a808a(p, es, a) {\n    var Longitude = p.x;\n    var Latitude = p.y;\n    var Height = p.z ? p.z : 0; // Z value not always supplied\n    var Rn; /*  Earth radius at location  */ \n    var Sin_Lat; /*  Math.sin(Latitude)  */ \n    var Sin2_Lat; /*  Square of Math.sin(Latitude)  */ \n    var Cos_Lat; /*  Math.cos(Latitude)  */ \n    /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */ if (Latitude < -(0, $gyVUi.HALF_PI) && Latitude > -1.001 * (0, $gyVUi.HALF_PI)) Latitude = -(0, $gyVUi.HALF_PI);\n    else if (Latitude > (0, $gyVUi.HALF_PI) && Latitude < 1.001 * (0, $gyVUi.HALF_PI)) Latitude = (0, $gyVUi.HALF_PI);\n    else if (Latitude < -(0, $gyVUi.HALF_PI)) /* Latitude out of range */ // ..reportError('geocent:lat out of range:' + Latitude);\n    return {\n        x: -Infinity,\n        y: -Infinity,\n        z: p.z\n    };\n    else if (Latitude > (0, $gyVUi.HALF_PI)) /* Latitude out of range */ return {\n        x: Infinity,\n        y: Infinity,\n        z: p.z\n    };\n    if (Longitude > Math.PI) Longitude -= 2 * Math.PI;\n    Sin_Lat = Math.sin(Latitude);\n    Cos_Lat = Math.cos(Latitude);\n    Sin2_Lat = Sin_Lat * Sin_Lat;\n    Rn = a / Math.sqrt(1.0e0 - es * Sin2_Lat);\n    return {\n        x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n        y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n        z: (Rn * (1 - es) + Height) * Sin_Lat\n    };\n} // cs_geodetic_to_geocentric()\nfunction $3a04bd721826a648$export$26210192c8922750(p, es, a, b) {\n    /* local defintions and variables */ /* end-criterium of loop, accuracy of sin(Latitude) */ var genau = 1e-12;\n    var genau2 = genau * genau;\n    var maxiter = 30;\n    var P; /* distance between semi-minor axis and location */ \n    var RR; /* distance between center and location */ \n    var CT; /* sin of geocentric latitude */ \n    var ST; /* cos of geocentric latitude */ \n    var RX;\n    var RK;\n    var RN; /* Earth radius at location */ \n    var CPHI0; /* cos of start or old geodetic latitude in iterations */ \n    var SPHI0; /* sin of start or old geodetic latitude in iterations */ \n    var CPHI; /* cos of searched geodetic latitude */ \n    var SPHI; /* sin of searched geodetic latitude */ \n    var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */ \n    var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */ \n    var X = p.x;\n    var Y = p.y;\n    var Z = p.z ? p.z : 0.0; // Z value not always supplied\n    var Longitude;\n    var Latitude;\n    var Height;\n    P = Math.sqrt(X * X + Y * Y);\n    RR = Math.sqrt(X * X + Y * Y + Z * Z);\n    /*      special cases for latitude and longitude */ if (P / a < genau) {\n        /*  special case, if P=0. (X=0., Y=0.) */ Longitude = 0.0;\n        /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */ if (RR / a < genau) {\n            Latitude = (0, $gyVUi.HALF_PI);\n            Height = -b;\n            return {\n                x: p.x,\n                y: p.y,\n                z: p.z\n            };\n        }\n    } else /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */ Longitude = Math.atan2(Y, X);\n    /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */ CT = Z / RR;\n    ST = P / RR;\n    RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n    CPHI0 = ST * (1.0 - es) * RX;\n    SPHI0 = CT * RX;\n    iter = 0;\n    /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */ do {\n        iter++;\n        RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n        /*  ellipsoidal (geodetic) height */ Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n        RK = es * RN / (RN + Height);\n        RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n        CPHI = ST * (1.0 - RK) * RX;\n        SPHI = CT * RX;\n        SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n        CPHI0 = CPHI;\n        SPHI0 = SPHI;\n    }while (SDPHI * SDPHI > genau2 && iter < maxiter);\n    /*      ellipsoidal (geodetic) latitude */ Latitude = Math.atan(SPHI / Math.abs(CPHI));\n    return {\n        x: Longitude,\n        y: Latitude,\n        z: Height\n    };\n} // cs_geocentric_to_geodetic()\nfunction $3a04bd721826a648$export$d18952b9ecb47c8f(p, datum_type, datum_params) {\n    if (datum_type === (0, $gyVUi.PJD_3PARAM)) // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n        x: p.x + datum_params[0],\n        y: p.y + datum_params[1],\n        z: p.z + datum_params[2]\n    };\n    else if (datum_type === (0, $gyVUi.PJD_7PARAM)) {\n        var Dx_BF = datum_params[0];\n        var Dy_BF = datum_params[1];\n        var Dz_BF = datum_params[2];\n        var Rx_BF = datum_params[3];\n        var Ry_BF = datum_params[4];\n        var Rz_BF = datum_params[5];\n        var M_BF = datum_params[6];\n        // if( x[io] === HUGE_VAL )\n        //    continue;\n        return {\n            x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n            y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n            z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n        };\n    }\n} // cs_geocentric_to_wgs84\nfunction $3a04bd721826a648$export$2b744ad521e7ac0b(p, datum_type, datum_params) {\n    if (datum_type === (0, $gyVUi.PJD_3PARAM)) // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n        x: p.x - datum_params[0],\n        y: p.y - datum_params[1],\n        z: p.z - datum_params[2]\n    };\n    else if (datum_type === (0, $gyVUi.PJD_7PARAM)) {\n        var Dx_BF = datum_params[0];\n        var Dy_BF = datum_params[1];\n        var Dz_BF = datum_params[2];\n        var Rx_BF = datum_params[3];\n        var Ry_BF = datum_params[4];\n        var Rz_BF = datum_params[5];\n        var M_BF = datum_params[6];\n        var x_tmp = (p.x - Dx_BF) / M_BF;\n        var y_tmp = (p.y - Dy_BF) / M_BF;\n        var z_tmp = (p.z - Dz_BF) / M_BF;\n        // if( x[io] === HUGE_VAL )\n        //    continue;\n        return {\n            x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n            y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n            z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n        };\n    } // cs_geocentric_from_wgs84()\n}\n\n});\n\n\nparcelRegister(\"hL60j\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $cedb7bb5617791b0$export$2e2bcd8739ae039);\nfunction $cedb7bb5617791b0$export$2e2bcd8739ae039(crs, denorm, point) {\n    var xin = point.x, yin = point.y, zin = point.z || 0.0;\n    var v, t, i;\n    var out = {};\n    for(i = 0; i < 3; i++){\n        if (denorm && i === 2 && point.z === undefined) continue;\n        if (i === 0) {\n            v = xin;\n            if ('ew'.indexOf(crs.axis[i]) !== -1) t = 'x';\n            else t = 'y';\n        } else if (i === 1) {\n            v = yin;\n            if ('ns'.indexOf(crs.axis[i]) !== -1) t = 'y';\n            else t = 'x';\n        } else {\n            v = zin;\n            t = 'z';\n        }\n        switch(crs.axis[i]){\n            case 'e':\n                out[t] = v;\n                break;\n            case 'w':\n                out[t] = -v;\n                break;\n            case 'n':\n                out[t] = v;\n                break;\n            case 's':\n                out[t] = -v;\n                break;\n            case 'u':\n                if (point[t] !== undefined) out.z = v;\n                break;\n            case 'd':\n                if (point[t] !== undefined) out.z = -v;\n                break;\n            default:\n                // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n                return null;\n        }\n    }\n    return out;\n}\n\n});\n\nparcelRegister(\"5vTfu\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $01093474ae9bd8f6$export$2e2bcd8739ae039);\nfunction $01093474ae9bd8f6$export$2e2bcd8739ae039(array) {\n    var out = {\n        x: array[0],\n        y: array[1]\n    };\n    if (array.length > 2) out.z = array[2];\n    if (array.length > 3) out.m = array[3];\n    return out;\n}\n\n});\n\nparcelRegister(\"coO2L\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $906e8b8bdc80d434$export$2e2bcd8739ae039);\nfunction $906e8b8bdc80d434$export$2e2bcd8739ae039(point) {\n    $906e8b8bdc80d434$var$checkCoord(point.x);\n    $906e8b8bdc80d434$var$checkCoord(point.y);\n}\nfunction $906e8b8bdc80d434$var$checkCoord(num) {\n    if (typeof Number.isFinite === 'function') {\n        if (Number.isFinite(num)) return;\n        throw new TypeError('coordinates must be finite numbers');\n    }\n    if (typeof num !== 'number' || num !== num || !isFinite(num)) throw new TypeError('coordinates must be finite numbers');\n}\n\n});\n\n\n\nparcelRegister(\"iCFRA\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $d8ec3fc1ff061c76$export$2e2bcd8739ae039);\n\nvar $4hMrQ = parcelRequire(\"4hMrQ\");\nfunction $d8ec3fc1ff061c76$var$Point(x, y, z) {\n    if (!(this instanceof $d8ec3fc1ff061c76$var$Point)) return new $d8ec3fc1ff061c76$var$Point(x, y, z);\n    if (Array.isArray(x)) {\n        this.x = x[0];\n        this.y = x[1];\n        this.z = x[2] || 0.0;\n    } else if (typeof x === 'object') {\n        this.x = x.x;\n        this.y = x.y;\n        this.z = x.z || 0.0;\n    } else if (typeof x === 'string' && typeof y === 'undefined') {\n        var coords = x.split(',');\n        this.x = parseFloat(coords[0], 10);\n        this.y = parseFloat(coords[1], 10);\n        this.z = parseFloat(coords[2], 10) || 0.0;\n    } else {\n        this.x = x;\n        this.y = y;\n        this.z = z || 0.0;\n    }\n    console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n$d8ec3fc1ff061c76$var$Point.fromMGRS = function(mgrsStr) {\n    return new $d8ec3fc1ff061c76$var$Point((0, $4hMrQ.toPoint)(mgrsStr));\n};\n$d8ec3fc1ff061c76$var$Point.prototype.toMGRS = function(accuracy) {\n    return (0, $4hMrQ.forward)([\n        this.x,\n        this.y\n    ], accuracy);\n};\nvar $d8ec3fc1ff061c76$export$2e2bcd8739ae039 = $d8ec3fc1ff061c76$var$Point;\n\n});\nparcelRegister(\"4hMrQ\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $31ee54b8e1d1cd8f$export$2e2bcd8739ae039);\n$parcel$export(module.exports, \"forward\", () => $31ee54b8e1d1cd8f$export$174bb771924e7eb1);\n$parcel$export(module.exports, \"toPoint\", () => $31ee54b8e1d1cd8f$export$b63cca88ddc558a9);\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */ var $31ee54b8e1d1cd8f$var$NUM_100K_SETS = 6;\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */ var $31ee54b8e1d1cd8f$var$SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */ var $31ee54b8e1d1cd8f$var$SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\nvar $31ee54b8e1d1cd8f$var$A = 65; // A\nvar $31ee54b8e1d1cd8f$var$I = 73; // I\nvar $31ee54b8e1d1cd8f$var$O = 79; // O\nvar $31ee54b8e1d1cd8f$var$V = 86; // V\nvar $31ee54b8e1d1cd8f$var$Z = 90; // Z\nvar $31ee54b8e1d1cd8f$export$2e2bcd8739ae039 = {\n    forward: $31ee54b8e1d1cd8f$export$174bb771924e7eb1,\n    inverse: $31ee54b8e1d1cd8f$export$70ae2c07e401031b,\n    toPoint: $31ee54b8e1d1cd8f$export$b63cca88ddc558a9\n};\nfunction $31ee54b8e1d1cd8f$export$174bb771924e7eb1(ll, accuracy) {\n    accuracy = accuracy || 5; // default accuracy 1m\n    return $31ee54b8e1d1cd8f$var$encode($31ee54b8e1d1cd8f$var$LLtoUTM({\n        lat: ll[1],\n        lon: ll[0]\n    }), accuracy);\n}\nfunction $31ee54b8e1d1cd8f$export$70ae2c07e401031b(mgrs) {\n    var bbox = $31ee54b8e1d1cd8f$var$UTMtoLL($31ee54b8e1d1cd8f$var$decode(mgrs.toUpperCase()));\n    if (bbox.lat && bbox.lon) return [\n        bbox.lon,\n        bbox.lat,\n        bbox.lon,\n        bbox.lat\n    ];\n    return [\n        bbox.left,\n        bbox.bottom,\n        bbox.right,\n        bbox.top\n    ];\n}\nfunction $31ee54b8e1d1cd8f$export$b63cca88ddc558a9(mgrs) {\n    var bbox = $31ee54b8e1d1cd8f$var$UTMtoLL($31ee54b8e1d1cd8f$var$decode(mgrs.toUpperCase()));\n    if (bbox.lat && bbox.lon) return [\n        bbox.lon,\n        bbox.lat\n    ];\n    return [\n        (bbox.left + bbox.right) / 2,\n        (bbox.top + bbox.bottom) / 2\n    ];\n}\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */ function $31ee54b8e1d1cd8f$var$degToRad(deg) {\n    return deg * (Math.PI / 180.0);\n}\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */ function $31ee54b8e1d1cd8f$var$radToDeg(rad) {\n    return 180.0 * (rad / Math.PI);\n}\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */ function $31ee54b8e1d1cd8f$var$LLtoUTM(ll) {\n    var Lat = ll.lat;\n    var Long = ll.lon;\n    var a = 6378137.0; //ellip.radius;\n    var eccSquared = 0.00669438; //ellip.eccsq;\n    var k0 = 0.9996;\n    var LongOrigin;\n    var eccPrimeSquared;\n    var N, T, C, A, M;\n    var LatRad = $31ee54b8e1d1cd8f$var$degToRad(Lat);\n    var LongRad = $31ee54b8e1d1cd8f$var$degToRad(Long);\n    var LongOriginRad;\n    var ZoneNumber;\n    // (int)\n    ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n    //Make sure the longitude 180.00 is in Zone 60\n    if (Long === 180) ZoneNumber = 60;\n    // Special zone for Norway\n    if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) ZoneNumber = 32;\n    // Special zones for Svalbard\n    if (Lat >= 72.0 && Lat < 84.0) {\n        if (Long >= 0.0 && Long < 9.0) ZoneNumber = 31;\n        else if (Long >= 9.0 && Long < 21.0) ZoneNumber = 33;\n        else if (Long >= 21.0 && Long < 33.0) ZoneNumber = 35;\n        else if (Long >= 33.0 && Long < 42.0) ZoneNumber = 37;\n    }\n    LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n    // in middle of\n    // zone\n    LongOriginRad = $31ee54b8e1d1cd8f$var$degToRad(LongOrigin);\n    eccPrimeSquared = eccSquared / (1 - eccSquared);\n    N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n    T = Math.tan(LatRad) * Math.tan(LatRad);\n    C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n    A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n    M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - 35 * eccSquared * eccSquared * eccSquared / 3072 * Math.sin(6 * LatRad));\n    var UTMEasting = k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0;\n    var UTMNorthing = k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0));\n    if (Lat < 0.0) UTMNorthing += 10000000.0; //10000000 meter offset for\n    return {\n        northing: Math.round(UTMNorthing),\n        easting: Math.round(UTMEasting),\n        zoneNumber: ZoneNumber,\n        zoneLetter: $31ee54b8e1d1cd8f$var$getLetterDesignator(Lat)\n    };\n}\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */ function $31ee54b8e1d1cd8f$var$UTMtoLL(utm) {\n    var UTMNorthing = utm.northing;\n    var UTMEasting = utm.easting;\n    var zoneLetter = utm.zoneLetter;\n    var zoneNumber = utm.zoneNumber;\n    // check the ZoneNummber is valid\n    if (zoneNumber < 0 || zoneNumber > 60) return null;\n    var k0 = 0.9996;\n    var a = 6378137.0; //ellip.radius;\n    var eccSquared = 0.00669438; //ellip.eccsq;\n    var eccPrimeSquared;\n    var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n    var N1, T1, C1, R1, D, M;\n    var LongOrigin;\n    var mu, phi1Rad;\n    // remove 500,000 meter offset for longitude\n    var x = UTMEasting - 500000.0;\n    var y = UTMNorthing;\n    // We must know somehow if we are in the Northern or Southern\n    // hemisphere, this is the only time we use the letter So even\n    // if the Zone letter isn't exactly correct it should indicate\n    // the hemisphere correctly\n    if (zoneLetter < 'N') y -= 10000000.0; // remove 10,000,000 meter offset used\n    // There are 60 zones with zone 1 being at West -180 to -174\n    LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n    // in middle of\n    // zone\n    eccPrimeSquared = eccSquared / (1 - eccSquared);\n    M = y / k0;\n    mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n    phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + 151 * e1 * e1 * e1 / 96 * Math.sin(6 * mu);\n    // double phi1 = ProjMath.radToDeg(phi1Rad);\n    N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n    T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n    C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n    R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n    D = x / (N1 * k0);\n    var lat = phi1Rad - N1 * Math.tan(phi1Rad) / R1 * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n    lat = $31ee54b8e1d1cd8f$var$radToDeg(lat);\n    var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n    lon = LongOrigin + $31ee54b8e1d1cd8f$var$radToDeg(lon);\n    var result;\n    if (utm.accuracy) {\n        var topRight = $31ee54b8e1d1cd8f$var$UTMtoLL({\n            northing: utm.northing + utm.accuracy,\n            easting: utm.easting + utm.accuracy,\n            zoneLetter: utm.zoneLetter,\n            zoneNumber: utm.zoneNumber\n        });\n        result = {\n            top: topRight.lat,\n            right: topRight.lon,\n            bottom: lat,\n            left: lon\n        };\n    } else result = {\n        lat: lat,\n        lon: lon\n    };\n    return result;\n}\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */ function $31ee54b8e1d1cd8f$var$getLetterDesignator(lat) {\n    //This is here as an error flag to show that the Latitude is\n    //outside MGRS limits\n    var LetterDesignator = 'Z';\n    if (84 >= lat && lat >= 72) LetterDesignator = 'X';\n    else if (72 > lat && lat >= 64) LetterDesignator = 'W';\n    else if (64 > lat && lat >= 56) LetterDesignator = 'V';\n    else if (56 > lat && lat >= 48) LetterDesignator = 'U';\n    else if (48 > lat && lat >= 40) LetterDesignator = 'T';\n    else if (40 > lat && lat >= 32) LetterDesignator = 'S';\n    else if (32 > lat && lat >= 24) LetterDesignator = 'R';\n    else if (24 > lat && lat >= 16) LetterDesignator = 'Q';\n    else if (16 > lat && lat >= 8) LetterDesignator = 'P';\n    else if (8 > lat && lat >= 0) LetterDesignator = 'N';\n    else if (0 > lat && lat >= -8) LetterDesignator = 'M';\n    else if (-8 > lat && lat >= -16) LetterDesignator = 'L';\n    else if (-16 > lat && lat >= -24) LetterDesignator = 'K';\n    else if (-24 > lat && lat >= -32) LetterDesignator = 'J';\n    else if (-32 > lat && lat >= -40) LetterDesignator = 'H';\n    else if (-40 > lat && lat >= -48) LetterDesignator = 'G';\n    else if (-48 > lat && lat >= -56) LetterDesignator = 'F';\n    else if (-56 > lat && lat >= -64) LetterDesignator = 'E';\n    else if (-64 > lat && lat >= -72) LetterDesignator = 'D';\n    else if (-72 > lat && lat >= -80) LetterDesignator = 'C';\n    return LetterDesignator;\n}\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */ function $31ee54b8e1d1cd8f$var$encode(utm, accuracy) {\n    // prepend with leading zeroes\n    var seasting = \"00000\" + utm.easting, snorthing = \"00000\" + utm.northing;\n    return utm.zoneNumber + utm.zoneLetter + $31ee54b8e1d1cd8f$var$get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */ function $31ee54b8e1d1cd8f$var$get100kID(easting, northing, zoneNumber) {\n    var setParm = $31ee54b8e1d1cd8f$var$get100kSetForZone(zoneNumber);\n    var setColumn = Math.floor(easting / 100000);\n    var setRow = Math.floor(northing / 100000) % 20;\n    return $31ee54b8e1d1cd8f$var$getLetter100kID(setColumn, setRow, setParm);\n}\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */ function $31ee54b8e1d1cd8f$var$get100kSetForZone(i) {\n    var setParm = i % $31ee54b8e1d1cd8f$var$NUM_100K_SETS;\n    if (setParm === 0) setParm = $31ee54b8e1d1cd8f$var$NUM_100K_SETS;\n    return setParm;\n}\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */ function $31ee54b8e1d1cd8f$var$getLetter100kID(column, row, parm) {\n    // colOrigin and rowOrigin are the letters at the origin of the set\n    var index = parm - 1;\n    var colOrigin = $31ee54b8e1d1cd8f$var$SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n    var rowOrigin = $31ee54b8e1d1cd8f$var$SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n    // colInt and rowInt are the letters to build to return\n    var colInt = colOrigin + column - 1;\n    var rowInt = rowOrigin + row;\n    var rollover = false;\n    if (colInt > $31ee54b8e1d1cd8f$var$Z) {\n        colInt = colInt - $31ee54b8e1d1cd8f$var$Z + $31ee54b8e1d1cd8f$var$A - 1;\n        rollover = true;\n    }\n    if (colInt === $31ee54b8e1d1cd8f$var$I || colOrigin < $31ee54b8e1d1cd8f$var$I && colInt > $31ee54b8e1d1cd8f$var$I || (colInt > $31ee54b8e1d1cd8f$var$I || colOrigin < $31ee54b8e1d1cd8f$var$I) && rollover) colInt++;\n    if (colInt === $31ee54b8e1d1cd8f$var$O || colOrigin < $31ee54b8e1d1cd8f$var$O && colInt > $31ee54b8e1d1cd8f$var$O || (colInt > $31ee54b8e1d1cd8f$var$O || colOrigin < $31ee54b8e1d1cd8f$var$O) && rollover) {\n        colInt++;\n        if (colInt === $31ee54b8e1d1cd8f$var$I) colInt++;\n    }\n    if (colInt > $31ee54b8e1d1cd8f$var$Z) colInt = colInt - $31ee54b8e1d1cd8f$var$Z + $31ee54b8e1d1cd8f$var$A - 1;\n    if (rowInt > $31ee54b8e1d1cd8f$var$V) {\n        rowInt = rowInt - $31ee54b8e1d1cd8f$var$V + $31ee54b8e1d1cd8f$var$A - 1;\n        rollover = true;\n    } else rollover = false;\n    if (rowInt === $31ee54b8e1d1cd8f$var$I || rowOrigin < $31ee54b8e1d1cd8f$var$I && rowInt > $31ee54b8e1d1cd8f$var$I || (rowInt > $31ee54b8e1d1cd8f$var$I || rowOrigin < $31ee54b8e1d1cd8f$var$I) && rollover) rowInt++;\n    if (rowInt === $31ee54b8e1d1cd8f$var$O || rowOrigin < $31ee54b8e1d1cd8f$var$O && rowInt > $31ee54b8e1d1cd8f$var$O || (rowInt > $31ee54b8e1d1cd8f$var$O || rowOrigin < $31ee54b8e1d1cd8f$var$O) && rollover) {\n        rowInt++;\n        if (rowInt === $31ee54b8e1d1cd8f$var$I) rowInt++;\n    }\n    if (rowInt > $31ee54b8e1d1cd8f$var$V) rowInt = rowInt - $31ee54b8e1d1cd8f$var$V + $31ee54b8e1d1cd8f$var$A - 1;\n    var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n    return twoLetter;\n}\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */ function $31ee54b8e1d1cd8f$var$decode(mgrsString) {\n    if (mgrsString && mgrsString.length === 0) throw \"MGRSPoint coverting from nothing\";\n    var length = mgrsString.length;\n    var hunK = null;\n    var sb = \"\";\n    var testChar;\n    var i = 0;\n    // get Zone number\n    while(!/[A-Z]/.test(testChar = mgrsString.charAt(i))){\n        if (i >= 2) throw \"MGRSPoint bad conversion from: \" + mgrsString;\n        sb += testChar;\n        i++;\n    }\n    var zoneNumber = parseInt(sb, 10);\n    if (i === 0 || i + 3 > length) // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw \"MGRSPoint bad conversion from: \" + mgrsString;\n    var zoneLetter = mgrsString.charAt(i++);\n    // Should we check the zone letter here? Why not.\n    if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') throw \"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString;\n    hunK = mgrsString.substring(i, i += 2);\n    var set = $31ee54b8e1d1cd8f$var$get100kSetForZone(zoneNumber);\n    var east100k = $31ee54b8e1d1cd8f$var$getEastingFromChar(hunK.charAt(0), set);\n    var north100k = $31ee54b8e1d1cd8f$var$getNorthingFromChar(hunK.charAt(1), set);\n    // We have a bug where the northing may be 2000000 too low.\n    // How\n    // do we know when to roll over?\n    while(north100k < $31ee54b8e1d1cd8f$var$getMinNorthing(zoneLetter))north100k += 2000000;\n    // calculate the char index for easting/northing separator\n    var remainder = length - i;\n    if (remainder % 2 !== 0) throw \"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString;\n    var sep = remainder / 2;\n    var sepEasting = 0.0;\n    var sepNorthing = 0.0;\n    var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n    if (sep > 0) {\n        accuracyBonus = 100000.0 / Math.pow(10, sep);\n        sepEastingString = mgrsString.substring(i, i + sep);\n        sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n        sepNorthingString = mgrsString.substring(i + sep);\n        sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n    }\n    easting = sepEasting + east100k;\n    northing = sepNorthing + north100k;\n    return {\n        easting: easting,\n        northing: northing,\n        zoneLetter: zoneLetter,\n        zoneNumber: zoneNumber,\n        accuracy: accuracyBonus\n    };\n}\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */ function $31ee54b8e1d1cd8f$var$getEastingFromChar(e, set) {\n    // colOrigin is the letter at the origin of the set for the\n    // column\n    var curCol = $31ee54b8e1d1cd8f$var$SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n    var eastingValue = 100000.0;\n    var rewindMarker = false;\n    while(curCol !== e.charCodeAt(0)){\n        curCol++;\n        if (curCol === $31ee54b8e1d1cd8f$var$I) curCol++;\n        if (curCol === $31ee54b8e1d1cd8f$var$O) curCol++;\n        if (curCol > $31ee54b8e1d1cd8f$var$Z) {\n            if (rewindMarker) throw \"Bad character: \" + e;\n            curCol = $31ee54b8e1d1cd8f$var$A;\n            rewindMarker = true;\n        }\n        eastingValue += 100000.0;\n    }\n    return eastingValue;\n}\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */ function $31ee54b8e1d1cd8f$var$getNorthingFromChar(n, set) {\n    if (n > 'V') throw \"MGRSPoint given invalid Northing \" + n;\n    // rowOrigin is the letter at the origin of the set for the\n    // column\n    var curRow = $31ee54b8e1d1cd8f$var$SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n    var northingValue = 0.0;\n    var rewindMarker = false;\n    while(curRow !== n.charCodeAt(0)){\n        curRow++;\n        if (curRow === $31ee54b8e1d1cd8f$var$I) curRow++;\n        if (curRow === $31ee54b8e1d1cd8f$var$O) curRow++;\n        // fixing a bug making whole application hang in this loop\n        // when 'n' is a wrong character\n        if (curRow > $31ee54b8e1d1cd8f$var$V) {\n            if (rewindMarker) throw \"Bad character: \" + n;\n            curRow = $31ee54b8e1d1cd8f$var$A;\n            rewindMarker = true;\n        }\n        northingValue += 100000.0;\n    }\n    return northingValue;\n}\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */ function $31ee54b8e1d1cd8f$var$getMinNorthing(zoneLetter) {\n    var northing;\n    switch(zoneLetter){\n        case 'C':\n            northing = 1100000.0;\n            break;\n        case 'D':\n            northing = 2000000.0;\n            break;\n        case 'E':\n            northing = 2800000.0;\n            break;\n        case 'F':\n            northing = 3700000.0;\n            break;\n        case 'G':\n            northing = 4600000.0;\n            break;\n        case 'H':\n            northing = 5500000.0;\n            break;\n        case 'J':\n            northing = 6400000.0;\n            break;\n        case 'K':\n            northing = 7300000.0;\n            break;\n        case 'L':\n            northing = 8200000.0;\n            break;\n        case 'M':\n            northing = 9100000.0;\n            break;\n        case 'N':\n            northing = 0.0;\n            break;\n        case 'P':\n            northing = 800000.0;\n            break;\n        case 'Q':\n            northing = 1700000.0;\n            break;\n        case 'R':\n            northing = 2600000.0;\n            break;\n        case 'S':\n            northing = 3500000.0;\n            break;\n        case 'T':\n            northing = 4400000.0;\n            break;\n        case 'U':\n            northing = 5300000.0;\n            break;\n        case 'V':\n            northing = 6200000.0;\n            break;\n        case 'W':\n            northing = 7000000.0;\n            break;\n        case 'X':\n            northing = 7900000.0;\n            break;\n        default:\n            northing = -1;\n    }\n    if (northing >= 0.0) return northing;\n    else throw \"Invalid zone letter: \" + zoneLetter;\n}\n\n});\n\n\nparcelRegister(\"j48cx\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $de14c0a63cfa0e0d$export$2e2bcd8739ae039);\n\nvar $9t3dO = parcelRequire(\"9t3dO\");\n\nvar $9zr9G = parcelRequire(\"9zr9G\");\n\nvar $kAWkR = parcelRequire(\"kAWkR\");\n\nvar $5HQRm = parcelRequire(\"5HQRm\");\n\nvar $llHto = parcelRequire(\"llHto\");\n\nvar $4gjYM = parcelRequire(\"4gjYM\");\n\nvar $ejQ1Z = parcelRequire(\"ejQ1Z\");\n\nvar $iubsy = parcelRequire(\"iubsy\");\n\nvar $h7o5G = parcelRequire(\"h7o5G\");\n\nvar $0599r = parcelRequire(\"0599r\");\n\nvar $deudM = parcelRequire(\"deudM\");\n\nvar $8mhgZ = parcelRequire(\"8mhgZ\");\n\nvar $iSJfu = parcelRequire(\"iSJfu\");\n\nvar $6CTAc = parcelRequire(\"6CTAc\");\n\nvar $cEGTl = parcelRequire(\"cEGTl\");\n\nvar $2Lrqq = parcelRequire(\"2Lrqq\");\n\nvar $6Eu1X = parcelRequire(\"6Eu1X\");\n\nvar $fpjAW = parcelRequire(\"fpjAW\");\n\nvar $eA4Bc = parcelRequire(\"eA4Bc\");\n\nvar $7uCfv = parcelRequire(\"7uCfv\");\n\nvar $hp0oy = parcelRequire(\"hp0oy\");\n\nvar $1W450 = parcelRequire(\"1W450\");\n\nvar $i6dz6 = parcelRequire(\"i6dz6\");\n\nvar $37G1n = parcelRequire(\"37G1n\");\n\nvar $2XUb4 = parcelRequire(\"2XUb4\");\n\nvar $byZja = parcelRequire(\"byZja\");\n\nvar $Fj8jS = parcelRequire(\"Fj8jS\");\n\nvar $eJp9e = parcelRequire(\"eJp9e\");\n\nvar $jJ6PL = parcelRequire(\"jJ6PL\");\n\nvar $cbANR = parcelRequire(\"cbANR\");\n\nvar $gtZfx = parcelRequire(\"gtZfx\");\nfunction $de14c0a63cfa0e0d$export$2e2bcd8739ae039(proj4) {\n    proj4.Proj.projections.add((0, $9t3dO.default));\n    proj4.Proj.projections.add((0, $9zr9G.default));\n    proj4.Proj.projections.add((0, $kAWkR.default));\n    proj4.Proj.projections.add((0, $5HQRm.default));\n    proj4.Proj.projections.add((0, $llHto.default));\n    proj4.Proj.projections.add((0, $4gjYM.default));\n    proj4.Proj.projections.add((0, $ejQ1Z.default));\n    proj4.Proj.projections.add((0, $iubsy.default));\n    proj4.Proj.projections.add((0, $h7o5G.default));\n    proj4.Proj.projections.add((0, $0599r.default));\n    proj4.Proj.projections.add((0, $deudM.default));\n    proj4.Proj.projections.add((0, $8mhgZ.default));\n    proj4.Proj.projections.add((0, $iSJfu.default));\n    proj4.Proj.projections.add((0, $6CTAc.default));\n    proj4.Proj.projections.add((0, $cEGTl.default));\n    proj4.Proj.projections.add((0, $2Lrqq.default));\n    proj4.Proj.projections.add((0, $6Eu1X.default));\n    proj4.Proj.projections.add((0, $fpjAW.default));\n    proj4.Proj.projections.add((0, $eA4Bc.default));\n    proj4.Proj.projections.add((0, $7uCfv.default));\n    proj4.Proj.projections.add((0, $hp0oy.default));\n    proj4.Proj.projections.add((0, $1W450.default));\n    proj4.Proj.projections.add((0, $i6dz6.default));\n    proj4.Proj.projections.add((0, $37G1n.default));\n    proj4.Proj.projections.add((0, $2XUb4.default));\n    proj4.Proj.projections.add((0, $byZja.default));\n    proj4.Proj.projections.add((0, $Fj8jS.default));\n    proj4.Proj.projections.add((0, $eJp9e.default));\n    proj4.Proj.projections.add((0, $jJ6PL.default));\n    proj4.Proj.projections.add((0, $cbANR.default));\n    proj4.Proj.projections.add((0, $gtZfx.default));\n}\n\n});\nparcelRegister(\"9t3dO\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $6e495242beb4668f$export$2e2bcd8739ae039);\n// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nvar $gqKpL = parcelRequire(\"gqKpL\");\n\nvar $hpUQm = parcelRequire(\"hpUQm\");\n\nvar $jQUK6 = parcelRequire(\"jQUK6\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $boTd3 = parcelRequire(\"boTd3\");\nfunction $6e495242beb4668f$export$2cd8252107eb640b() {\n    this.x0 = this.x0 !== undefined ? this.x0 : 0;\n    this.y0 = this.y0 !== undefined ? this.y0 : 0;\n    this.long0 = this.long0 !== undefined ? this.long0 : 0;\n    this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n    if (this.es) {\n        this.en = (0, $gqKpL.default)(this.es);\n        this.ml0 = (0, $hpUQm.default)(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n    }\n}\nfunction $6e495242beb4668f$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var delta_lon = (0, $a9oRf.default)(lon - this.long0);\n    var con;\n    var x, y;\n    var sin_phi = Math.sin(lat);\n    var cos_phi = Math.cos(lat);\n    if (!this.es) {\n        var b = cos_phi * Math.sin(delta_lon);\n        if (Math.abs(Math.abs(b) - 1) < (0, $gyVUi.EPSLN)) return 93;\n        else {\n            x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n            y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n            b = Math.abs(y);\n            if (b >= 1) {\n                if (b - 1 > (0, $gyVUi.EPSLN)) return 93;\n                else y = 0;\n            } else y = Math.acos(y);\n            if (lat < 0) y = -y;\n            y = this.a * this.k0 * (y - this.lat0) + this.y0;\n        }\n    } else {\n        var al = cos_phi * delta_lon;\n        var als = Math.pow(al, 2);\n        var c = this.ep2 * Math.pow(cos_phi, 2);\n        var cs = Math.pow(c, 2);\n        var tq = Math.abs(cos_phi) > (0, $gyVUi.EPSLN) ? Math.tan(lat) : 0;\n        var t = Math.pow(tq, 2);\n        var ts = Math.pow(t, 2);\n        con = 1 - this.es * Math.pow(sin_phi, 2);\n        al = al / Math.sqrt(con);\n        var ml = (0, $hpUQm.default)(lat, sin_phi, cos_phi, this.en);\n        x = this.a * (this.k0 * al * (1 + als / 6 * (1 - t + c + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c + als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) + this.x0;\n        y = this.a * (this.k0 * (ml - this.ml0 + sin_phi * delta_lon * al / 2 * (1 + als / 12 * (5 - t + 9 * c + 4 * cs + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) + this.y0;\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction $6e495242beb4668f$export$70ae2c07e401031b(p) {\n    var con, phi;\n    var lat, lon;\n    var x = (p.x - this.x0) * (1 / this.a);\n    var y = (p.y - this.y0) * (1 / this.a);\n    if (!this.es) {\n        var f = Math.exp(x / this.k0);\n        var g = 0.5 * (f - 1 / f);\n        var temp = this.lat0 + y / this.k0;\n        var h = Math.cos(temp);\n        con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n        lat = Math.asin(con);\n        if (y < 0) lat = -lat;\n        if (g === 0 && h === 0) lon = 0;\n        else lon = (0, $a9oRf.default)(Math.atan2(g, h) + this.long0);\n    } else {\n        con = this.ml0 + y / this.k0;\n        phi = (0, $jQUK6.default)(con, this.es, this.en);\n        if (Math.abs(phi) < (0, $gyVUi.HALF_PI)) {\n            var sin_phi = Math.sin(phi);\n            var cos_phi = Math.cos(phi);\n            var tan_phi = Math.abs(cos_phi) > (0, $gyVUi.EPSLN) ? Math.tan(phi) : 0;\n            var c = this.ep2 * Math.pow(cos_phi, 2);\n            var cs = Math.pow(c, 2);\n            var t = Math.pow(tan_phi, 2);\n            var ts = Math.pow(t, 2);\n            con = 1 - this.es * Math.pow(sin_phi, 2);\n            var d = x * Math.sqrt(con) / this.k0;\n            var ds = Math.pow(d, 2);\n            con = con * tan_phi;\n            lat = phi - con * ds / (1 - this.es) * 0.5 * (1 - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n            lon = (0, $a9oRf.default)(this.long0 + d * (1 - ds / 6 * (1 + 2 * t + c - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi);\n        } else {\n            lat = (0, $gyVUi.HALF_PI) * (0, $boTd3.default)(y);\n            lon = 0;\n        }\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $6e495242beb4668f$export$e4b2ac9215619f8d = [\n    'Fast_Transverse_Mercator',\n    'Fast Transverse Mercator'\n];\nvar $6e495242beb4668f$export$2e2bcd8739ae039 = {\n    init: $6e495242beb4668f$export$2cd8252107eb640b,\n    forward: $6e495242beb4668f$export$174bb771924e7eb1,\n    inverse: $6e495242beb4668f$export$70ae2c07e401031b,\n    names: $6e495242beb4668f$export$e4b2ac9215619f8d\n};\n\n});\nparcelRegister(\"gqKpL\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $bf6313ff986be9ac$export$2e2bcd8739ae039);\nvar $bf6313ff986be9ac$var$C00 = 1;\nvar $bf6313ff986be9ac$var$C02 = 0.25;\nvar $bf6313ff986be9ac$var$C04 = 0.046875;\nvar $bf6313ff986be9ac$var$C06 = 0.01953125;\nvar $bf6313ff986be9ac$var$C08 = 0.01068115234375;\nvar $bf6313ff986be9ac$var$C22 = 0.75;\nvar $bf6313ff986be9ac$var$C44 = 0.46875;\nvar $bf6313ff986be9ac$var$C46 = 0.01302083333333333333;\nvar $bf6313ff986be9ac$var$C48 = 0.00712076822916666666;\nvar $bf6313ff986be9ac$var$C66 = 0.36458333333333333333;\nvar $bf6313ff986be9ac$var$C68 = 0.00569661458333333333;\nvar $bf6313ff986be9ac$var$C88 = 0.3076171875;\nfunction $bf6313ff986be9ac$export$2e2bcd8739ae039(es) {\n    var en = [];\n    en[0] = $bf6313ff986be9ac$var$C00 - es * ($bf6313ff986be9ac$var$C02 + es * ($bf6313ff986be9ac$var$C04 + es * ($bf6313ff986be9ac$var$C06 + es * $bf6313ff986be9ac$var$C08)));\n    en[1] = es * ($bf6313ff986be9ac$var$C22 - es * ($bf6313ff986be9ac$var$C04 + es * ($bf6313ff986be9ac$var$C06 + es * $bf6313ff986be9ac$var$C08)));\n    var t = es * es;\n    en[2] = t * ($bf6313ff986be9ac$var$C44 - es * ($bf6313ff986be9ac$var$C46 + es * $bf6313ff986be9ac$var$C48));\n    t *= es;\n    en[3] = t * ($bf6313ff986be9ac$var$C66 - es * $bf6313ff986be9ac$var$C68);\n    en[4] = t * es * $bf6313ff986be9ac$var$C88;\n    return en;\n}\n\n});\n\nparcelRegister(\"hpUQm\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $cae0dd692f473684$export$2e2bcd8739ae039);\nfunction $cae0dd692f473684$export$2e2bcd8739ae039(phi, sphi, cphi, en) {\n    cphi *= sphi;\n    sphi *= sphi;\n    return en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4])));\n}\n\n});\n\nparcelRegister(\"jQUK6\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $e73ee39023f9c198$export$2e2bcd8739ae039);\n\nvar $hpUQm = parcelRequire(\"hpUQm\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nvar $e73ee39023f9c198$var$MAX_ITER = 20;\nfunction $e73ee39023f9c198$export$2e2bcd8739ae039(arg, es, en) {\n    var k = 1 / (1 - es);\n    var phi = arg;\n    for(var i = $e73ee39023f9c198$var$MAX_ITER; i; --i){\n        var s = Math.sin(phi);\n        var t = 1 - es * s * s;\n        // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n        // phi -= t * (t * Math.sqrt(t)) * k;\n        t = ((0, $hpUQm.default)(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n        phi -= t;\n        if (Math.abs(t) < (0, $gyVUi.EPSLN)) return phi;\n    }\n    // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n    return phi;\n}\n\n});\n\n\nparcelRegister(\"9zr9G\", function(module, exports) {\n\n$parcel$export(module.exports, \"init\", () => init);\n$parcel$export(module.exports, \"forward\", () => forward);\n$parcel$export(module.exports, \"inverse\", () => inverse);\n$parcel$export(module.exports, \"names\", () => names);\n$parcel$export(module.exports, \"default\", () => $6f7c72613b8aa92a$export$2e2bcd8739ae039);\n// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nvar $9t3dO = parcelRequire(\"9t3dO\");\n\nvar $zBlxr = parcelRequire(\"zBlxr\");\n\nvar $jU5gu = parcelRequire(\"jU5gu\");\n\nvar $cVtoA = parcelRequire(\"cVtoA\");\n\nvar $klaWo = parcelRequire(\"klaWo\");\n\nvar $k0stT = parcelRequire(\"k0stT\");\n\nvar $iKZ74 = parcelRequire(\"iKZ74\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\nfunction init() {\n    if (!this.approx && (isNaN(this.es) || this.es <= 0)) throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n    if (this.approx) {\n        // When '+approx' is set, use tmerc instead\n        (0, $9t3dO.default).init.apply(this);\n        this.forward = (0, $9t3dO.default).forward;\n        this.inverse = (0, $9t3dO.default).inverse;\n    }\n    this.x0 = this.x0 !== undefined ? this.x0 : 0;\n    this.y0 = this.y0 !== undefined ? this.y0 : 0;\n    this.long0 = this.long0 !== undefined ? this.long0 : 0;\n    this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n    this.cgb = [];\n    this.cbg = [];\n    this.utg = [];\n    this.gtu = [];\n    var f = this.es / (1 + Math.sqrt(1 - this.es));\n    var n = f / (2 - f);\n    var np = n;\n    this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n    this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n    np = np * n;\n    this.cgb[1] = np * (7 / 3 + n * (-1.6 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n    this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n    np = np * n;\n    this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n    this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (1.6 + n * (-12686 / 2835))));\n    np = np * n;\n    this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n    this.cbg[3] = np * (1237 / 630 + n * (-2.4 + n * (-24832 / 14175)));\n    np = np * n;\n    this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n    this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n    np = np * n;\n    this.cgb[5] = np * (601676 / 22275);\n    this.cbg[5] = np * (444337 / 155925);\n    np = Math.pow(n, 2);\n    this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n    this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n    this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n    this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n    this.gtu[1] = np * (13 / 48 + n * (-0.6 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n    np = np * n;\n    this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n    this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n    np = np * n;\n    this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n    this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n    np = np * n;\n    this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n    this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n    np = np * n;\n    this.utg[5] = np * (-20648693 / 638668800);\n    this.gtu[5] = np * 0.6650675310896665;\n    var Z = (0, $klaWo.default)(this.cbg, this.lat0);\n    this.Zb = -this.Qn * (Z + (0, $k0stT.default)(this.gtu, 2 * Z));\n}\nfunction forward(p) {\n    var Ce = (0, $a9oRf.default)(p.x - this.long0);\n    var Cn = p.y;\n    Cn = (0, $klaWo.default)(this.cbg, Cn);\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n    Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n    Ce = Math.atan2(sin_Ce * cos_Cn, (0, $jU5gu.default)(sin_Cn, cos_Cn * cos_Ce));\n    Ce = (0, $cVtoA.default)(Math.tan(Ce));\n    var tmp = (0, $iKZ74.default)(this.gtu, 2 * Cn, 2 * Ce);\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    var x;\n    var y;\n    if (Math.abs(Ce) <= 2.623395162778) {\n        x = this.a * (this.Qn * Ce) + this.x0;\n        y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n    } else {\n        x = Infinity;\n        y = Infinity;\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction inverse(p) {\n    var Ce = (p.x - this.x0) * (1 / this.a);\n    var Cn = (p.y - this.y0) * (1 / this.a);\n    Cn = (Cn - this.Zb) / this.Qn;\n    Ce = Ce / this.Qn;\n    var lon;\n    var lat;\n    if (Math.abs(Ce) <= 2.623395162778) {\n        var tmp = (0, $iKZ74.default)(this.utg, 2 * Cn, 2 * Ce);\n        Cn = Cn + tmp[0];\n        Ce = Ce + tmp[1];\n        Ce = Math.atan((0, $zBlxr.default)(Ce));\n        var sin_Cn = Math.sin(Cn);\n        var cos_Cn = Math.cos(Cn);\n        var sin_Ce = Math.sin(Ce);\n        var cos_Ce = Math.cos(Ce);\n        Cn = Math.atan2(sin_Cn * cos_Ce, (0, $jU5gu.default)(sin_Ce, cos_Ce * cos_Cn));\n        Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n        lon = (0, $a9oRf.default)(Ce + this.long0);\n        lat = (0, $klaWo.default)(this.cgb, Cn);\n    } else {\n        lon = Infinity;\n        lat = Infinity;\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar names = [\n    'Extended_Transverse_Mercator',\n    'Extended Transverse Mercator',\n    'etmerc',\n    'Transverse_Mercator',\n    'Transverse Mercator',\n    'Gauss Kruger',\n    'Gauss_Kruger',\n    'tmerc'\n];\nvar $6f7c72613b8aa92a$export$2e2bcd8739ae039 = {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};\n\n});\nparcelRegister(\"zBlxr\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $06b03d370063c40e$export$2e2bcd8739ae039);\nfunction $06b03d370063c40e$export$2e2bcd8739ae039(x) {\n    var r = Math.exp(x);\n    r = (r - 1 / r) / 2;\n    return r;\n}\n\n});\n\nparcelRegister(\"jU5gu\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $e7d754d244264a37$export$2e2bcd8739ae039);\nfunction $e7d754d244264a37$export$2e2bcd8739ae039(x, y) {\n    x = Math.abs(x);\n    y = Math.abs(y);\n    var a = Math.max(x, y);\n    var b = Math.min(x, y) / (a ? a : 1);\n    return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n});\n\nparcelRegister(\"cVtoA\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $96919c3c2b0cfee9$export$2e2bcd8739ae039);\n\nvar $jU5gu = parcelRequire(\"jU5gu\");\n\nvar $g1hBf = parcelRequire(\"g1hBf\");\nfunction $96919c3c2b0cfee9$export$2e2bcd8739ae039(x) {\n    var y = Math.abs(x);\n    y = (0, $g1hBf.default)(y * (1 + y / ((0, $jU5gu.default)(1, y) + 1)));\n    return x < 0 ? -y : y;\n}\n\n});\nparcelRegister(\"g1hBf\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $ba9a64430787103e$export$2e2bcd8739ae039);\nfunction $ba9a64430787103e$export$2e2bcd8739ae039(x) {\n    var y = 1 + x;\n    var z = y - 1;\n    return z === 0 ? x : x * Math.log(y) / z;\n}\n\n});\n\n\nparcelRegister(\"klaWo\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $ecee41736c9c0e4b$export$2e2bcd8739ae039);\nfunction $ecee41736c9c0e4b$export$2e2bcd8739ae039(pp, B) {\n    var cos_2B = 2 * Math.cos(2 * B);\n    var i = pp.length - 1;\n    var h1 = pp[i];\n    var h2 = 0;\n    var h;\n    while(--i >= 0){\n        h = -h2 + cos_2B * h1 + pp[i];\n        h2 = h1;\n        h1 = h;\n    }\n    return B + h * Math.sin(2 * B);\n}\n\n});\n\nparcelRegister(\"k0stT\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $e909e682fc23c405$export$2e2bcd8739ae039);\nfunction $e909e682fc23c405$export$2e2bcd8739ae039(pp, arg_r) {\n    var r = 2 * Math.cos(arg_r);\n    var i = pp.length - 1;\n    var hr1 = pp[i];\n    var hr2 = 0;\n    var hr;\n    while(--i >= 0){\n        hr = -hr2 + r * hr1 + pp[i];\n        hr2 = hr1;\n        hr1 = hr;\n    }\n    return Math.sin(arg_r) * hr;\n}\n\n});\n\nparcelRegister(\"iKZ74\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $da7beda932685c15$export$2e2bcd8739ae039);\n\nvar $zBlxr = parcelRequire(\"zBlxr\");\n\nvar $cz4ED = parcelRequire(\"cz4ED\");\nfunction $da7beda932685c15$export$2e2bcd8739ae039(pp, arg_r, arg_i) {\n    var sin_arg_r = Math.sin(arg_r);\n    var cos_arg_r = Math.cos(arg_r);\n    var sinh_arg_i = (0, $zBlxr.default)(arg_i);\n    var cosh_arg_i = (0, $cz4ED.default)(arg_i);\n    var r = 2 * cos_arg_r * cosh_arg_i;\n    var i = -2 * sin_arg_r * sinh_arg_i;\n    var j = pp.length - 1;\n    var hr = pp[j];\n    var hi1 = 0;\n    var hr1 = 0;\n    var hi = 0;\n    var hr2;\n    var hi2;\n    while(--j >= 0){\n        hr2 = hr1;\n        hi2 = hi1;\n        hr1 = hr;\n        hi1 = hi;\n        hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n        hi = -hi2 + i * hr1 + r * hi1;\n    }\n    r = sin_arg_r * cosh_arg_i;\n    i = cos_arg_r * sinh_arg_i;\n    return [\n        r * hr - i * hi,\n        r * hi + i * hr\n    ];\n}\n\n});\nparcelRegister(\"cz4ED\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $925c5d35b4e59088$export$2e2bcd8739ae039);\nfunction $925c5d35b4e59088$export$2e2bcd8739ae039(x) {\n    var r = Math.exp(x);\n    r = (r + 1 / r) / 2;\n    return r;\n}\n\n});\n\n\n\nparcelRegister(\"kAWkR\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $efe46ba059d82de2$export$2e2bcd8739ae039);\n\nvar $b4YJ1 = parcelRequire(\"b4YJ1\");\n\nvar $9zr9G = parcelRequire(\"9zr9G\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nvar $efe46ba059d82de2$export$3f91ef0e0d0d8bf8 = 'etmerc';\nfunction $efe46ba059d82de2$export$2cd8252107eb640b() {\n    var zone = (0, $b4YJ1.default)(this.zone, this.long0);\n    if (zone === undefined) throw new Error('unknown utm zone');\n    this.lat0 = 0;\n    this.long0 = (6 * Math.abs(zone) - 183) * (0, $gyVUi.D2R);\n    this.x0 = 500000;\n    this.y0 = this.utmSouth ? 10000000 : 0;\n    this.k0 = 0.9996;\n    (0, $9zr9G.default).init.apply(this);\n    this.forward = (0, $9zr9G.default).forward;\n    this.inverse = (0, $9zr9G.default).inverse;\n}\nvar $efe46ba059d82de2$export$e4b2ac9215619f8d = [\n    'Universal Transverse Mercator System',\n    'utm'\n];\nvar $efe46ba059d82de2$export$2e2bcd8739ae039 = {\n    init: $efe46ba059d82de2$export$2cd8252107eb640b,\n    names: $efe46ba059d82de2$export$e4b2ac9215619f8d,\n    dependsOn: $efe46ba059d82de2$export$3f91ef0e0d0d8bf8\n};\n\n});\nparcelRegister(\"b4YJ1\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $810f2c2910fd20b1$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\nfunction $810f2c2910fd20b1$export$2e2bcd8739ae039(zone, lon) {\n    if (zone === undefined) {\n        zone = Math.floor(((0, $a9oRf.default)(lon) + Math.PI) * 30 / Math.PI) + 1;\n        if (zone < 0) return 0;\n        else if (zone > 60) return 60;\n    }\n    return zone;\n}\n\n});\n\n\nparcelRegister(\"5HQRm\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $4279f8b9d31284e6$export$2e2bcd8739ae039);\n\nvar $zGHAa = parcelRequire(\"zGHAa\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $jU5gu = parcelRequire(\"jU5gu\");\nfunction $4279f8b9d31284e6$export$2cd8252107eb640b() {\n    (0, $zGHAa.default).init.apply(this);\n    if (!this.rc) return;\n    this.sinc0 = Math.sin(this.phic0);\n    this.cosc0 = Math.cos(this.phic0);\n    this.R2 = 2 * this.rc;\n    if (!this.title) this.title = 'Oblique Stereographic Alternative';\n}\nfunction $4279f8b9d31284e6$export$174bb771924e7eb1(p) {\n    var sinc, cosc, cosl, k;\n    p.x = (0, $a9oRf.default)(p.x - this.long0);\n    (0, $zGHAa.default).forward.apply(this, [\n        p\n    ]);\n    sinc = Math.sin(p.y);\n    cosc = Math.cos(p.y);\n    cosl = Math.cos(p.x);\n    k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n    p.x = k * cosc * Math.sin(p.x);\n    p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n    p.x = this.a * p.x + this.x0;\n    p.y = this.a * p.y + this.y0;\n    return p;\n}\nfunction $4279f8b9d31284e6$export$70ae2c07e401031b(p) {\n    var sinc, cosc, lon, lat, rho;\n    p.x = (p.x - this.x0) / this.a;\n    p.y = (p.y - this.y0) / this.a;\n    p.x /= this.k0;\n    p.y /= this.k0;\n    if (rho = (0, $jU5gu.default)(p.x, p.y)) {\n        var c = 2 * Math.atan2(rho, this.R2);\n        sinc = Math.sin(c);\n        cosc = Math.cos(c);\n        lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n        lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n    } else {\n        lat = this.phic0;\n        lon = 0;\n    }\n    p.x = lon;\n    p.y = lat;\n    (0, $zGHAa.default).inverse.apply(this, [\n        p\n    ]);\n    p.x = (0, $a9oRf.default)(p.x + this.long0);\n    return p;\n}\nvar $4279f8b9d31284e6$export$e4b2ac9215619f8d = [\n    'Stereographic_North_Pole',\n    'Oblique_Stereographic',\n    'sterea',\n    'Oblique Stereographic Alternative',\n    'Double_Stereographic'\n];\nvar $4279f8b9d31284e6$export$2e2bcd8739ae039 = {\n    init: $4279f8b9d31284e6$export$2cd8252107eb640b,\n    forward: $4279f8b9d31284e6$export$174bb771924e7eb1,\n    inverse: $4279f8b9d31284e6$export$70ae2c07e401031b,\n    names: $4279f8b9d31284e6$export$e4b2ac9215619f8d\n};\n\n});\nparcelRegister(\"zGHAa\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $06b464b721451620$export$2e2bcd8739ae039);\n\nvar $82Tex = parcelRequire(\"82Tex\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nvar $06b464b721451620$var$MAX_ITER = 20;\nfunction $06b464b721451620$export$2cd8252107eb640b() {\n    var sphi = Math.sin(this.lat0);\n    var cphi = Math.cos(this.lat0);\n    cphi *= cphi;\n    this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n    this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n    this.phic0 = Math.asin(sphi / this.C);\n    this.ratexp = 0.5 * this.C * this.e;\n    this.K = Math.tan(0.5 * this.phic0 + (0, $gyVUi.FORTPI)) / (Math.pow(Math.tan(0.5 * this.lat0 + (0, $gyVUi.FORTPI)), this.C) * (0, $82Tex.default)(this.e * sphi, this.ratexp));\n}\nfunction $06b464b721451620$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + (0, $gyVUi.FORTPI)), this.C) * (0, $82Tex.default)(this.e * Math.sin(lat), this.ratexp)) - (0, $gyVUi.HALF_PI);\n    p.x = this.C * lon;\n    return p;\n}\nfunction $06b464b721451620$export$70ae2c07e401031b(p) {\n    var DEL_TOL = 1e-14;\n    var lon = p.x / this.C;\n    var lat = p.y;\n    var num = Math.pow(Math.tan(0.5 * lat + (0, $gyVUi.FORTPI)) / this.K, 1 / this.C);\n    for(var i = $06b464b721451620$var$MAX_ITER; i > 0; --i){\n        lat = 2 * Math.atan(num * (0, $82Tex.default)(this.e * Math.sin(p.y), -0.5 * this.e)) - (0, $gyVUi.HALF_PI);\n        if (Math.abs(lat - p.y) < DEL_TOL) break;\n        p.y = lat;\n    }\n    /* convergence failed */ if (!i) return null;\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $06b464b721451620$export$e4b2ac9215619f8d = [\n    'gauss'\n];\nvar $06b464b721451620$export$2e2bcd8739ae039 = {\n    init: $06b464b721451620$export$2cd8252107eb640b,\n    forward: $06b464b721451620$export$174bb771924e7eb1,\n    inverse: $06b464b721451620$export$70ae2c07e401031b,\n    names: $06b464b721451620$export$e4b2ac9215619f8d\n};\n\n});\nparcelRegister(\"82Tex\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $5db95ad4da70d3a6$export$2e2bcd8739ae039);\nfunction $5db95ad4da70d3a6$export$2e2bcd8739ae039(esinp, exp) {\n    return Math.pow((1 - esinp) / (1 + esinp), exp);\n}\n\n});\n\n\n\nparcelRegister(\"llHto\", function(module, exports) {\n\n$parcel$export(module.exports, \"ssfn_\", () => ssfn_);\n$parcel$export(module.exports, \"init\", () => init);\n$parcel$export(module.exports, \"forward\", () => forward);\n$parcel$export(module.exports, \"inverse\", () => inverse);\n$parcel$export(module.exports, \"names\", () => names);\n$parcel$export(module.exports, \"default\", () => $f8ad4802022ce868$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $boTd3 = parcelRequire(\"boTd3\");\n\nvar $bi5ZC = parcelRequire(\"bi5ZC\");\n\nvar $3xC66 = parcelRequire(\"3xC66\");\n\nvar $2AZR8 = parcelRequire(\"2AZR8\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\nfunction ssfn_(phit, sinphi, eccen) {\n    sinphi *= eccen;\n    return Math.tan(0.5 * ((0, $gyVUi.HALF_PI) + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen);\n}\nfunction init() {\n    // setting default parameters\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.lat0 = this.lat0 || 0;\n    this.long0 = this.long0 || 0;\n    this.coslat0 = Math.cos(this.lat0);\n    this.sinlat0 = Math.sin(this.lat0);\n    if (this.sphere) {\n        if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= (0, $gyVUi.EPSLN)) this.k0 = 0.5 * (1 + (0, $boTd3.default)(this.lat0) * Math.sin(this.lat_ts));\n    } else {\n        if (Math.abs(this.coslat0) <= (0, $gyVUi.EPSLN)) {\n            if (this.lat0 > 0) // North pole\n            // trace('stere:north pole');\n            this.con = 1;\n            else // South pole\n            // trace('stere:south pole');\n            this.con = -1;\n        }\n        this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n        if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= (0, $gyVUi.EPSLN) && Math.abs(Math.cos(this.lat_ts)) > (0, $gyVUi.EPSLN)) // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n        // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n        this.k0 = 0.5 * this.cons * (0, $bi5ZC.default)(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / (0, $3xC66.default)(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n        this.ms1 = (0, $bi5ZC.default)(this.e, this.sinlat0, this.coslat0);\n        this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - (0, $gyVUi.HALF_PI);\n        this.cosX0 = Math.cos(this.X0);\n        this.sinX0 = Math.sin(this.X0);\n    }\n}\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var sinlat = Math.sin(lat);\n    var coslat = Math.cos(lat);\n    var A, X, sinX, cosX, ts, rh;\n    var dlon = (0, $a9oRf.default)(lon - this.long0);\n    if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= (0, $gyVUi.EPSLN) && Math.abs(lat + this.lat0) <= (0, $gyVUi.EPSLN)) {\n        // case of the origine point\n        // trace('stere:this is the origin point');\n        p.x = NaN;\n        p.y = NaN;\n        return p;\n    }\n    if (this.sphere) {\n        // trace('stere:sphere case');\n        A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n        p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n        p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n        return p;\n    } else {\n        X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - (0, $gyVUi.HALF_PI);\n        cosX = Math.cos(X);\n        sinX = Math.sin(X);\n        if (Math.abs(this.coslat0) <= (0, $gyVUi.EPSLN)) {\n            ts = (0, $3xC66.default)(this.e, lat * this.con, this.con * sinlat);\n            rh = 2 * this.a * this.k0 * ts / this.cons;\n            p.x = this.x0 + rh * Math.sin(lon - this.long0);\n            p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n            // trace(p.toString());\n            return p;\n        } else if (Math.abs(this.sinlat0) < (0, $gyVUi.EPSLN)) {\n            // Eq\n            // trace('stere:equateur');\n            A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n            p.y = A * sinX;\n        } else {\n            // other case\n            // trace('stere:normal case');\n            A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n            p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n        }\n        p.x = A * cosX * Math.sin(dlon) + this.x0;\n    }\n    // trace(p.toString());\n    return p;\n}\nfunction inverse(p) {\n    p.x -= this.x0;\n    p.y -= this.y0;\n    var lon, lat, ts, ce, Chi;\n    var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (this.sphere) {\n        var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n        lon = this.long0;\n        lat = this.lat0;\n        if (rh <= (0, $gyVUi.EPSLN)) {\n            p.x = lon;\n            p.y = lat;\n            return p;\n        }\n        lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n        if (Math.abs(this.coslat0) < (0, $gyVUi.EPSLN)) {\n            if (this.lat0 > 0) lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x, -1 * p.y));\n            else lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x, p.y));\n        } else lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n        p.x = lon;\n        p.y = lat;\n        return p;\n    } else if (Math.abs(this.coslat0) <= (0, $gyVUi.EPSLN)) {\n        if (rh <= (0, $gyVUi.EPSLN)) {\n            lat = this.lat0;\n            lon = this.long0;\n            p.x = lon;\n            p.y = lat;\n            // trace(p.toString());\n            return p;\n        }\n        p.x *= this.con;\n        p.y *= this.con;\n        ts = rh * this.cons / (2 * this.a * this.k0);\n        lat = this.con * (0, $2AZR8.default)(this.e, ts);\n        lon = this.con * (0, $a9oRf.default)(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n        ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n        lon = this.long0;\n        if (rh <= (0, $gyVUi.EPSLN)) Chi = this.X0;\n        else {\n            Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n            lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n        }\n        lat = -1 * (0, $2AZR8.default)(this.e, Math.tan(0.5 * ((0, $gyVUi.HALF_PI) + Chi)));\n    }\n    p.x = lon;\n    p.y = lat;\n    // trace(p.toString());\n    return p;\n}\nvar names = [\n    'stere',\n    'Stereographic_South_Pole',\n    'Polar_Stereographic_variant_A',\n    'Polar_Stereographic_variant_B',\n    'Polar_Stereographic'\n];\nvar $f8ad4802022ce868$export$2e2bcd8739ae039 = {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n    ssfn_: ssfn_\n};\n\n});\n\nparcelRegister(\"4gjYM\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $31a8278a941356d4$export$2e2bcd8739ae039);\n/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */ function $31a8278a941356d4$export$2cd8252107eb640b() {\n    var phy0 = this.lat0;\n    this.lambda0 = this.long0;\n    var sinPhy0 = Math.sin(phy0);\n    var semiMajorAxis = this.a;\n    var invF = this.rf;\n    var flattening = 1 / invF;\n    var e2 = 2 * flattening - Math.pow(flattening, 2);\n    var e = this.e = Math.sqrt(e2);\n    this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n    this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n    this.b0 = Math.asin(sinPhy0 / this.alpha);\n    var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n    var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n    var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n    this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\nfunction $31a8278a941356d4$export$174bb771924e7eb1(p) {\n    var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n    var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n    var S = -this.alpha * (Sa1 + Sa2) + this.K;\n    // spheric latitude\n    var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n    // spheric longitude\n    var I = this.alpha * (p.x - this.lambda0);\n    // psoeudo equatorial rotation\n    var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n    var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n    p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n    p.x = this.R * rotI + this.x0;\n    return p;\n}\nfunction $31a8278a941356d4$export$70ae2c07e401031b(p) {\n    var Y = p.x - this.x0;\n    var X = p.y - this.y0;\n    var rotI = Y / this.R;\n    var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n    var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n    var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n    var lambda = this.lambda0 + I / this.alpha;\n    var S = 0;\n    var phy = b;\n    var prevPhy = -1000;\n    var iteration = 0;\n    while(Math.abs(phy - prevPhy) > 0.0000001){\n        if (++iteration > 20) // ...reportError(\"omercFwdInfinity\");\n        return;\n        // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n        S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n        prevPhy = phy;\n        phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n    }\n    p.x = lambda;\n    p.y = phy;\n    return p;\n}\nvar $31a8278a941356d4$export$e4b2ac9215619f8d = [\n    'somerc'\n];\nvar $31a8278a941356d4$export$2e2bcd8739ae039 = {\n    init: $31a8278a941356d4$export$2cd8252107eb640b,\n    forward: $31a8278a941356d4$export$174bb771924e7eb1,\n    inverse: $31a8278a941356d4$export$70ae2c07e401031b,\n    names: $31a8278a941356d4$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"ejQ1Z\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $a6cb33582cb5910b$export$2e2bcd8739ae039);\n\nvar $3xC66 = parcelRequire(\"3xC66\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $2AZR8 = parcelRequire(\"2AZR8\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $1Wo5P = parcelRequire(\"1Wo5P\");\nvar $a6cb33582cb5910b$var$TOL = 1e-7;\nfunction $a6cb33582cb5910b$var$isTypeA(P) {\n    var typeAProjections = [\n        'Hotine_Oblique_Mercator',\n        'Hotine_Oblique_Mercator_variant_A',\n        'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'\n    ];\n    var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n    return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf((0, $1Wo5P.getNormalizedProjName)(projectionName)) !== -1;\n}\nfunction $a6cb33582cb5910b$export$2cd8252107eb640b() {\n    var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0, gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n    // only Type A uses the no_off or no_uoff property\n    // https://github.com/OSGeo/proj.4/issues/104\n    this.no_off = $a6cb33582cb5910b$var$isTypeA(this);\n    this.no_rot = 'no_rot' in this;\n    var alp = false;\n    if ('alpha' in this) alp = true;\n    var gam = false;\n    if ('rectified_grid_angle' in this) gam = true;\n    if (alp) alpha_c = this.alpha;\n    if (gam) gamma = this.rectified_grid_angle;\n    if (alp || gam) lamc = this.longc;\n    else {\n        lam1 = this.long1;\n        phi1 = this.lat1;\n        lam2 = this.long2;\n        phi2 = this.lat2;\n        if (Math.abs(phi1 - phi2) <= $a6cb33582cb5910b$var$TOL || (con = Math.abs(phi1)) <= $a6cb33582cb5910b$var$TOL || Math.abs(con - (0, $gyVUi.HALF_PI)) <= $a6cb33582cb5910b$var$TOL || Math.abs(Math.abs(this.lat0) - (0, $gyVUi.HALF_PI)) <= $a6cb33582cb5910b$var$TOL || Math.abs(Math.abs(phi2) - (0, $gyVUi.HALF_PI)) <= $a6cb33582cb5910b$var$TOL) throw new Error();\n    }\n    var one_es = 1.0 - this.es;\n    com = Math.sqrt(one_es);\n    if (Math.abs(this.lat0) > (0, $gyVUi.EPSLN)) {\n        sinph0 = Math.sin(this.lat0);\n        cosph0 = Math.cos(this.lat0);\n        con = 1 - this.es * sinph0 * sinph0;\n        this.B = cosph0 * cosph0;\n        this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n        this.A = this.B * this.k0 * com / con;\n        D = this.B * com / (cosph0 * Math.sqrt(con));\n        F = D * D - 1;\n        if (F <= 0) F = 0;\n        else {\n            F = Math.sqrt(F);\n            if (this.lat0 < 0) F = -F;\n        }\n        this.E = F += D;\n        this.E *= Math.pow((0, $3xC66.default)(this.e, this.lat0, sinph0), this.B);\n    } else {\n        this.B = 1 / com;\n        this.A = this.k0;\n        this.E = D = F = 1;\n    }\n    if (alp || gam) {\n        if (alp) {\n            gamma0 = Math.asin(Math.sin(alpha_c) / D);\n            if (!gam) gamma = alpha_c;\n        } else {\n            gamma0 = gamma;\n            alpha_c = Math.asin(D * Math.sin(gamma0));\n        }\n        this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n    } else {\n        H = Math.pow((0, $3xC66.default)(this.e, phi1, Math.sin(phi1)), this.B);\n        L = Math.pow((0, $3xC66.default)(this.e, phi2, Math.sin(phi2)), this.B);\n        F = this.E / H;\n        p = (L - H) / (L + H);\n        J = this.E * this.E;\n        J = (J - L * H) / (J + L * H);\n        con = lam1 - lam2;\n        if (con < -Math.pi) lam2 -= (0, $gyVUi.TWO_PI);\n        else if (con > Math.pi) lam2 += (0, $gyVUi.TWO_PI);\n        this.lam0 = (0, $a9oRf.default)(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n        gamma0 = Math.atan(2 * Math.sin(this.B * (0, $a9oRf.default)(lam1 - this.lam0)) / (F - 1 / F));\n        gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.singam = Math.sin(gamma0);\n    this.cosgam = Math.cos(gamma0);\n    this.sinrot = Math.sin(gamma);\n    this.cosrot = Math.cos(gamma);\n    this.rB = 1 / this.B;\n    this.ArB = this.A * this.rB;\n    this.BrA = 1 / this.ArB;\n    if (this.no_off) this.u_0 = 0;\n    else {\n        this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n        if (this.lat0 < 0) this.u_0 = -this.u_0;\n    }\n    F = 0.5 * gamma0;\n    this.v_pole_n = this.ArB * Math.log(Math.tan((0, $gyVUi.FORTPI) - F));\n    this.v_pole_s = this.ArB * Math.log(Math.tan((0, $gyVUi.FORTPI) + F));\n}\nfunction $a6cb33582cb5910b$export$174bb771924e7eb1(p) {\n    var coords = {};\n    var S, T, U, V, W, temp, u, v;\n    p.x = p.x - this.lam0;\n    if (Math.abs(Math.abs(p.y) - (0, $gyVUi.HALF_PI)) > (0, $gyVUi.EPSLN)) {\n        W = this.E / Math.pow((0, $3xC66.default)(this.e, p.y, Math.sin(p.y)), this.B);\n        temp = 1 / W;\n        S = 0.5 * (W - temp);\n        T = 0.5 * (W + temp);\n        V = Math.sin(this.B * p.x);\n        U = (S * this.singam - V * this.cosgam) / T;\n        if (Math.abs(Math.abs(U) - 1.0) < (0, $gyVUi.EPSLN)) throw new Error();\n        v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n        temp = Math.cos(this.B * p.x);\n        if (Math.abs(temp) < $a6cb33582cb5910b$var$TOL) u = this.A * p.x;\n        else u = this.ArB * Math.atan2(S * this.cosgam + V * this.singam, temp);\n    } else {\n        v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n        u = this.ArB * p.y;\n    }\n    if (this.no_rot) {\n        coords.x = u;\n        coords.y = v;\n    } else {\n        u -= this.u_0;\n        coords.x = v * this.cosrot + u * this.sinrot;\n        coords.y = u * this.cosrot - v * this.sinrot;\n    }\n    coords.x = this.a * coords.x + this.x0;\n    coords.y = this.a * coords.y + this.y0;\n    return coords;\n}\nfunction $a6cb33582cb5910b$export$70ae2c07e401031b(p) {\n    var u, v, Qp, Sp, Tp, Vp, Up;\n    var coords = {};\n    p.x = (p.x - this.x0) * (1.0 / this.a);\n    p.y = (p.y - this.y0) * (1.0 / this.a);\n    if (this.no_rot) {\n        v = p.y;\n        u = p.x;\n    } else {\n        v = p.x * this.cosrot - p.y * this.sinrot;\n        u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n    }\n    Qp = Math.exp(-this.BrA * v);\n    Sp = 0.5 * (Qp - 1 / Qp);\n    Tp = 0.5 * (Qp + 1 / Qp);\n    Vp = Math.sin(this.BrA * u);\n    Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n    if (Math.abs(Math.abs(Up) - 1) < (0, $gyVUi.EPSLN)) {\n        coords.x = 0;\n        coords.y = Up < 0 ? -(0, $gyVUi.HALF_PI) : (0, $gyVUi.HALF_PI);\n    } else {\n        coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n        coords.y = (0, $2AZR8.default)(this.e, Math.pow(coords.y, 1 / this.B));\n        if (coords.y === Infinity) throw new Error();\n        coords.x = -this.rB * Math.atan2(Sp * this.cosgam - Vp * this.singam, Math.cos(this.BrA * u));\n    }\n    coords.x += this.lam0;\n    return coords;\n}\nvar $a6cb33582cb5910b$export$e4b2ac9215619f8d = [\n    'Hotine_Oblique_Mercator',\n    'Hotine Oblique Mercator',\n    'Hotine_Oblique_Mercator_variant_A',\n    'Hotine_Oblique_Mercator_Variant_B',\n    'Hotine_Oblique_Mercator_Azimuth_Natural_Origin',\n    'Hotine_Oblique_Mercator_Two_Point_Natural_Origin',\n    'Hotine_Oblique_Mercator_Azimuth_Center',\n    'Oblique_Mercator',\n    'omerc'\n];\nvar $a6cb33582cb5910b$export$2e2bcd8739ae039 = {\n    init: $a6cb33582cb5910b$export$2cd8252107eb640b,\n    forward: $a6cb33582cb5910b$export$174bb771924e7eb1,\n    inverse: $a6cb33582cb5910b$export$70ae2c07e401031b,\n    names: $a6cb33582cb5910b$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"iubsy\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $d753eaf12887a276$export$2e2bcd8739ae039);\n\nvar $bi5ZC = parcelRequire(\"bi5ZC\");\n\nvar $3xC66 = parcelRequire(\"3xC66\");\n\nvar $boTd3 = parcelRequire(\"boTd3\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $2AZR8 = parcelRequire(\"2AZR8\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $d753eaf12887a276$export$2cd8252107eb640b() {\n    // double lat0;                    /* the reference latitude               */\n    // double long0;                   /* the reference longitude              */\n    // double lat1;                    /* first standard parallel              */\n    // double lat2;                    /* second standard parallel             */\n    // double r_maj;                   /* major axis                           */\n    // double r_min;                   /* minor axis                           */\n    // double false_east;              /* x offset in meters                   */\n    // double false_north;             /* y offset in meters                   */\n    // the above value can be set with proj4.defs\n    // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n    if (!this.lat2) this.lat2 = this.lat1;\n     // if lat2 is not defined\n    if (!this.k0) this.k0 = 1;\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    // Standard Parallels cannot be equal and on opposite sides of the equator\n    if (Math.abs(this.lat1 + this.lat2) < (0, $gyVUi.EPSLN)) return;\n    var temp = this.b / this.a;\n    this.e = Math.sqrt(1 - temp * temp);\n    var sin1 = Math.sin(this.lat1);\n    var cos1 = Math.cos(this.lat1);\n    var ms1 = (0, $bi5ZC.default)(this.e, sin1, cos1);\n    var ts1 = (0, $3xC66.default)(this.e, this.lat1, sin1);\n    var sin2 = Math.sin(this.lat2);\n    var cos2 = Math.cos(this.lat2);\n    var ms2 = (0, $bi5ZC.default)(this.e, sin2, cos2);\n    var ts2 = (0, $3xC66.default)(this.e, this.lat2, sin2);\n    var ts0 = Math.abs(Math.abs(this.lat0) - (0, $gyVUi.HALF_PI)) < (0, $gyVUi.EPSLN) ? 0 // Handle poles by setting ts0 to 0\n     : (0, $3xC66.default)(this.e, this.lat0, Math.sin(this.lat0));\n    if (Math.abs(this.lat1 - this.lat2) > (0, $gyVUi.EPSLN)) this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n    else this.ns = sin1;\n    if (isNaN(this.ns)) this.ns = sin1;\n    this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n    this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n    if (!this.title) this.title = 'Lambert Conformal Conic';\n}\nfunction $d753eaf12887a276$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    // singular cases :\n    if (Math.abs(2 * Math.abs(lat) - Math.PI) <= (0, $gyVUi.EPSLN)) lat = (0, $boTd3.default)(lat) * ((0, $gyVUi.HALF_PI) - 2 * (0, $gyVUi.EPSLN));\n    var con = Math.abs(Math.abs(lat) - (0, $gyVUi.HALF_PI));\n    var ts, rh1;\n    if (con > (0, $gyVUi.EPSLN)) {\n        ts = (0, $3xC66.default)(this.e, lat, Math.sin(lat));\n        rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n    } else {\n        con = lat * this.ns;\n        if (con <= 0) return null;\n        rh1 = 0;\n    }\n    var theta = this.ns * (0, $a9oRf.default)(lon - this.long0);\n    p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n    p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n    return p;\n}\nfunction $d753eaf12887a276$export$70ae2c07e401031b(p) {\n    var rh1, con, ts;\n    var lat, lon;\n    var x = (p.x - this.x0) / this.k0;\n    var y = this.rh - (p.y - this.y0) / this.k0;\n    if (this.ns > 0) {\n        rh1 = Math.sqrt(x * x + y * y);\n        con = 1;\n    } else {\n        rh1 = -Math.sqrt(x * x + y * y);\n        con = -1;\n    }\n    var theta = 0;\n    if (rh1 !== 0) theta = Math.atan2(con * x, con * y);\n    if (rh1 !== 0 || this.ns > 0) {\n        con = 1 / this.ns;\n        ts = Math.pow(rh1 / (this.a * this.f0), con);\n        lat = (0, $2AZR8.default)(this.e, ts);\n        if (lat === -9999) return null;\n    } else lat = -(0, $gyVUi.HALF_PI);\n    lon = (0, $a9oRf.default)(theta / this.ns + this.long0);\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $d753eaf12887a276$export$e4b2ac9215619f8d = [\n    'Lambert Tangential Conformal Conic Projection',\n    'Lambert_Conformal_Conic',\n    'Lambert_Conformal_Conic_1SP',\n    'Lambert_Conformal_Conic_2SP',\n    'lcc',\n    'Lambert Conic Conformal (1SP)',\n    'Lambert Conic Conformal (2SP)'\n];\nvar $d753eaf12887a276$export$2e2bcd8739ae039 = {\n    init: $d753eaf12887a276$export$2cd8252107eb640b,\n    forward: $d753eaf12887a276$export$174bb771924e7eb1,\n    inverse: $d753eaf12887a276$export$70ae2c07e401031b,\n    names: $d753eaf12887a276$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"h7o5G\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $c765c705b741a192$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\nfunction $c765c705b741a192$export$2cd8252107eb640b() {\n    this.a = 6377397.155;\n    this.es = 0.006674372230614;\n    this.e = Math.sqrt(this.es);\n    if (!this.lat0) this.lat0 = 0.863937979737193;\n    if (!this.long0) this.long0 = 0.4334234309119251;\n    /* if scale not set default to 0.9999 */ if (!this.k0) this.k0 = 0.9999;\n    this.s45 = 0.785398163397448; /* 45 */ \n    this.s90 = 2 * this.s45;\n    this.fi0 = this.lat0;\n    this.e2 = this.es;\n    this.e = Math.sqrt(this.e2);\n    this.alfa = Math.sqrt(1 + this.e2 * Math.pow(Math.cos(this.fi0), 4) / (1 - this.e2));\n    this.uq = 1.04216856380474;\n    this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n    this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n    this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n    this.k1 = this.k0;\n    this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n    this.s0 = 1.37008346281555;\n    this.n = Math.sin(this.s0);\n    this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n    this.ad = this.s90 - this.uq;\n}\nfunction $c765c705b741a192$export$174bb771924e7eb1(p) {\n    var gfi, u, deltav, s, d, eps, ro;\n    var lon = p.x;\n    var lat = p.y;\n    var delta_lon = (0, $a9oRf.default)(lon - this.long0);\n    /* Transformation */ gfi = Math.pow((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat)), this.alfa * this.e / 2);\n    u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n    deltav = -delta_lon * this.alfa;\n    s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n    d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n    eps = this.n * d;\n    ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n    p.y = ro * Math.cos(eps) / 1;\n    p.x = ro * Math.sin(eps) / 1;\n    if (!this.czech) {\n        p.y *= -1;\n        p.x *= -1;\n    }\n    return p;\n}\nfunction $c765c705b741a192$export$70ae2c07e401031b(p) {\n    var u, deltav, s, d, eps, ro, fi1;\n    var ok;\n    /* Transformation */ /* revert y, x */ var tmp = p.x;\n    p.x = p.y;\n    p.y = tmp;\n    if (!this.czech) {\n        p.y *= -1;\n        p.x *= -1;\n    }\n    ro = Math.sqrt(p.x * p.x + p.y * p.y);\n    eps = Math.atan2(p.y, p.x);\n    d = eps / Math.sin(this.s0);\n    s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n    u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n    deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n    p.x = this.long0 - deltav / this.alfa;\n    fi1 = u;\n    ok = 0;\n    var iter = 0;\n    do {\n        p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n        if (Math.abs(fi1 - p.y) < 0.0000000001) ok = 1;\n        fi1 = p.y;\n        iter += 1;\n    }while (ok === 0 && iter < 15);\n    if (iter >= 15) return null;\n    return p;\n}\nvar $c765c705b741a192$export$e4b2ac9215619f8d = [\n    'Krovak',\n    'krovak'\n];\nvar $c765c705b741a192$export$2e2bcd8739ae039 = {\n    init: $c765c705b741a192$export$2cd8252107eb640b,\n    forward: $c765c705b741a192$export$174bb771924e7eb1,\n    inverse: $c765c705b741a192$export$70ae2c07e401031b,\n    names: $c765c705b741a192$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"0599r\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $00f791059e8f61f5$export$2e2bcd8739ae039);\n\nvar $f3cKo = parcelRequire(\"f3cKo\");\n\nvar $bWC4D = parcelRequire(\"bWC4D\");\n\nvar $hU8aC = parcelRequire(\"hU8aC\");\n\nvar $i9r9A = parcelRequire(\"i9r9A\");\n\nvar $bM0eI = parcelRequire(\"bM0eI\");\n\nvar $3eeGT = parcelRequire(\"3eeGT\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $aDUFA = parcelRequire(\"aDUFA\");\n\nvar $cfNuL = parcelRequire(\"cfNuL\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $00f791059e8f61f5$export$2cd8252107eb640b() {\n    if (!this.sphere) {\n        this.e0 = (0, $bWC4D.default)(this.es);\n        this.e1 = (0, $hU8aC.default)(this.es);\n        this.e2 = (0, $i9r9A.default)(this.es);\n        this.e3 = (0, $bM0eI.default)(this.es);\n        this.ml0 = this.a * (0, $f3cKo.default)(this.e0, this.e1, this.e2, this.e3, this.lat0);\n    }\n}\nfunction $00f791059e8f61f5$export$174bb771924e7eb1(p) {\n    /* Forward equations\n      ----------------- */ var x, y;\n    var lam = p.x;\n    var phi = p.y;\n    lam = (0, $a9oRf.default)(lam - this.long0);\n    if (this.sphere) {\n        x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n        y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n    } else {\n        // ellipsoid\n        var sinphi = Math.sin(phi);\n        var cosphi = Math.cos(phi);\n        var nl = (0, $3eeGT.default)(this.a, this.e, sinphi);\n        var tl = Math.tan(phi) * Math.tan(phi);\n        var al = lam * Math.cos(phi);\n        var asq = al * al;\n        var cl = this.es * cosphi * cosphi / (1 - this.es);\n        var ml = this.a * (0, $f3cKo.default)(this.e0, this.e1, this.e2, this.e3, phi);\n        x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n        y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n    }\n    p.x = x + this.x0;\n    p.y = y + this.y0;\n    return p;\n}\nfunction $00f791059e8f61f5$export$70ae2c07e401031b(p) {\n    p.x -= this.x0;\n    p.y -= this.y0;\n    var x = p.x / this.a;\n    var y = p.y / this.a;\n    var phi, lam;\n    if (this.sphere) {\n        var dd = y + this.lat0;\n        phi = Math.asin(Math.sin(dd) * Math.cos(x));\n        lam = Math.atan2(Math.tan(x), Math.cos(dd));\n    } else {\n        /* ellipsoid */ var ml1 = this.ml0 / this.a + y;\n        var phi1 = (0, $cfNuL.default)(ml1, this.e0, this.e1, this.e2, this.e3);\n        if (Math.abs(Math.abs(phi1) - (0, $gyVUi.HALF_PI)) <= (0, $gyVUi.EPSLN)) {\n            p.x = this.long0;\n            p.y = (0, $gyVUi.HALF_PI);\n            if (y < 0) p.y *= -1;\n            return p;\n        }\n        var nl1 = (0, $3eeGT.default)(this.a, this.e, Math.sin(phi1));\n        var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n        var tl1 = Math.pow(Math.tan(phi1), 2);\n        var dl = x * this.a / nl1;\n        var dsq = dl * dl;\n        phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n        lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n    }\n    p.x = (0, $a9oRf.default)(lam + this.long0);\n    p.y = (0, $aDUFA.default)(phi);\n    return p;\n}\nvar $00f791059e8f61f5$export$e4b2ac9215619f8d = [\n    'Cassini',\n    'Cassini_Soldner',\n    'cass'\n];\nvar $00f791059e8f61f5$export$2e2bcd8739ae039 = {\n    init: $00f791059e8f61f5$export$2cd8252107eb640b,\n    forward: $00f791059e8f61f5$export$174bb771924e7eb1,\n    inverse: $00f791059e8f61f5$export$70ae2c07e401031b,\n    names: $00f791059e8f61f5$export$e4b2ac9215619f8d\n};\n\n});\nparcelRegister(\"f3cKo\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $af51062589eeb2ce$export$2e2bcd8739ae039);\nfunction $af51062589eeb2ce$export$2e2bcd8739ae039(e0, e1, e2, e3, phi) {\n    return e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi);\n}\n\n});\n\nparcelRegister(\"bWC4D\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $8b22a51ec249391e$export$2e2bcd8739ae039);\nfunction $8b22a51ec249391e$export$2e2bcd8739ae039(x) {\n    return 1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x));\n}\n\n});\n\nparcelRegister(\"hU8aC\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $d08e0117e308bb87$export$2e2bcd8739ae039);\nfunction $d08e0117e308bb87$export$2e2bcd8739ae039(x) {\n    return 0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x));\n}\n\n});\n\nparcelRegister(\"i9r9A\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $d36e2161accfe0ec$export$2e2bcd8739ae039);\nfunction $d36e2161accfe0ec$export$2e2bcd8739ae039(x) {\n    return 0.05859375 * x * x * (1 + 0.75 * x);\n}\n\n});\n\nparcelRegister(\"bM0eI\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $89245c5bc9a5a616$export$2e2bcd8739ae039);\nfunction $89245c5bc9a5a616$export$2e2bcd8739ae039(x) {\n    return x * x * x * (35 / 3072);\n}\n\n});\n\nparcelRegister(\"3eeGT\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $259e1333723cc7cb$export$2e2bcd8739ae039);\nfunction $259e1333723cc7cb$export$2e2bcd8739ae039(a, e, sinphi) {\n    var temp = e * sinphi;\n    return a / Math.sqrt(1 - temp * temp);\n}\n\n});\n\nparcelRegister(\"aDUFA\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $7bf9815baea17aa9$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $boTd3 = parcelRequire(\"boTd3\");\nfunction $7bf9815baea17aa9$export$2e2bcd8739ae039(x) {\n    return Math.abs(x) < (0, $gyVUi.HALF_PI) ? x : x - (0, $boTd3.default)(x) * Math.PI;\n}\n\n});\n\nparcelRegister(\"cfNuL\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $8ebd4771f70de1ee$export$2e2bcd8739ae039);\nfunction $8ebd4771f70de1ee$export$2e2bcd8739ae039(ml, e0, e1, e2, e3) {\n    var phi;\n    var dphi;\n    phi = ml / e0;\n    for(var i = 0; i < 15; i++){\n        dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n        phi += dphi;\n        if (Math.abs(dphi) <= 0.0000000001) return phi;\n    }\n    // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n    return NaN;\n}\n\n});\n\n\nparcelRegister(\"deudM\", function(module, exports) {\n\n$parcel$export(module.exports, \"S_POLE\", () => S_POLE);\n$parcel$export(module.exports, \"N_POLE\", () => N_POLE);\n$parcel$export(module.exports, \"EQUIT\", () => EQUIT);\n$parcel$export(module.exports, \"OBLIQ\", () => OBLIQ);\n$parcel$export(module.exports, \"init\", () => init);\n$parcel$export(module.exports, \"forward\", () => forward);\n$parcel$export(module.exports, \"inverse\", () => inverse);\n$parcel$export(module.exports, \"names\", () => names);\n$parcel$export(module.exports, \"default\", () => $9a24067d8ab69621$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $874JP = parcelRequire(\"874JP\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\nvar S_POLE = 1;\nvar N_POLE = 2;\nvar EQUIT = 3;\nvar OBLIQ = 4;\nfunction init() {\n    var t = Math.abs(this.lat0);\n    if (Math.abs(t - (0, $gyVUi.HALF_PI)) < (0, $gyVUi.EPSLN)) this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n    else if (Math.abs(t) < (0, $gyVUi.EPSLN)) this.mode = this.EQUIT;\n    else this.mode = this.OBLIQ;\n    if (this.es > 0) {\n        var sinphi;\n        this.qp = (0, $874JP.default)(this.e, 1);\n        this.mmf = 0.5 / (1 - this.es);\n        this.apa = authset(this.es);\n        switch(this.mode){\n            case this.N_POLE:\n                this.dd = 1;\n                break;\n            case this.S_POLE:\n                this.dd = 1;\n                break;\n            case this.EQUIT:\n                this.rq = Math.sqrt(0.5 * this.qp);\n                this.dd = 1 / this.rq;\n                this.xmf = 1;\n                this.ymf = 0.5 * this.qp;\n                break;\n            case this.OBLIQ:\n                this.rq = Math.sqrt(0.5 * this.qp);\n                sinphi = Math.sin(this.lat0);\n                this.sinb1 = (0, $874JP.default)(this.e, sinphi) / this.qp;\n                this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n                this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n                this.ymf = (this.xmf = this.rq) / this.dd;\n                this.xmf *= this.dd;\n                break;\n        }\n    } else if (this.mode === this.OBLIQ) {\n        this.sinph0 = Math.sin(this.lat0);\n        this.cosph0 = Math.cos(this.lat0);\n    }\n}\nfunction forward(p) {\n    /* Forward equations\n      ----------------- */ var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n    var lam = p.x;\n    var phi = p.y;\n    lam = (0, $a9oRf.default)(lam - this.long0);\n    if (this.sphere) {\n        sinphi = Math.sin(phi);\n        cosphi = Math.cos(phi);\n        coslam = Math.cos(lam);\n        if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n            y = this.mode === this.EQUIT ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n            if (y <= (0, $gyVUi.EPSLN)) return null;\n            y = Math.sqrt(2 / y);\n            x = y * cosphi * Math.sin(lam);\n            y *= this.mode === this.EQUIT ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n        } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n            if (this.mode === this.N_POLE) coslam = -coslam;\n            if (Math.abs(phi + this.lat0) < (0, $gyVUi.EPSLN)) return null;\n            y = (0, $gyVUi.FORTPI) - phi * 0.5;\n            y = 2 * (this.mode === this.S_POLE ? Math.cos(y) : Math.sin(y));\n            x = y * Math.sin(lam);\n            y *= coslam;\n        }\n    } else {\n        sinb = 0;\n        cosb = 0;\n        b = 0;\n        coslam = Math.cos(lam);\n        sinlam = Math.sin(lam);\n        sinphi = Math.sin(phi);\n        q = (0, $874JP.default)(this.e, sinphi);\n        if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n            sinb = q / this.qp;\n            cosb = Math.sqrt(1 - sinb * sinb);\n        }\n        switch(this.mode){\n            case this.OBLIQ:\n                b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n                break;\n            case this.EQUIT:\n                b = 1 + cosb * coslam;\n                break;\n            case this.N_POLE:\n                b = (0, $gyVUi.HALF_PI) + phi;\n                q = this.qp - q;\n                break;\n            case this.S_POLE:\n                b = phi - (0, $gyVUi.HALF_PI);\n                q = this.qp + q;\n                break;\n        }\n        if (Math.abs(b) < (0, $gyVUi.EPSLN)) return null;\n        switch(this.mode){\n            case this.OBLIQ:\n            case this.EQUIT:\n                b = Math.sqrt(2 / b);\n                if (this.mode === this.OBLIQ) y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n                else y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n                x = this.xmf * b * cosb * sinlam;\n                break;\n            case this.N_POLE:\n            case this.S_POLE:\n                if (q >= 0) {\n                    x = (b = Math.sqrt(q)) * sinlam;\n                    y = coslam * (this.mode === this.S_POLE ? b : -b);\n                } else x = y = 0;\n                break;\n        }\n    }\n    p.x = this.a * x + this.x0;\n    p.y = this.a * y + this.y0;\n    return p;\n}\nfunction inverse(p) {\n    p.x -= this.x0;\n    p.y -= this.y0;\n    var x = p.x / this.a;\n    var y = p.y / this.a;\n    var lam, phi, cCe, sCe, q, rho, ab;\n    if (this.sphere) {\n        var cosz = 0, rh, sinz = 0;\n        rh = Math.sqrt(x * x + y * y);\n        phi = rh * 0.5;\n        if (phi > 1) return null;\n        phi = 2 * Math.asin(phi);\n        if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n            sinz = Math.sin(phi);\n            cosz = Math.cos(phi);\n        }\n        switch(this.mode){\n            case this.EQUIT:\n                phi = Math.abs(rh) <= (0, $gyVUi.EPSLN) ? 0 : Math.asin(y * sinz / rh);\n                x *= sinz;\n                y = cosz * rh;\n                break;\n            case this.OBLIQ:\n                phi = Math.abs(rh) <= (0, $gyVUi.EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n                x *= sinz * this.cosph0;\n                y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n                break;\n            case this.N_POLE:\n                y = -y;\n                phi = (0, $gyVUi.HALF_PI) - phi;\n                break;\n            case this.S_POLE:\n                phi -= (0, $gyVUi.HALF_PI);\n                break;\n        }\n        lam = y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ) ? 0 : Math.atan2(x, y);\n    } else {\n        ab = 0;\n        if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n            x /= this.dd;\n            y *= this.dd;\n            rho = Math.sqrt(x * x + y * y);\n            if (rho < (0, $gyVUi.EPSLN)) {\n                p.x = this.long0;\n                p.y = this.lat0;\n                return p;\n            }\n            sCe = 2 * Math.asin(0.5 * rho / this.rq);\n            cCe = Math.cos(sCe);\n            x *= sCe = Math.sin(sCe);\n            if (this.mode === this.OBLIQ) {\n                ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n                q = this.qp * ab;\n                y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n            } else {\n                ab = y * sCe / rho;\n                q = this.qp * ab;\n                y = rho * cCe;\n            }\n        } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n            if (this.mode === this.N_POLE) y = -y;\n            q = x * x + y * y;\n            if (!q) {\n                p.x = this.long0;\n                p.y = this.lat0;\n                return p;\n            }\n            ab = 1 - q / this.qp;\n            if (this.mode === this.S_POLE) ab = -ab;\n        }\n        lam = Math.atan2(x, y);\n        phi = authlat(Math.asin(ab), this.apa);\n    }\n    p.x = (0, $a9oRf.default)(this.long0 + lam);\n    p.y = phi;\n    return p;\n}\n/* determine latitude from authalic latitude */ var P00 = 0.33333333333333333333;\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\nfunction authset(es) {\n    var t;\n    var APA = [];\n    APA[0] = es * P00;\n    t = es * es;\n    APA[0] += t * P01;\n    APA[1] = t * P10;\n    t *= es;\n    APA[0] += t * P02;\n    APA[1] += t * P11;\n    APA[2] = t * P20;\n    return APA;\n}\nfunction authlat(beta, APA) {\n    var t = beta + beta;\n    return beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t);\n}\nvar names = [\n    'Lambert Azimuthal Equal Area',\n    'Lambert_Azimuthal_Equal_Area',\n    'laea'\n];\nvar $9a24067d8ab69621$export$2e2bcd8739ae039 = {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n    S_POLE: S_POLE,\n    N_POLE: N_POLE,\n    EQUIT: EQUIT,\n    OBLIQ: OBLIQ\n};\n\n});\nparcelRegister(\"874JP\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $5e82a7153665d151$export$2e2bcd8739ae039);\nfunction $5e82a7153665d151$export$2e2bcd8739ae039(eccent, sinphi) {\n    var con;\n    if (eccent > 1.0e-7) {\n        con = eccent * sinphi;\n        return (1 - eccent * eccent) * (sinphi / (1 - con * con) - 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    } else return 2 * sinphi;\n}\n\n});\n\n\nparcelRegister(\"8mhgZ\", function(module, exports) {\n\n$parcel$export(module.exports, \"init\", () => init);\n$parcel$export(module.exports, \"forward\", () => forward);\n$parcel$export(module.exports, \"inverse\", () => inverse);\n$parcel$export(module.exports, \"phi1z\", () => phi1z);\n$parcel$export(module.exports, \"names\", () => names);\n$parcel$export(module.exports, \"default\", () => $615dc6dbd83ac6d5$export$2e2bcd8739ae039);\n\nvar $bi5ZC = parcelRequire(\"bi5ZC\");\n\nvar $874JP = parcelRequire(\"874JP\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $ljPJJ = parcelRequire(\"ljPJJ\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction init() {\n    if (Math.abs(this.lat1 + this.lat2) < (0, $gyVUi.EPSLN)) return;\n    this.temp = this.b / this.a;\n    this.es = 1 - Math.pow(this.temp, 2);\n    this.e3 = Math.sqrt(this.es);\n    this.sin_po = Math.sin(this.lat1);\n    this.cos_po = Math.cos(this.lat1);\n    this.t1 = this.sin_po;\n    this.con = this.sin_po;\n    this.ms1 = (0, $bi5ZC.default)(this.e3, this.sin_po, this.cos_po);\n    this.qs1 = (0, $874JP.default)(this.e3, this.sin_po);\n    this.sin_po = Math.sin(this.lat2);\n    this.cos_po = Math.cos(this.lat2);\n    this.t2 = this.sin_po;\n    this.ms2 = (0, $bi5ZC.default)(this.e3, this.sin_po, this.cos_po);\n    this.qs2 = (0, $874JP.default)(this.e3, this.sin_po);\n    this.sin_po = Math.sin(this.lat0);\n    this.cos_po = Math.cos(this.lat0);\n    this.t3 = this.sin_po;\n    this.qs0 = (0, $874JP.default)(this.e3, this.sin_po);\n    if (Math.abs(this.lat1 - this.lat2) > (0, $gyVUi.EPSLN)) this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n    else this.ns0 = this.con;\n    this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n    this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    this.sin_phi = Math.sin(lat);\n    this.cos_phi = Math.cos(lat);\n    var qs = (0, $874JP.default)(this.e3, this.sin_phi);\n    var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n    var theta = this.ns0 * (0, $a9oRf.default)(lon - this.long0);\n    var x = rh1 * Math.sin(theta) + this.x0;\n    var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction inverse(p) {\n    var rh1, qs, con, theta, lon, lat;\n    p.x -= this.x0;\n    p.y = this.rh - p.y + this.y0;\n    if (this.ns0 >= 0) {\n        rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n        con = 1;\n    } else {\n        rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n        con = -1;\n    }\n    theta = 0;\n    if (rh1 !== 0) theta = Math.atan2(con * p.x, con * p.y);\n    con = rh1 * this.ns0 / this.a;\n    if (this.sphere) lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n    else {\n        qs = (this.c - con * con) / this.ns0;\n        lat = this.phi1z(this.e3, qs);\n    }\n    lon = (0, $a9oRf.default)(theta / this.ns0 + this.long0);\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nfunction phi1z(eccent, qs) {\n    var sinphi, cosphi, con, com, dphi;\n    var phi = (0, $ljPJJ.default)(0.5 * qs);\n    if (eccent < (0, $gyVUi.EPSLN)) return phi;\n    var eccnts = eccent * eccent;\n    for(var i = 1; i <= 25; i++){\n        sinphi = Math.sin(phi);\n        cosphi = Math.cos(phi);\n        con = eccent * sinphi;\n        com = 1 - con * con;\n        dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n        phi = phi + dphi;\n        if (Math.abs(dphi) <= 1e-7) return phi;\n    }\n    return null;\n}\nvar names = [\n    'Albers_Conic_Equal_Area',\n    'Albers_Equal_Area',\n    'Albers',\n    'aea'\n];\nvar $615dc6dbd83ac6d5$export$2e2bcd8739ae039 = {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n    phi1z: phi1z\n};\n\n});\nparcelRegister(\"ljPJJ\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $f8538120e633ea57$export$2e2bcd8739ae039);\nfunction $f8538120e633ea57$export$2e2bcd8739ae039(x) {\n    if (Math.abs(x) > 1) x = x > 1 ? 1 : -1;\n    return Math.asin(x);\n}\n\n});\n\n\nparcelRegister(\"iSJfu\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $dbf05e97c9232a2a$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $ljPJJ = parcelRequire(\"ljPJJ\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $dbf05e97c9232a2a$export$2cd8252107eb640b() {\n    /* Place parameters in static storage for common use\n      ------------------------------------------------- */ this.sin_p14 = Math.sin(this.lat0);\n    this.cos_p14 = Math.cos(this.lat0);\n    // Approximation for projecting points to the horizon (infinity)\n    this.infinity_dist = 1000 * this.a;\n    this.rc = 1;\n}\nfunction $dbf05e97c9232a2a$export$174bb771924e7eb1(p) {\n    var sinphi, cosphi; /* sin and cos value        */ \n    var dlon; /* delta longitude value      */ \n    var coslon; /* cos of longitude        */ \n    var ksp; /* scale factor          */ \n    var g;\n    var x, y;\n    var lon = p.x;\n    var lat = p.y;\n    /* Forward equations\n      ----------------- */ dlon = (0, $a9oRf.default)(lon - this.long0);\n    sinphi = Math.sin(lat);\n    cosphi = Math.cos(lat);\n    coslon = Math.cos(dlon);\n    g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n    ksp = 1;\n    if (g > 0 || Math.abs(g) <= (0, $gyVUi.EPSLN)) {\n        x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n        y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n    } else {\n        // Point is in the opposing hemisphere and is unprojectable\n        // We still need to return a reasonable point, so we project\n        // to infinity, on a bearing\n        // equivalent to the northern hemisphere equivalent\n        // This is a reasonable approximation for short shapes and lines that\n        // straddle the horizon.\n        x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n        y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction $dbf05e97c9232a2a$export$70ae2c07e401031b(p) {\n    var rh; /* Rho */ \n    var sinc, cosc;\n    var c;\n    var lon, lat;\n    /* Inverse equations\n      ----------------- */ p.x = (p.x - this.x0) / this.a;\n    p.y = (p.y - this.y0) / this.a;\n    p.x /= this.k0;\n    p.y /= this.k0;\n    if (rh = Math.sqrt(p.x * p.x + p.y * p.y)) {\n        c = Math.atan2(rh, this.rc);\n        sinc = Math.sin(c);\n        cosc = Math.cos(c);\n        lat = (0, $ljPJJ.default)(cosc * this.sin_p14 + p.y * sinc * this.cos_p14 / rh);\n        lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n        lon = (0, $a9oRf.default)(this.long0 + lon);\n    } else {\n        lat = this.phic0;\n        lon = 0;\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $dbf05e97c9232a2a$export$e4b2ac9215619f8d = [\n    'gnom'\n];\nvar $dbf05e97c9232a2a$export$2e2bcd8739ae039 = {\n    init: $dbf05e97c9232a2a$export$2cd8252107eb640b,\n    forward: $dbf05e97c9232a2a$export$174bb771924e7eb1,\n    inverse: $dbf05e97c9232a2a$export$70ae2c07e401031b,\n    names: $dbf05e97c9232a2a$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"6CTAc\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $4d31684dfe594c29$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $874JP = parcelRequire(\"874JP\");\n\nvar $bi5ZC = parcelRequire(\"bi5ZC\");\n\nvar $b4Ogv = parcelRequire(\"b4Ogv\");\nfunction $4d31684dfe594c29$export$2cd8252107eb640b() {\n    // no-op\n    if (!this.sphere) this.k0 = (0, $bi5ZC.default)(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n}\nfunction $4d31684dfe594c29$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var x, y;\n    /* Forward equations\n      ----------------- */ var dlon = (0, $a9oRf.default)(lon - this.long0);\n    if (this.sphere) {\n        x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n        y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n    } else {\n        var qs = (0, $874JP.default)(this.e, Math.sin(lat));\n        x = this.x0 + this.a * this.k0 * dlon;\n        y = this.y0 + this.a * qs * 0.5 / this.k0;\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction $4d31684dfe594c29$export$70ae2c07e401031b(p) {\n    p.x -= this.x0;\n    p.y -= this.y0;\n    var lon, lat;\n    if (this.sphere) {\n        lon = (0, $a9oRf.default)(this.long0 + p.x / this.a / Math.cos(this.lat_ts));\n        lat = Math.asin(p.y / this.a * Math.cos(this.lat_ts));\n    } else {\n        lat = (0, $b4Ogv.default)(this.e, 2 * p.y * this.k0 / this.a);\n        lon = (0, $a9oRf.default)(this.long0 + p.x / (this.a * this.k0));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $4d31684dfe594c29$export$e4b2ac9215619f8d = [\n    'cea'\n];\nvar $4d31684dfe594c29$export$2e2bcd8739ae039 = {\n    init: $4d31684dfe594c29$export$2cd8252107eb640b,\n    forward: $4d31684dfe594c29$export$174bb771924e7eb1,\n    inverse: $4d31684dfe594c29$export$70ae2c07e401031b,\n    names: $4d31684dfe594c29$export$e4b2ac9215619f8d\n};\n\n});\nparcelRegister(\"b4Ogv\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $81070f0f2a61f650$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $81070f0f2a61f650$export$2e2bcd8739ae039(eccent, q) {\n    var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n    if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n        if (q < 0) return -1 * (0, $gyVUi.HALF_PI);\n        else return 0, $gyVUi.HALF_PI;\n    }\n    // var phi = 0.5* q/(1-eccent*eccent);\n    var phi = Math.asin(0.5 * q);\n    var dphi;\n    var sin_phi;\n    var cos_phi;\n    var con;\n    for(var i = 0; i < 30; i++){\n        sin_phi = Math.sin(phi);\n        cos_phi = Math.cos(phi);\n        con = eccent * sin_phi;\n        dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n        phi += dphi;\n        if (Math.abs(dphi) <= 0.0000000001) return phi;\n    }\n    // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n    return NaN;\n}\n\n});\n\n\nparcelRegister(\"cEGTl\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $936a7dd52884a3fc$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $aDUFA = parcelRequire(\"aDUFA\");\nfunction $936a7dd52884a3fc$export$2cd8252107eb640b() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.lat0 = this.lat0 || 0;\n    this.long0 = this.long0 || 0;\n    this.lat_ts = this.lat_ts || 0;\n    this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n    this.rc = Math.cos(this.lat_ts);\n}\nfunction $936a7dd52884a3fc$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var dlon = (0, $a9oRf.default)(lon - this.long0);\n    var dlat = (0, $aDUFA.default)(lat - this.lat0);\n    p.x = this.x0 + this.a * dlon * this.rc;\n    p.y = this.y0 + this.a * dlat;\n    return p;\n}\nfunction $936a7dd52884a3fc$export$70ae2c07e401031b(p) {\n    var x = p.x;\n    var y = p.y;\n    p.x = (0, $a9oRf.default)(this.long0 + (x - this.x0) / (this.a * this.rc));\n    p.y = (0, $aDUFA.default)(this.lat0 + (y - this.y0) / this.a);\n    return p;\n}\nvar $936a7dd52884a3fc$export$e4b2ac9215619f8d = [\n    'Equirectangular',\n    'Equidistant_Cylindrical',\n    'Equidistant_Cylindrical_Spherical',\n    'eqc'\n];\nvar $936a7dd52884a3fc$export$2e2bcd8739ae039 = {\n    init: $936a7dd52884a3fc$export$2cd8252107eb640b,\n    forward: $936a7dd52884a3fc$export$174bb771924e7eb1,\n    inverse: $936a7dd52884a3fc$export$70ae2c07e401031b,\n    names: $936a7dd52884a3fc$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"2Lrqq\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $20353e9e716518d0$export$2e2bcd8739ae039);\n\nvar $bWC4D = parcelRequire(\"bWC4D\");\n\nvar $hU8aC = parcelRequire(\"hU8aC\");\n\nvar $i9r9A = parcelRequire(\"i9r9A\");\n\nvar $bM0eI = parcelRequire(\"bM0eI\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $aDUFA = parcelRequire(\"aDUFA\");\n\nvar $f3cKo = parcelRequire(\"f3cKo\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $3eeGT = parcelRequire(\"3eeGT\");\nvar $20353e9e716518d0$var$MAX_ITER = 20;\nfunction $20353e9e716518d0$export$2cd8252107eb640b() {\n    /* Place parameters in static storage for common use\n      ------------------------------------------------- */ this.temp = this.b / this.a;\n    this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n    this.e = Math.sqrt(this.es);\n    this.e0 = (0, $bWC4D.default)(this.es);\n    this.e1 = (0, $hU8aC.default)(this.es);\n    this.e2 = (0, $i9r9A.default)(this.es);\n    this.e3 = (0, $bM0eI.default)(this.es);\n    this.ml0 = this.a * (0, $f3cKo.default)(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\nfunction $20353e9e716518d0$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var x, y, el;\n    var dlon = (0, $a9oRf.default)(lon - this.long0);\n    el = dlon * Math.sin(lat);\n    if (this.sphere) {\n        if (Math.abs(lat) <= (0, $gyVUi.EPSLN)) {\n            x = this.a * dlon;\n            y = -1 * this.a * this.lat0;\n        } else {\n            x = this.a * Math.sin(el) / Math.tan(lat);\n            y = this.a * ((0, $aDUFA.default)(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n        }\n    } else if (Math.abs(lat) <= (0, $gyVUi.EPSLN)) {\n        x = this.a * dlon;\n        y = -1 * this.ml0;\n    } else {\n        var nl = (0, $3eeGT.default)(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n        x = nl * Math.sin(el);\n        y = this.a * (0, $f3cKo.default)(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n    p.x = x + this.x0;\n    p.y = y + this.y0;\n    return p;\n}\nfunction $20353e9e716518d0$export$70ae2c07e401031b(p) {\n    var lon, lat, x, y, i;\n    var al, bl;\n    var phi, dphi;\n    x = p.x - this.x0;\n    y = p.y - this.y0;\n    if (this.sphere) {\n        if (Math.abs(y + this.a * this.lat0) <= (0, $gyVUi.EPSLN)) {\n            lon = (0, $a9oRf.default)(x / this.a + this.long0);\n            lat = 0;\n        } else {\n            al = this.lat0 + y / this.a;\n            bl = x * x / this.a / this.a + al * al;\n            phi = al;\n            var tanphi;\n            for(i = $20353e9e716518d0$var$MAX_ITER; i; --i){\n                tanphi = Math.tan(phi);\n                dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n                phi += dphi;\n                if (Math.abs(dphi) <= (0, $gyVUi.EPSLN)) {\n                    lat = phi;\n                    break;\n                }\n            }\n            lon = (0, $a9oRf.default)(this.long0 + Math.asin(x * Math.tan(phi) / this.a) / Math.sin(lat));\n        }\n    } else if (Math.abs(y + this.ml0) <= (0, $gyVUi.EPSLN)) {\n        lat = 0;\n        lon = (0, $a9oRf.default)(this.long0 + x / this.a);\n    } else {\n        al = (this.ml0 + y) / this.a;\n        bl = x * x / this.a / this.a + al * al;\n        phi = al;\n        var cl, mln, mlnp, ma;\n        var con;\n        for(i = $20353e9e716518d0$var$MAX_ITER; i; --i){\n            con = this.e * Math.sin(phi);\n            cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n            mln = this.a * (0, $f3cKo.default)(this.e0, this.e1, this.e2, this.e3, phi);\n            mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n            ma = mln / this.a;\n            dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n            phi -= dphi;\n            if (Math.abs(dphi) <= (0, $gyVUi.EPSLN)) {\n                lat = phi;\n                break;\n            }\n        }\n        // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n        cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n        lon = (0, $a9oRf.default)(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $20353e9e716518d0$export$e4b2ac9215619f8d = [\n    'Polyconic',\n    'American_Polyconic',\n    'poly'\n];\nvar $20353e9e716518d0$export$2e2bcd8739ae039 = {\n    init: $20353e9e716518d0$export$2cd8252107eb640b,\n    forward: $20353e9e716518d0$export$174bb771924e7eb1,\n    inverse: $20353e9e716518d0$export$70ae2c07e401031b,\n    names: $20353e9e716518d0$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"6Eu1X\", function(module, exports) {\n\n$parcel$export(module.exports, \"iterations\", () => iterations);\n$parcel$export(module.exports, \"init\", () => init);\n$parcel$export(module.exports, \"forward\", () => forward);\n$parcel$export(module.exports, \"inverse\", () => inverse);\n$parcel$export(module.exports, \"names\", () => names);\n$parcel$export(module.exports, \"default\", () => $4d7dc5ed367b221e$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nvar iterations = 1;\nfunction init() {\n    this.A = [];\n    this.A[1] = 0.6399175073;\n    this.A[2] = -0.1358797613;\n    this.A[3] = 0.063294409;\n    this.A[4] = -0.02526853;\n    this.A[5] = 0.0117879;\n    this.A[6] = -0.0055161;\n    this.A[7] = 0.0026906;\n    this.A[8] = -0.001333;\n    this.A[9] = 0.00067;\n    this.A[10] = -0.00034;\n    this.B_re = [];\n    this.B_im = [];\n    this.B_re[1] = 0.7557853228;\n    this.B_im[1] = 0;\n    this.B_re[2] = 0.249204646;\n    this.B_im[2] = 0.003371507;\n    this.B_re[3] = -0.001541739;\n    this.B_im[3] = 0.041058560;\n    this.B_re[4] = -0.10162907;\n    this.B_im[4] = 0.01727609;\n    this.B_re[5] = -0.26623489;\n    this.B_im[5] = -0.36249218;\n    this.B_re[6] = -0.6870983;\n    this.B_im[6] = -1.1651967;\n    this.C_re = [];\n    this.C_im = [];\n    this.C_re[1] = 1.3231270439;\n    this.C_im[1] = 0;\n    this.C_re[2] = -0.577245789;\n    this.C_im[2] = -0.007809598;\n    this.C_re[3] = 0.508307513;\n    this.C_im[3] = -0.112208952;\n    this.C_re[4] = -0.15094762;\n    this.C_im[4] = 0.18200602;\n    this.C_re[5] = 1.01418179;\n    this.C_im[5] = 1.64497696;\n    this.C_re[6] = 1.9660549;\n    this.C_im[6] = 2.5127645;\n    this.D = [];\n    this.D[1] = 1.5627014243;\n    this.D[2] = 0.5185406398;\n    this.D[3] = -0.03333098;\n    this.D[4] = -0.1052906;\n    this.D[5] = -0.0368594;\n    this.D[6] = 0.007317;\n    this.D[7] = 0.01220;\n    this.D[8] = 0.00394;\n    this.D[9] = -0.0013;\n}\nfunction forward(p) {\n    var n;\n    var lon = p.x;\n    var lat = p.y;\n    var delta_lat = lat - this.lat0;\n    var delta_lon = lon - this.long0;\n    // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n    // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n    var d_phi = delta_lat / (0, $gyVUi.SEC_TO_RAD) * 1E-5;\n    var d_lambda = delta_lon;\n    var d_phi_n = 1; // d_phi^0\n    var d_psi = 0;\n    for(n = 1; n <= 10; n++){\n        d_phi_n = d_phi_n * d_phi;\n        d_psi = d_psi + this.A[n] * d_phi_n;\n    }\n    // 2. Calculate theta\n    var th_re = d_psi;\n    var th_im = d_lambda;\n    // 3. Calculate z\n    var th_n_re = 1;\n    var th_n_im = 0; // theta^0\n    var th_n_re1;\n    var th_n_im1;\n    var z_re = 0;\n    var z_im = 0;\n    for(n = 1; n <= 6; n++){\n        th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n        th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n        th_n_re = th_n_re1;\n        th_n_im = th_n_im1;\n        z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n        z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n    }\n    // 4. Calculate easting and northing\n    p.x = z_im * this.a + this.x0;\n    p.y = z_re * this.a + this.y0;\n    return p;\n}\nfunction inverse(p) {\n    var n;\n    var x = p.x;\n    var y = p.y;\n    var delta_x = x - this.x0;\n    var delta_y = y - this.y0;\n    // 1. Calculate z\n    var z_re = delta_y / this.a;\n    var z_im = delta_x / this.a;\n    // 2a. Calculate theta - first approximation gives km accuracy\n    var z_n_re = 1;\n    var z_n_im = 0; // z^0\n    var z_n_re1;\n    var z_n_im1;\n    var th_re = 0;\n    var th_im = 0;\n    for(n = 1; n <= 6; n++){\n        z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n        z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n        z_n_re = z_n_re1;\n        z_n_im = z_n_im1;\n        th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n        th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n    }\n    // 2b. Iterate to refine the accuracy of the calculation\n    //        0 iterations gives km accuracy\n    //        1 iteration gives m accuracy -- good enough for most mapping applications\n    //        2 iterations bives mm accuracy\n    for(var i = 0; i < this.iterations; i++){\n        var th_n_re = th_re;\n        var th_n_im = th_im;\n        var th_n_re1;\n        var th_n_im1;\n        var num_re = z_re;\n        var num_im = z_im;\n        for(n = 2; n <= 6; n++){\n            th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n            th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n            th_n_re = th_n_re1;\n            th_n_im = th_n_im1;\n            num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n            num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n        }\n        th_n_re = 1;\n        th_n_im = 0;\n        var den_re = this.B_re[1];\n        var den_im = this.B_im[1];\n        for(n = 2; n <= 6; n++){\n            th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n            th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n            th_n_re = th_n_re1;\n            th_n_im = th_n_im1;\n            den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n            den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n        }\n        // Complex division\n        var den2 = den_re * den_re + den_im * den_im;\n        th_re = (num_re * den_re + num_im * den_im) / den2;\n        th_im = (num_im * den_re - num_re * den_im) / den2;\n    }\n    // 3. Calculate d_phi              ...                                    // and d_lambda\n    var d_psi = th_re;\n    var d_lambda = th_im;\n    var d_psi_n = 1; // d_psi^0\n    var d_phi = 0;\n    for(n = 1; n <= 9; n++){\n        d_psi_n = d_psi_n * d_psi;\n        d_phi = d_phi + this.D[n] * d_psi_n;\n    }\n    // 4. Calculate latitude and longitude\n    // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n    var lat = this.lat0 + d_phi * (0, $gyVUi.SEC_TO_RAD) * 1E5;\n    var lon = this.long0 + d_lambda;\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar names = [\n    'New_Zealand_Map_Grid',\n    'nzmg'\n];\nvar $4d7dc5ed367b221e$export$2e2bcd8739ae039 = {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};\n\n});\n\nparcelRegister(\"fpjAW\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $b37863f65bf2a2a4$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\nfunction $b37863f65bf2a2a4$export$2cd8252107eb640b() {\n// no-op\n}\nfunction $b37863f65bf2a2a4$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    /* Forward equations\n      ----------------- */ var dlon = (0, $a9oRf.default)(lon - this.long0);\n    var x = this.x0 + this.a * dlon;\n    var y = this.y0 + this.a * Math.log(Math.tan(Math.PI / 4 + lat / 2.5)) * 1.25;\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction $b37863f65bf2a2a4$export$70ae2c07e401031b(p) {\n    p.x -= this.x0;\n    p.y -= this.y0;\n    var lon = (0, $a9oRf.default)(this.long0 + p.x / this.a);\n    var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $b37863f65bf2a2a4$export$e4b2ac9215619f8d = [\n    'Miller_Cylindrical',\n    'mill'\n];\nvar $b37863f65bf2a2a4$export$2e2bcd8739ae039 = {\n    init: $b37863f65bf2a2a4$export$2cd8252107eb640b,\n    forward: $b37863f65bf2a2a4$export$174bb771924e7eb1,\n    inverse: $b37863f65bf2a2a4$export$70ae2c07e401031b,\n    names: $b37863f65bf2a2a4$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"eA4Bc\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $a9d7febe7a8566f2$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $aDUFA = parcelRequire(\"aDUFA\");\n\nvar $gqKpL = parcelRequire(\"gqKpL\");\n\nvar $hpUQm = parcelRequire(\"hpUQm\");\n\nvar $jQUK6 = parcelRequire(\"jQUK6\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $ljPJJ = parcelRequire(\"ljPJJ\");\nvar $a9d7febe7a8566f2$var$MAX_ITER = 20;\nfunction $a9d7febe7a8566f2$export$2cd8252107eb640b() {\n    /* Place parameters in static storage for common use\n    ------------------------------------------------- */ if (!this.sphere) this.en = (0, $gqKpL.default)(this.es);\n    else {\n        this.n = 1;\n        this.m = 0;\n        this.es = 0;\n        this.C_y = Math.sqrt((this.m + 1) / this.n);\n        this.C_x = this.C_y / (this.m + 1);\n    }\n}\nfunction $a9d7febe7a8566f2$export$174bb771924e7eb1(p) {\n    var x, y;\n    var lon = p.x;\n    var lat = p.y;\n    /* Forward equations\n    ----------------- */ lon = (0, $a9oRf.default)(lon - this.long0);\n    if (this.sphere) {\n        if (!this.m) lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n        else {\n            var k = this.n * Math.sin(lat);\n            for(var i = $a9d7febe7a8566f2$var$MAX_ITER; i; --i){\n                var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n                lat -= V;\n                if (Math.abs(V) < (0, $gyVUi.EPSLN)) break;\n            }\n        }\n        x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n        y = this.a * this.C_y * lat;\n    } else {\n        var s = Math.sin(lat);\n        var c = Math.cos(lat);\n        y = this.a * (0, $hpUQm.default)(lat, s, c, this.en);\n        x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction $a9d7febe7a8566f2$export$70ae2c07e401031b(p) {\n    var lat, temp, lon, s;\n    p.x -= this.x0;\n    lon = p.x / this.a;\n    p.y -= this.y0;\n    lat = p.y / this.a;\n    if (this.sphere) {\n        lat /= this.C_y;\n        lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n        if (this.m) lat = (0, $ljPJJ.default)((this.m * lat + Math.sin(lat)) / this.n);\n        else if (this.n !== 1) lat = (0, $ljPJJ.default)(Math.sin(lat) / this.n);\n        lon = (0, $a9oRf.default)(lon + this.long0);\n        lat = (0, $aDUFA.default)(lat);\n    } else {\n        lat = (0, $jQUK6.default)(p.y / this.a, this.es, this.en);\n        s = Math.abs(lat);\n        if (s < (0, $gyVUi.HALF_PI)) {\n            s = Math.sin(lat);\n            temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n            // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n            lon = (0, $a9oRf.default)(temp);\n        } else if (s - (0, $gyVUi.EPSLN) < (0, $gyVUi.HALF_PI)) lon = this.long0;\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $a9d7febe7a8566f2$export$e4b2ac9215619f8d = [\n    'Sinusoidal',\n    'sinu'\n];\nvar $a9d7febe7a8566f2$export$2e2bcd8739ae039 = {\n    init: $a9d7febe7a8566f2$export$2cd8252107eb640b,\n    forward: $a9d7febe7a8566f2$export$174bb771924e7eb1,\n    inverse: $a9d7febe7a8566f2$export$70ae2c07e401031b,\n    names: $a9d7febe7a8566f2$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"7uCfv\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $57490138fba0a0b8$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $57490138fba0a0b8$export$2cd8252107eb640b() {}\nfunction $57490138fba0a0b8$export$174bb771924e7eb1(p) {\n    /* Forward equations\n      ----------------- */ var lon = p.x;\n    var lat = p.y;\n    var delta_lon = (0, $a9oRf.default)(lon - this.long0);\n    var theta = lat;\n    var con = Math.PI * Math.sin(lat);\n    /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */ while(true){\n        var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n        theta += delta_theta;\n        if (Math.abs(delta_theta) < (0, $gyVUi.EPSLN)) break;\n    }\n    theta /= 2;\n    /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */ if (Math.PI / 2 - Math.abs(lat) < (0, $gyVUi.EPSLN)) delta_lon = 0;\n    var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n    var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction $57490138fba0a0b8$export$70ae2c07e401031b(p) {\n    var theta;\n    var arg;\n    /* Inverse equations\n      ----------------- */ p.x -= this.x0;\n    p.y -= this.y0;\n    arg = p.y / (1.4142135623731 * this.a);\n    /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */ if (Math.abs(arg) > 0.999999999999) arg = 0.999999999999;\n    theta = Math.asin(arg);\n    var lon = (0, $a9oRf.default)(this.long0 + p.x / (0.900316316158 * this.a * Math.cos(theta)));\n    if (lon < -Math.PI) lon = -Math.PI;\n    if (lon > Math.PI) lon = Math.PI;\n    arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n    if (Math.abs(arg) > 1) arg = 1;\n    var lat = Math.asin(arg);\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $57490138fba0a0b8$export$e4b2ac9215619f8d = [\n    'Mollweide',\n    'moll'\n];\nvar $57490138fba0a0b8$export$2e2bcd8739ae039 = {\n    init: $57490138fba0a0b8$export$2cd8252107eb640b,\n    forward: $57490138fba0a0b8$export$174bb771924e7eb1,\n    inverse: $57490138fba0a0b8$export$70ae2c07e401031b,\n    names: $57490138fba0a0b8$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"hp0oy\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $cab513e7d920927e$export$2e2bcd8739ae039);\n\nvar $bWC4D = parcelRequire(\"bWC4D\");\n\nvar $hU8aC = parcelRequire(\"hU8aC\");\n\nvar $i9r9A = parcelRequire(\"i9r9A\");\n\nvar $bM0eI = parcelRequire(\"bM0eI\");\n\nvar $bi5ZC = parcelRequire(\"bi5ZC\");\n\nvar $f3cKo = parcelRequire(\"f3cKo\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $aDUFA = parcelRequire(\"aDUFA\");\n\nvar $cfNuL = parcelRequire(\"cfNuL\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $cab513e7d920927e$export$2cd8252107eb640b() {\n    /* Place parameters in static storage for common use\n      ------------------------------------------------- */ // Standard Parallels cannot be equal and on opposite sides of the equator\n    if (Math.abs(this.lat1 + this.lat2) < (0, $gyVUi.EPSLN)) return;\n    this.lat2 = this.lat2 || this.lat1;\n    this.temp = this.b / this.a;\n    this.es = 1 - Math.pow(this.temp, 2);\n    this.e = Math.sqrt(this.es);\n    this.e0 = (0, $bWC4D.default)(this.es);\n    this.e1 = (0, $hU8aC.default)(this.es);\n    this.e2 = (0, $i9r9A.default)(this.es);\n    this.e3 = (0, $bM0eI.default)(this.es);\n    this.sinphi = Math.sin(this.lat1);\n    this.cosphi = Math.cos(this.lat1);\n    this.ms1 = (0, $bi5ZC.default)(this.e, this.sinphi, this.cosphi);\n    this.ml1 = (0, $f3cKo.default)(this.e0, this.e1, this.e2, this.e3, this.lat1);\n    if (Math.abs(this.lat1 - this.lat2) < (0, $gyVUi.EPSLN)) this.ns = this.sinphi;\n    else {\n        this.sinphi = Math.sin(this.lat2);\n        this.cosphi = Math.cos(this.lat2);\n        this.ms2 = (0, $bi5ZC.default)(this.e, this.sinphi, this.cosphi);\n        this.ml2 = (0, $f3cKo.default)(this.e0, this.e1, this.e2, this.e3, this.lat2);\n        this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n    }\n    this.g = this.ml1 + this.ms1 / this.ns;\n    this.ml0 = (0, $f3cKo.default)(this.e0, this.e1, this.e2, this.e3, this.lat0);\n    this.rh = this.a * (this.g - this.ml0);\n}\nfunction $cab513e7d920927e$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var rh1;\n    /* Forward equations\n      ----------------- */ if (this.sphere) rh1 = this.a * (this.g - lat);\n    else {\n        var ml = (0, $f3cKo.default)(this.e0, this.e1, this.e2, this.e3, lat);\n        rh1 = this.a * (this.g - ml);\n    }\n    var theta = this.ns * (0, $a9oRf.default)(lon - this.long0);\n    var x = this.x0 + rh1 * Math.sin(theta);\n    var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction $cab513e7d920927e$export$70ae2c07e401031b(p) {\n    p.x -= this.x0;\n    p.y = this.rh - p.y + this.y0;\n    var con, rh1, lat, lon;\n    if (this.ns >= 0) {\n        rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n        con = 1;\n    } else {\n        rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n        con = -1;\n    }\n    var theta = 0;\n    if (rh1 !== 0) theta = Math.atan2(con * p.x, con * p.y);\n    if (this.sphere) {\n        lon = (0, $a9oRf.default)(this.long0 + theta / this.ns);\n        lat = (0, $aDUFA.default)(this.g - rh1 / this.a);\n        p.x = lon;\n        p.y = lat;\n        return p;\n    } else {\n        var ml = this.g - rh1 / this.a;\n        lat = (0, $cfNuL.default)(ml, this.e0, this.e1, this.e2, this.e3);\n        lon = (0, $a9oRf.default)(this.long0 + theta / this.ns);\n        p.x = lon;\n        p.y = lat;\n        return p;\n    }\n}\nvar $cab513e7d920927e$export$e4b2ac9215619f8d = [\n    'Equidistant_Conic',\n    'eqdc'\n];\nvar $cab513e7d920927e$export$2e2bcd8739ae039 = {\n    init: $cab513e7d920927e$export$2cd8252107eb640b,\n    forward: $cab513e7d920927e$export$174bb771924e7eb1,\n    inverse: $cab513e7d920927e$export$70ae2c07e401031b,\n    names: $cab513e7d920927e$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"1W450\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $168e5f6524a6fc5f$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $ljPJJ = parcelRequire(\"ljPJJ\");\nfunction $168e5f6524a6fc5f$export$2cd8252107eb640b() {\n    // this.R = 6370997; //Radius of earth\n    this.R = this.a;\n}\nfunction $168e5f6524a6fc5f$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    /* Forward equations\n    ----------------- */ var dlon = (0, $a9oRf.default)(lon - this.long0);\n    var x, y;\n    if (Math.abs(lat) <= (0, $gyVUi.EPSLN)) {\n        x = this.x0 + this.R * dlon;\n        y = this.y0;\n    }\n    var theta = (0, $ljPJJ.default)(2 * Math.abs(lat / Math.PI));\n    if (Math.abs(dlon) <= (0, $gyVUi.EPSLN) || Math.abs(Math.abs(lat) - (0, $gyVUi.HALF_PI)) <= (0, $gyVUi.EPSLN)) {\n        x = this.x0;\n        if (lat >= 0) y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n        else y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    //  return(OK);\n    }\n    var al = 0.5 * Math.abs(Math.PI / dlon - dlon / Math.PI);\n    var asq = al * al;\n    var sinth = Math.sin(theta);\n    var costh = Math.cos(theta);\n    var g = costh / (sinth + costh - 1);\n    var gsq = g * g;\n    var m = g * (2 / sinth - 1);\n    var msq = m * m;\n    var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n    if (dlon < 0) con = -con;\n    x = this.x0 + con;\n    // con = Math.abs(con / (Math.PI * this.R));\n    var q = asq + g;\n    con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n    if (lat >= 0) // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n    else // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction $168e5f6524a6fc5f$export$70ae2c07e401031b(p) {\n    var lon, lat;\n    var xx, yy, xys, c1, c2, c3;\n    var a1;\n    var m1;\n    var con;\n    var th1;\n    var d;\n    /* inverse equations\n    ----------------- */ p.x -= this.x0;\n    p.y -= this.y0;\n    con = Math.PI * this.R;\n    xx = p.x / con;\n    yy = p.y / con;\n    xys = xx * xx + yy * yy;\n    c1 = -Math.abs(yy) * (1 + xys);\n    c2 = c1 - 2 * yy * yy + xx * xx;\n    c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n    d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n    a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n    m1 = 2 * Math.sqrt(-a1 / 3);\n    con = 3 * d / a1 / m1;\n    if (Math.abs(con) > 1) {\n        if (con >= 0) con = 1;\n        else con = -1;\n    }\n    th1 = Math.acos(con) / 3;\n    if (p.y >= 0) lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n    else lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n    if (Math.abs(xx) < (0, $gyVUi.EPSLN)) lon = this.long0;\n    else lon = (0, $a9oRf.default)(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $168e5f6524a6fc5f$export$e4b2ac9215619f8d = [\n    'Van_der_Grinten_I',\n    'VanDerGrinten',\n    'Van_der_Grinten',\n    'vandg'\n];\nvar $168e5f6524a6fc5f$export$2e2bcd8739ae039 = {\n    init: $168e5f6524a6fc5f$export$2cd8252107eb640b,\n    forward: $168e5f6524a6fc5f$export$174bb771924e7eb1,\n    inverse: $168e5f6524a6fc5f$export$70ae2c07e401031b,\n    names: $168e5f6524a6fc5f$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"i6dz6\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $d2d34f4dbda3af26$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $f3cKo = parcelRequire(\"f3cKo\");\n\nvar $bWC4D = parcelRequire(\"bWC4D\");\n\nvar $hU8aC = parcelRequire(\"hU8aC\");\n\nvar $i9r9A = parcelRequire(\"i9r9A\");\n\nvar $bM0eI = parcelRequire(\"bM0eI\");\n\nvar $ljPJJ = parcelRequire(\"ljPJJ\");\n\nvar $cfNuL = parcelRequire(\"cfNuL\");\n\nvar $acCYh = parcelRequire(\"acCYh\");\nfunction $d2d34f4dbda3af26$export$2cd8252107eb640b() {\n    this.sin_p12 = Math.sin(this.lat0);\n    this.cos_p12 = Math.cos(this.lat0);\n    this.g = new (0, $acCYh.Geodesic).Geodesic(this.a, this.es / (1 + Math.sqrt(1 - this.es)));\n}\nfunction $d2d34f4dbda3af26$export$174bb771924e7eb1(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var sinphi = Math.sin(p.y);\n    var cosphi = Math.cos(p.y);\n    var dlon = (0, $a9oRf.default)(lon - this.long0);\n    var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, lat1, lon1, lat2, lon2, vars, azi1;\n    if (this.sphere) {\n        if (Math.abs(this.sin_p12 - 1) <= (0, $gyVUi.EPSLN)) {\n            // North Pole case\n            p.x = this.x0 + this.a * ((0, $gyVUi.HALF_PI) - lat) * Math.sin(dlon);\n            p.y = this.y0 - this.a * ((0, $gyVUi.HALF_PI) - lat) * Math.cos(dlon);\n            return p;\n        } else if (Math.abs(this.sin_p12 + 1) <= (0, $gyVUi.EPSLN)) {\n            // South Pole case\n            p.x = this.x0 + this.a * ((0, $gyVUi.HALF_PI) + lat) * Math.sin(dlon);\n            p.y = this.y0 + this.a * ((0, $gyVUi.HALF_PI) + lat) * Math.cos(dlon);\n            return p;\n        } else {\n            // default case\n            cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n            c = Math.acos(cos_c);\n            kp = c ? c / Math.sin(c) : 1;\n            p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n            p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n            return p;\n        }\n    } else {\n        e0 = (0, $bWC4D.default)(this.es);\n        e1 = (0, $hU8aC.default)(this.es);\n        e2 = (0, $i9r9A.default)(this.es);\n        e3 = (0, $bM0eI.default)(this.es);\n        if (Math.abs(this.sin_p12 - 1) <= (0, $gyVUi.EPSLN)) {\n            // North Pole case\n            Mlp = this.a * (0, $f3cKo.default)(e0, e1, e2, e3, (0, $gyVUi.HALF_PI));\n            Ml = this.a * (0, $f3cKo.default)(e0, e1, e2, e3, lat);\n            p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n            p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n            return p;\n        } else if (Math.abs(this.sin_p12 + 1) <= (0, $gyVUi.EPSLN)) {\n            // South Pole case\n            Mlp = this.a * (0, $f3cKo.default)(e0, e1, e2, e3, (0, $gyVUi.HALF_PI));\n            Ml = this.a * (0, $f3cKo.default)(e0, e1, e2, e3, lat);\n            p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n            p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n            return p;\n        } else {\n            // Default case\n            if (Math.abs(lon) < (0, $gyVUi.EPSLN) && Math.abs(lat - this.lat0) < (0, $gyVUi.EPSLN)) {\n                p.x = p.y = 0;\n                return p;\n            }\n            lat1 = this.lat0 / (0, $gyVUi.D2R);\n            lon1 = this.long0 / (0, $gyVUi.D2R);\n            lat2 = lat / (0, $gyVUi.D2R);\n            lon2 = lon / (0, $gyVUi.D2R);\n            vars = this.g.Inverse(lat1, lon1, lat2, lon2, this.g.AZIMUTH);\n            azi1 = vars.azi1 * (0, $gyVUi.D2R);\n            p.x = vars.s12 * Math.sin(azi1);\n            p.y = vars.s12 * Math.cos(azi1);\n            return p;\n        }\n    }\n}\nfunction $d2d34f4dbda3af26$export$70ae2c07e401031b(p) {\n    p.x -= this.x0;\n    p.y -= this.y0;\n    var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, lat1, lon1, azi1, s12, vars;\n    if (this.sphere) {\n        rh = Math.sqrt(p.x * p.x + p.y * p.y);\n        if (rh > 2 * (0, $gyVUi.HALF_PI) * this.a) return;\n        z = rh / this.a;\n        sinz = Math.sin(z);\n        cosz = Math.cos(z);\n        lon = this.long0;\n        if (Math.abs(rh) <= (0, $gyVUi.EPSLN)) lat = this.lat0;\n        else {\n            lat = (0, $ljPJJ.default)(cosz * this.sin_p12 + p.y * sinz * this.cos_p12 / rh);\n            con = Math.abs(this.lat0) - (0, $gyVUi.HALF_PI);\n            if (Math.abs(con) <= (0, $gyVUi.EPSLN)) {\n                if (this.lat0 >= 0) lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x, -p.y));\n                else lon = (0, $a9oRf.default)(this.long0 - Math.atan2(-p.x, p.y));\n            } else /* con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        } */ lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n        }\n        p.x = lon;\n        p.y = lat;\n        return p;\n    } else {\n        e0 = (0, $bWC4D.default)(this.es);\n        e1 = (0, $hU8aC.default)(this.es);\n        e2 = (0, $i9r9A.default)(this.es);\n        e3 = (0, $bM0eI.default)(this.es);\n        if (Math.abs(this.sin_p12 - 1) <= (0, $gyVUi.EPSLN)) {\n            // North pole case\n            Mlp = this.a * (0, $f3cKo.default)(e0, e1, e2, e3, (0, $gyVUi.HALF_PI));\n            rh = Math.sqrt(p.x * p.x + p.y * p.y);\n            M = Mlp - rh;\n            lat = (0, $cfNuL.default)(M / this.a, e0, e1, e2, e3);\n            lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x, -1 * p.y));\n            p.x = lon;\n            p.y = lat;\n            return p;\n        } else if (Math.abs(this.sin_p12 + 1) <= (0, $gyVUi.EPSLN)) {\n            // South pole case\n            Mlp = this.a * (0, $f3cKo.default)(e0, e1, e2, e3, (0, $gyVUi.HALF_PI));\n            rh = Math.sqrt(p.x * p.x + p.y * p.y);\n            M = rh - Mlp;\n            lat = (0, $cfNuL.default)(M / this.a, e0, e1, e2, e3);\n            lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x, p.y));\n            p.x = lon;\n            p.y = lat;\n            return p;\n        } else {\n            // default case\n            lat1 = this.lat0 / (0, $gyVUi.D2R);\n            lon1 = this.long0 / (0, $gyVUi.D2R);\n            azi1 = Math.atan2(p.x, p.y) / (0, $gyVUi.D2R);\n            s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n            vars = this.g.Direct(lat1, lon1, azi1, s12, this.g.STANDARD);\n            p.x = vars.lon2 * (0, $gyVUi.D2R);\n            p.y = vars.lat2 * (0, $gyVUi.D2R);\n            return p;\n        }\n    }\n}\nvar $d2d34f4dbda3af26$export$e4b2ac9215619f8d = [\n    'Azimuthal_Equidistant',\n    'aeqd'\n];\nvar $d2d34f4dbda3af26$export$2e2bcd8739ae039 = {\n    init: $d2d34f4dbda3af26$export$2cd8252107eb640b,\n    forward: $d2d34f4dbda3af26$export$174bb771924e7eb1,\n    inverse: $d2d34f4dbda3af26$export$70ae2c07e401031b,\n    names: $d2d34f4dbda3af26$export$e4b2ac9215619f8d\n};\n\n});\nparcelRegister(\"acCYh\", function(module, exports) {\n(function(cb) {\n    var geodesic = {};\n    geodesic.Constants = {};\n    geodesic.Math = {};\n    geodesic.Accumulator = {};\n    (function(c) {\n        \"use strict\";\n        c.WGS84 = {\n            a: 6378137,\n            f: 1 / 298.257223563\n        };\n        c.version = {\n            major: 2,\n            minor: 1,\n            patch: 1\n        };\n        c.version_string = \"2.1.1\";\n    })(geodesic.Constants);\n    (function(m) {\n        \"use strict\";\n        m.digits = 53;\n        m.epsilon = Math.pow(0.5, m.digits - 1);\n        m.degree = Math.PI / 180;\n        m.sq = function(x) {\n            return x * x;\n        };\n        m.hypot = function(x, y) {\n            return Math.sqrt(x * x + y * y);\n        };\n        m.cbrt = Math.cbrt || function(x) {\n            var y = Math.pow(Math.abs(x), 1 / 3);\n            return x > 0 ? y : x < 0 ? -y : x;\n        };\n        m.log1p = Math.log1p || function(x) {\n            var y = 1 + x, z = y - 1;\n            return z === 0 ? x : x * Math.log(y) / z;\n        };\n        m.atanh = Math.atanh || function(x) {\n            var y = Math.abs(x);\n            y = m.log1p(2 * y / (1 - y)) / 2;\n            return x > 0 ? y : x < 0 ? -y : x;\n        };\n        m.copysign = function(x, y) {\n            return Math.abs(x) * (y < 0 || y === 0 && 1 / y < 0 ? -1 : 1);\n        };\n        m.sum = function(u, v) {\n            var s = u + v, up = s - v, vpp = s - up, t;\n            up -= u;\n            vpp -= v;\n            t = s ? 0 - (up + vpp) : s;\n            return {\n                s: s,\n                t: t\n            };\n        };\n        m.polyval = function(N, p, s, x) {\n            var y = N < 0 ? 0 : p[s++];\n            while(--N >= 0)y = y * x + p[s++];\n            return y;\n        };\n        m.AngRound = function(x) {\n            var z = 1 / 16, y = Math.abs(x);\n            y = y < z ? z - (z - y) : y;\n            return m.copysign(y, x);\n        };\n        m.remainder = function(x, y) {\n            x %= y;\n            return x < -y / 2 ? x + y : x < y / 2 ? x : x - y;\n        };\n        m.AngNormalize = function(x) {\n            var y = m.remainder(x, 360);\n            return Math.abs(y) === 180 ? m.copysign(180, x) : y;\n        };\n        m.LatFix = function(x) {\n            return Math.abs(x) > 90 ? NaN : x;\n        };\n        m.AngDiff = function(x, y) {\n            var r = m.sum(m.remainder(-x, 360), m.remainder(y, 360)), d, e;\n            r = m.sum(m.remainder(r.s, 360), r.t);\n            d = r.s;\n            e = r.t;\n            if (d === 0 || Math.abs(d) === 180) d = m.copysign(d, e === 0 ? y - x : -e);\n            return {\n                d: d,\n                e: e\n            };\n        };\n        m.sincosd = function(x) {\n            var d, r, q, s, c, sinx, cosx;\n            d = x % 360;\n            q = Math.round(d / 90);\n            d -= 90 * q;\n            r = d * this.degree;\n            s = Math.sin(r);\n            c = Math.cos(r);\n            if (Math.abs(d) === 45) {\n                c = Math.sqrt(0.5);\n                s = m.copysign(c, r);\n            } else if (Math.abs(d) === 30) {\n                c = Math.sqrt(0.75);\n                s = m.copysign(0.5, r);\n            }\n            switch(q & 3){\n                case 0:\n                    sinx = s;\n                    cosx = c;\n                    break;\n                case 1:\n                    sinx = c;\n                    cosx = -s;\n                    break;\n                case 2:\n                    sinx = -s;\n                    cosx = -c;\n                    break;\n                default:\n                    sinx = -c;\n                    cosx = s;\n                    break;\n            }\n            cosx += 0;\n            if (sinx === 0) sinx = m.copysign(sinx, x);\n            return {\n                s: sinx,\n                c: cosx\n            };\n        };\n        m.sincosde = function(x, t) {\n            var d, r, q, s, c, sinx, cosx;\n            d = x % 360;\n            q = Math.round(d / 90);\n            d = m.AngRound(d - 90 * q + t);\n            r = d * this.degree;\n            s = Math.sin(r);\n            c = Math.cos(r);\n            if (Math.abs(d) === 45) {\n                c = Math.sqrt(0.5);\n                s = m.copysign(c, r);\n            } else if (Math.abs(d) === 30) {\n                c = Math.sqrt(0.75);\n                s = m.copysign(0.5, r);\n            }\n            switch(q & 3){\n                case 0:\n                    sinx = s;\n                    cosx = c;\n                    break;\n                case 1:\n                    sinx = c;\n                    cosx = -s;\n                    break;\n                case 2:\n                    sinx = -s;\n                    cosx = -c;\n                    break;\n                default:\n                    sinx = -c;\n                    cosx = s;\n                    break;\n            }\n            cosx += 0;\n            if (sinx === 0) sinx = m.copysign(sinx, x + t);\n            return {\n                s: sinx,\n                c: cosx\n            };\n        };\n        m.atan2d = function(y, x) {\n            var q = 0, ang;\n            if (Math.abs(y) > Math.abs(x)) {\n                [y, x] = [\n                    x,\n                    y\n                ];\n                q = 2;\n            }\n            if (m.copysign(1, x) < 0) {\n                x = -x;\n                ++q;\n            }\n            ang = Math.atan2(y, x) / this.degree;\n            switch(q){\n                case 1:\n                    ang = m.copysign(180, y) - ang;\n                    break;\n                case 2:\n                    ang = 90 - ang;\n                    break;\n                case 3:\n                    ang = -90 + ang;\n                    break;\n                default:\n                    break;\n            }\n            return ang;\n        };\n    })(geodesic.Math);\n    (function(a, m) {\n        \"use strict\";\n        a.Accumulator = function(y) {\n            this.Set(y);\n        };\n        a.Accumulator.prototype.Set = function(y) {\n            if (!y) y = 0;\n            if (y.constructor === a.Accumulator) {\n                this._s = y._s;\n                this._t = y._t;\n            } else {\n                this._s = y;\n                this._t = 0;\n            }\n        };\n        a.Accumulator.prototype.Add = function(y) {\n            var u = m.sum(y, this._t), v = m.sum(u.s, this._s);\n            u = u.t;\n            this._s = v.s;\n            this._t = v.t;\n            if (this._s === 0) this._s = u;\n            else this._t += u;\n        };\n        a.Accumulator.prototype.Sum = function(y) {\n            var b;\n            if (!y) return this._s;\n            else {\n                b = new a.Accumulator(this);\n                b.Add(y);\n                return b._s;\n            }\n        };\n        a.Accumulator.prototype.Negate = function() {\n            this._s *= -1;\n            this._t *= -1;\n        };\n        a.Accumulator.prototype.Remainder = function(y) {\n            this._s = m.remainder(this._s, y);\n            this.Add(0);\n        };\n    })(geodesic.Accumulator, geodesic.Math);\n    geodesic.Geodesic = {};\n    geodesic.GeodesicLine = {};\n    geodesic.PolygonArea = {};\n    (function(g, l, p, m, c) {\n        \"use strict\";\n        var GEOGRAPHICLIB_GEODESIC_ORDER = 6, nA1_ = GEOGRAPHICLIB_GEODESIC_ORDER, nA2_ = GEOGRAPHICLIB_GEODESIC_ORDER, nA3_ = GEOGRAPHICLIB_GEODESIC_ORDER, nA3x_ = nA3_, nC3x_, nC4x_, maxit1_ = 20, maxit2_ = maxit1_ + m.digits + 10, tol0_ = m.epsilon, tol1_ = 200 * tol0_, tol2_ = Math.sqrt(tol0_), tolb_ = tol0_, xthresh_ = 1000 * tol2_, CAP_NONE = 0, CAP_ALL = 0x1F, OUT_ALL = 0x7F80, astroid, A1m1f_coeff, C1f_coeff, C1pf_coeff, A2m1f_coeff, C2f_coeff, A3_coeff, C3_coeff, C4_coeff;\n        g.tiny_ = Math.sqrt(Number.MIN_VALUE / Number.EPSILON);\n        g.nC1_ = GEOGRAPHICLIB_GEODESIC_ORDER;\n        g.nC1p_ = GEOGRAPHICLIB_GEODESIC_ORDER;\n        g.nC2_ = GEOGRAPHICLIB_GEODESIC_ORDER;\n        g.nC3_ = GEOGRAPHICLIB_GEODESIC_ORDER;\n        g.nC4_ = GEOGRAPHICLIB_GEODESIC_ORDER;\n        nC3x_ = g.nC3_ * (g.nC3_ - 1) / 2;\n        nC4x_ = g.nC4_ * (g.nC4_ + 1) / 2;\n        g.CAP_C1 = 1;\n        g.CAP_C1p = 2;\n        g.CAP_C2 = 4;\n        g.CAP_C3 = 8;\n        g.CAP_C4 = 16;\n        g.NONE = 0;\n        g.ARC = 64;\n        g.LATITUDE = 128 | CAP_NONE;\n        g.LONGITUDE = 256 | g.CAP_C3;\n        g.AZIMUTH = 512 | CAP_NONE;\n        g.DISTANCE = 1024 | g.CAP_C1;\n        g.STANDARD = g.LATITUDE | g.LONGITUDE | g.AZIMUTH | g.DISTANCE;\n        g.DISTANCE_IN = 2048 | g.CAP_C1 | g.CAP_C1p;\n        g.REDUCEDLENGTH = 4096 | g.CAP_C1 | g.CAP_C2;\n        g.GEODESICSCALE = 8192 | g.CAP_C1 | g.CAP_C2;\n        g.AREA = 16384 | g.CAP_C4;\n        g.ALL = OUT_ALL | CAP_ALL;\n        g.LONG_UNROLL = 32768;\n        g.OUT_MASK = OUT_ALL | g.LONG_UNROLL;\n        g.SinCosSeries = function(sinp, sinx, cosx, c) {\n            var k = c.length, n = k - (sinp ? 1 : 0), ar = 2 * (cosx - sinx) * (cosx + sinx), y0 = n & 1 ? c[--k] : 0, y1 = 0;\n            n = Math.floor(n / 2);\n            while(n--){\n                y1 = ar * y0 - y1 + c[--k];\n                y0 = ar * y1 - y0 + c[--k];\n            }\n            return sinp ? 2 * sinx * cosx * y0 : cosx * (y0 - y1);\n        };\n        astroid = function(x, y) {\n            var k, p = m.sq(x), q = m.sq(y), r = (p + q - 1) / 6, S, r2, r3, disc, u, T3, T, ang, v, uv, w;\n            if (!(q === 0 && r <= 0)) {\n                S = p * q / 4;\n                r2 = m.sq(r);\n                r3 = r * r2;\n                disc = S * (S + 2 * r3);\n                u = r;\n                if (disc >= 0) {\n                    T3 = S + r3;\n                    T3 += T3 < 0 ? -Math.sqrt(disc) : Math.sqrt(disc);\n                    T = m.cbrt(T3);\n                    u += T + (T !== 0 ? r2 / T : 0);\n                } else {\n                    ang = Math.atan2(Math.sqrt(-disc), -(S + r3));\n                    u += 2 * r * Math.cos(ang / 3);\n                }\n                v = Math.sqrt(m.sq(u) + q);\n                uv = u < 0 ? q / (v - u) : u + v;\n                w = (uv - q) / (2 * v);\n                k = uv / (Math.sqrt(uv + m.sq(w)) + w);\n            } else k = 0;\n            return k;\n        };\n        A1m1f_coeff = [\n            1,\n            4,\n            64,\n            0,\n            256\n        ];\n        g.A1m1f = function(eps) {\n            var p = Math.floor(nA1_ / 2), t = m.polyval(p, A1m1f_coeff, 0, m.sq(eps)) / A1m1f_coeff[p + 1];\n            return (t + eps) / (1 - eps);\n        };\n        C1f_coeff = [\n            -1,\n            6,\n            -16,\n            32,\n            -9,\n            64,\n            -128,\n            2048,\n            9,\n            -16,\n            768,\n            3,\n            -5,\n            512,\n            -7,\n            1280,\n            -7,\n            2048\n        ];\n        g.C1f = function(eps, c) {\n            var eps2 = m.sq(eps), d = eps, o = 0, l, p;\n            for(l = 1; l <= g.nC1_; ++l){\n                p = Math.floor((g.nC1_ - l) / 2);\n                c[l] = d * m.polyval(p, C1f_coeff, o, eps2) / C1f_coeff[o + p + 1];\n                o += p + 2;\n                d *= eps;\n            }\n        };\n        C1pf_coeff = [\n            205,\n            -432,\n            768,\n            1536,\n            4005,\n            -4736,\n            3840,\n            12288,\n            -225,\n            116,\n            384,\n            -7173,\n            2695,\n            7680,\n            3467,\n            7680,\n            38081,\n            61440\n        ];\n        g.C1pf = function(eps, c) {\n            var eps2 = m.sq(eps), d = eps, o = 0, l, p;\n            for(l = 1; l <= g.nC1p_; ++l){\n                p = Math.floor((g.nC1p_ - l) / 2);\n                c[l] = d * m.polyval(p, C1pf_coeff, o, eps2) / C1pf_coeff[o + p + 1];\n                o += p + 2;\n                d *= eps;\n            }\n        };\n        A2m1f_coeff = [\n            -11,\n            -28,\n            -192,\n            0,\n            256\n        ];\n        g.A2m1f = function(eps) {\n            var p = Math.floor(nA2_ / 2), t = m.polyval(p, A2m1f_coeff, 0, m.sq(eps)) / A2m1f_coeff[p + 1];\n            return (t - eps) / (1 + eps);\n        };\n        C2f_coeff = [\n            1,\n            2,\n            16,\n            32,\n            35,\n            64,\n            384,\n            2048,\n            15,\n            80,\n            768,\n            7,\n            35,\n            512,\n            63,\n            1280,\n            77,\n            2048\n        ];\n        g.C2f = function(eps, c) {\n            var eps2 = m.sq(eps), d = eps, o = 0, l, p;\n            for(l = 1; l <= g.nC2_; ++l){\n                p = Math.floor((g.nC2_ - l) / 2);\n                c[l] = d * m.polyval(p, C2f_coeff, o, eps2) / C2f_coeff[o + p + 1];\n                o += p + 2;\n                d *= eps;\n            }\n        };\n        g.Geodesic = function(a, f) {\n            this.a = a;\n            this.f = f;\n            this._f1 = 1 - this.f;\n            this._e2 = this.f * (2 - this.f);\n            this._ep2 = this._e2 / m.sq(this._f1);\n            this._n = this.f / (2 - this.f);\n            this._b = this.a * this._f1;\n            this._c2 = (m.sq(this.a) + m.sq(this._b) * (this._e2 === 0 ? 1 : (this._e2 > 0 ? m.atanh(Math.sqrt(this._e2)) : Math.atan(Math.sqrt(-this._e2))) / Math.sqrt(Math.abs(this._e2)))) / 2;\n            this._etol2 = 0.1 * tol2_ / Math.sqrt(Math.max(0.001, Math.abs(this.f)) * Math.min(1, 1 - this.f / 2) / 2);\n            if (!(isFinite(this.a) && this.a > 0)) throw new Error(\"Equatorial radius is not positive\");\n            if (!(isFinite(this._b) && this._b > 0)) throw new Error(\"Polar semi-axis is not positive\");\n            this._A3x = new Array(nA3x_);\n            this._C3x = new Array(nC3x_);\n            this._C4x = new Array(nC4x_);\n            this.A3coeff();\n            this.C3coeff();\n            this.C4coeff();\n        };\n        A3_coeff = [\n            -3,\n            128,\n            -2,\n            -3,\n            64,\n            -1,\n            -3,\n            -1,\n            16,\n            3,\n            -1,\n            -2,\n            8,\n            1,\n            -1,\n            2,\n            1,\n            1\n        ];\n        g.Geodesic.prototype.A3coeff = function() {\n            var o = 0, k = 0, j, p;\n            for(j = nA3_ - 1; j >= 0; --j){\n                p = Math.min(nA3_ - j - 1, j);\n                this._A3x[k++] = m.polyval(p, A3_coeff, o, this._n) / A3_coeff[o + p + 1];\n                o += p + 2;\n            }\n        };\n        C3_coeff = [\n            3,\n            128,\n            2,\n            5,\n            128,\n            -1,\n            3,\n            3,\n            64,\n            -1,\n            0,\n            1,\n            8,\n            -1,\n            1,\n            4,\n            5,\n            256,\n            1,\n            3,\n            128,\n            -3,\n            -2,\n            3,\n            64,\n            1,\n            -3,\n            2,\n            32,\n            7,\n            512,\n            -10,\n            9,\n            384,\n            5,\n            -9,\n            5,\n            192,\n            7,\n            512,\n            -14,\n            7,\n            512,\n            21,\n            2560\n        ];\n        g.Geodesic.prototype.C3coeff = function() {\n            var o = 0, k = 0, l, j, p;\n            for(l = 1; l < g.nC3_; ++l)for(j = g.nC3_ - 1; j >= l; --j){\n                p = Math.min(g.nC3_ - j - 1, j);\n                this._C3x[k++] = m.polyval(p, C3_coeff, o, this._n) / C3_coeff[o + p + 1];\n                o += p + 2;\n            }\n        };\n        C4_coeff = [\n            97,\n            15015,\n            1088,\n            156,\n            45045,\n            -224,\n            -4784,\n            1573,\n            45045,\n            -10656,\n            14144,\n            -4576,\n            -858,\n            45045,\n            64,\n            624,\n            -4576,\n            6864,\n            -3003,\n            15015,\n            100,\n            208,\n            572,\n            3432,\n            -12012,\n            30030,\n            45045,\n            1,\n            9009,\n            -2944,\n            468,\n            135135,\n            5792,\n            1040,\n            -1287,\n            135135,\n            5952,\n            -11648,\n            9152,\n            -2574,\n            135135,\n            -64,\n            -624,\n            4576,\n            -6864,\n            3003,\n            135135,\n            8,\n            10725,\n            1856,\n            -936,\n            225225,\n            -8448,\n            4992,\n            -1144,\n            225225,\n            -1440,\n            4160,\n            -4576,\n            1716,\n            225225,\n            -136,\n            63063,\n            1024,\n            -208,\n            105105,\n            3584,\n            -3328,\n            1144,\n            315315,\n            -128,\n            135135,\n            -2560,\n            832,\n            405405,\n            128,\n            99099\n        ];\n        g.Geodesic.prototype.C4coeff = function() {\n            var o = 0, k = 0, l, j, p;\n            for(l = 0; l < g.nC4_; ++l)for(j = g.nC4_ - 1; j >= l; --j){\n                p = g.nC4_ - j - 1;\n                this._C4x[k++] = m.polyval(p, C4_coeff, o, this._n) / C4_coeff[o + p + 1];\n                o += p + 2;\n            }\n        };\n        g.Geodesic.prototype.A3f = function(eps) {\n            return m.polyval(nA3x_ - 1, this._A3x, 0, eps);\n        };\n        g.Geodesic.prototype.C3f = function(eps, c) {\n            var mult = 1, o = 0, l, p;\n            for(l = 1; l < g.nC3_; ++l){\n                p = g.nC3_ - l - 1;\n                mult *= eps;\n                c[l] = mult * m.polyval(p, this._C3x, o, eps);\n                o += p + 1;\n            }\n        };\n        g.Geodesic.prototype.C4f = function(eps, c) {\n            var mult = 1, o = 0, l, p;\n            for(l = 0; l < g.nC4_; ++l){\n                p = g.nC4_ - l - 1;\n                c[l] = mult * m.polyval(p, this._C4x, o, eps);\n                o += p + 1;\n                mult *= eps;\n            }\n        };\n        g.Geodesic.prototype.Lengths = function(eps, sig12, ssig1, csig1, dn1, ssig2, csig2, dn2, cbet1, cbet2, outmask, C1a, C2a) {\n            outmask &= g.OUT_MASK;\n            var vals = {}, m0x = 0, J12 = 0, A1 = 0, A2 = 0, B1, B2, l, csig12, t;\n            if (outmask & (g.DISTANCE | g.REDUCEDLENGTH | g.GEODESICSCALE)) {\n                A1 = g.A1m1f(eps);\n                g.C1f(eps, C1a);\n                if (outmask & (g.REDUCEDLENGTH | g.GEODESICSCALE)) {\n                    A2 = g.A2m1f(eps);\n                    g.C2f(eps, C2a);\n                    m0x = A1 - A2;\n                    A2 = 1 + A2;\n                }\n                A1 = 1 + A1;\n            }\n            if (outmask & g.DISTANCE) {\n                B1 = g.SinCosSeries(true, ssig2, csig2, C1a) - g.SinCosSeries(true, ssig1, csig1, C1a);\n                vals.s12b = A1 * (sig12 + B1);\n                if (outmask & (g.REDUCEDLENGTH | g.GEODESICSCALE)) {\n                    B2 = g.SinCosSeries(true, ssig2, csig2, C2a) - g.SinCosSeries(true, ssig1, csig1, C2a);\n                    J12 = m0x * sig12 + (A1 * B1 - A2 * B2);\n                }\n            } else if (outmask & (g.REDUCEDLENGTH | g.GEODESICSCALE)) {\n                for(l = 1; l <= g.nC2_; ++l)C2a[l] = A1 * C1a[l] - A2 * C2a[l];\n                J12 = m0x * sig12 + (g.SinCosSeries(true, ssig2, csig2, C2a) - g.SinCosSeries(true, ssig1, csig1, C2a));\n            }\n            if (outmask & g.REDUCEDLENGTH) {\n                vals.m0 = m0x;\n                vals.m12b = dn2 * (csig1 * ssig2) - dn1 * (ssig1 * csig2) - csig1 * csig2 * J12;\n            }\n            if (outmask & g.GEODESICSCALE) {\n                csig12 = csig1 * csig2 + ssig1 * ssig2;\n                t = this._ep2 * (cbet1 - cbet2) * (cbet1 + cbet2) / (dn1 + dn2);\n                vals.M12 = csig12 + (t * ssig2 - csig2 * J12) * ssig1 / dn1;\n                vals.M21 = csig12 - (t * ssig1 - csig1 * J12) * ssig2 / dn2;\n            }\n            return vals;\n        };\n        g.Geodesic.prototype.InverseStart = function(sbet1, cbet1, dn1, sbet2, cbet2, dn2, lam12, slam12, clam12, C1a, C2a) {\n            var vals = {}, sbet12 = sbet2 * cbet1 - cbet2 * sbet1, cbet12 = cbet2 * cbet1 + sbet2 * sbet1, sbet12a, shortline, omg12, sbetm2, somg12, comg12, t, ssig12, csig12, x, y, lamscale, betscale, k2, eps, cbet12a, bet12a, m12b, m0, nvals, k, omg12a, lam12x;\n            vals.sig12 = -1;\n            sbet12a = sbet2 * cbet1;\n            sbet12a += cbet2 * sbet1;\n            shortline = cbet12 >= 0 && sbet12 < 0.5 && cbet2 * lam12 < 0.5;\n            if (shortline) {\n                sbetm2 = m.sq(sbet1 + sbet2);\n                sbetm2 /= sbetm2 + m.sq(cbet1 + cbet2);\n                vals.dnm = Math.sqrt(1 + this._ep2 * sbetm2);\n                omg12 = lam12 / (this._f1 * vals.dnm);\n                somg12 = Math.sin(omg12);\n                comg12 = Math.cos(omg12);\n            } else {\n                somg12 = slam12;\n                comg12 = clam12;\n            }\n            vals.salp1 = cbet2 * somg12;\n            vals.calp1 = comg12 >= 0 ? sbet12 + cbet2 * sbet1 * m.sq(somg12) / (1 + comg12) : sbet12a - cbet2 * sbet1 * m.sq(somg12) / (1 - comg12);\n            ssig12 = m.hypot(vals.salp1, vals.calp1);\n            csig12 = sbet1 * sbet2 + cbet1 * cbet2 * comg12;\n            if (shortline && ssig12 < this._etol2) {\n                vals.salp2 = cbet1 * somg12;\n                vals.calp2 = sbet12 - cbet1 * sbet2 * (comg12 >= 0 ? m.sq(somg12) / (1 + comg12) : 1 - comg12);\n                t = m.hypot(vals.salp2, vals.calp2);\n                vals.salp2 /= t;\n                vals.calp2 /= t;\n                vals.sig12 = Math.atan2(ssig12, csig12);\n            } else if (Math.abs(this._n) > 0.1 || csig12 >= 0 || ssig12 >= 6 * Math.abs(this._n) * Math.PI * m.sq(cbet1)) ;\n            else {\n                lam12x = Math.atan2(-slam12, -clam12);\n                if (this.f >= 0) {\n                    k2 = m.sq(sbet1) * this._ep2;\n                    eps = k2 / (2 * (1 + Math.sqrt(1 + k2)) + k2);\n                    lamscale = this.f * cbet1 * this.A3f(eps) * Math.PI;\n                    betscale = lamscale * cbet1;\n                    x = lam12x / lamscale;\n                    y = sbet12a / betscale;\n                } else {\n                    cbet12a = cbet2 * cbet1 - sbet2 * sbet1;\n                    bet12a = Math.atan2(sbet12a, cbet12a);\n                    nvals = this.Lengths(this._n, Math.PI + bet12a, sbet1, -cbet1, dn1, sbet2, cbet2, dn2, cbet1, cbet2, g.REDUCEDLENGTH, C1a, C2a);\n                    m12b = nvals.m12b;\n                    m0 = nvals.m0;\n                    x = -1 + m12b / (cbet1 * cbet2 * m0 * Math.PI);\n                    betscale = x < -0.01 ? sbet12a / x : -this.f * m.sq(cbet1) * Math.PI;\n                    lamscale = betscale / cbet1;\n                    y = lam12 / lamscale;\n                }\n                if (y > -tol1_ && x > -1 - xthresh_) {\n                    if (this.f >= 0) {\n                        vals.salp1 = Math.min(1, -x);\n                        vals.calp1 = -Math.sqrt(1 - m.sq(vals.salp1));\n                    } else {\n                        vals.calp1 = Math.max(x > -tol1_ ? 0 : -1, x);\n                        vals.salp1 = Math.sqrt(1 - m.sq(vals.calp1));\n                    }\n                } else {\n                    k = astroid(x, y);\n                    omg12a = lamscale * (this.f >= 0 ? -x * k / (1 + k) : -y * (1 + k) / k);\n                    somg12 = Math.sin(omg12a);\n                    comg12 = -Math.cos(omg12a);\n                    vals.salp1 = cbet2 * somg12;\n                    vals.calp1 = sbet12a - cbet2 * sbet1 * m.sq(somg12) / (1 - comg12);\n                }\n            }\n            if (!(vals.salp1 <= 0)) {\n                t = m.hypot(vals.salp1, vals.calp1);\n                vals.salp1 /= t;\n                vals.calp1 /= t;\n            } else {\n                vals.salp1 = 1;\n                vals.calp1 = 0;\n            }\n            return vals;\n        };\n        g.Geodesic.prototype.Lambda12 = function(sbet1, cbet1, dn1, sbet2, cbet2, dn2, salp1, calp1, slam120, clam120, diffp, C1a, C2a, C3a) {\n            var vals = {}, t, salp0, calp0, somg1, comg1, somg2, comg2, somg12, comg12, B312, eta, k2, nvals;\n            if (sbet1 === 0 && calp1 === 0) calp1 = -g.tiny_;\n            salp0 = salp1 * cbet1;\n            calp0 = m.hypot(calp1, salp1 * sbet1);\n            vals.ssig1 = sbet1;\n            somg1 = salp0 * sbet1;\n            vals.csig1 = comg1 = calp1 * cbet1;\n            t = m.hypot(vals.ssig1, vals.csig1);\n            vals.ssig1 /= t;\n            vals.csig1 /= t;\n            vals.salp2 = cbet2 !== cbet1 ? salp0 / cbet2 : salp1;\n            vals.calp2 = cbet2 !== cbet1 || Math.abs(sbet2) !== -sbet1 ? Math.sqrt(m.sq(calp1 * cbet1) + (cbet1 < -sbet1 ? (cbet2 - cbet1) * (cbet1 + cbet2) : (sbet1 - sbet2) * (sbet1 + sbet2))) / cbet2 : Math.abs(calp1);\n            vals.ssig2 = sbet2;\n            somg2 = salp0 * sbet2;\n            vals.csig2 = comg2 = vals.calp2 * cbet2;\n            t = m.hypot(vals.ssig2, vals.csig2);\n            vals.ssig2 /= t;\n            vals.csig2 /= t;\n            vals.sig12 = Math.atan2(Math.max(0, vals.csig1 * vals.ssig2 - vals.ssig1 * vals.csig2), vals.csig1 * vals.csig2 + vals.ssig1 * vals.ssig2);\n            somg12 = Math.max(0, comg1 * somg2 - somg1 * comg2);\n            comg12 = comg1 * comg2 + somg1 * somg2;\n            eta = Math.atan2(somg12 * clam120 - comg12 * slam120, comg12 * clam120 + somg12 * slam120);\n            k2 = m.sq(calp0) * this._ep2;\n            vals.eps = k2 / (2 * (1 + Math.sqrt(1 + k2)) + k2);\n            this.C3f(vals.eps, C3a);\n            B312 = g.SinCosSeries(true, vals.ssig2, vals.csig2, C3a) - g.SinCosSeries(true, vals.ssig1, vals.csig1, C3a);\n            vals.domg12 = -this.f * this.A3f(vals.eps) * salp0 * (vals.sig12 + B312);\n            vals.lam12 = eta + vals.domg12;\n            if (diffp) {\n                if (vals.calp2 === 0) vals.dlam12 = -2 * this._f1 * dn1 / sbet1;\n                else {\n                    nvals = this.Lengths(vals.eps, vals.sig12, vals.ssig1, vals.csig1, dn1, vals.ssig2, vals.csig2, dn2, cbet1, cbet2, g.REDUCEDLENGTH, C1a, C2a);\n                    vals.dlam12 = nvals.m12b;\n                    vals.dlam12 *= this._f1 / (vals.calp2 * cbet2);\n                }\n            }\n            return vals;\n        };\n        g.Geodesic.prototype.Inverse = function(lat1, lon1, lat2, lon2, outmask) {\n            var r, vals;\n            if (!outmask) outmask = g.STANDARD;\n            if (outmask === g.LONG_UNROLL) outmask |= g.STANDARD;\n            outmask &= g.OUT_MASK;\n            r = this.InverseInt(lat1, lon1, lat2, lon2, outmask);\n            vals = r.vals;\n            if (outmask & g.AZIMUTH) {\n                vals.azi1 = m.atan2d(r.salp1, r.calp1);\n                vals.azi2 = m.atan2d(r.salp2, r.calp2);\n            }\n            return vals;\n        };\n        g.Geodesic.prototype.InverseInt = function(lat1, lon1, lat2, lon2, outmask) {\n            var vals = {}, lon12, lon12s, lonsign, t, swapp, latsign, sbet1, cbet1, sbet2, cbet2, s12x, m12x, dn1, dn2, lam12, slam12, clam12, sig12, calp1, salp1, calp2, salp2, C1a, C2a, C3a, meridian, nvals, ssig1, csig1, ssig2, csig2, eps, omg12, dnm, numit, salp1a, calp1a, salp1b, calp1b, tripn, tripb, v, dv, dalp1, sdalp1, cdalp1, nsalp1, lengthmask, salp0, calp0, alp12, k2, A4, C4a, B41, B42, somg12, comg12, domg12, dbet1, dbet2, salp12, calp12, sdomg12, cdomg12;\n            vals.lat1 = lat1 = m.LatFix(lat1);\n            vals.lat2 = lat2 = m.LatFix(lat2);\n            lat1 = m.AngRound(lat1);\n            lat2 = m.AngRound(lat2);\n            lon12 = m.AngDiff(lon1, lon2);\n            lon12s = lon12.e;\n            lon12 = lon12.d;\n            if (outmask & g.LONG_UNROLL) {\n                vals.lon1 = lon1;\n                vals.lon2 = lon1 + lon12 + lon12s;\n            } else {\n                vals.lon1 = m.AngNormalize(lon1);\n                vals.lon2 = m.AngNormalize(lon2);\n            }\n            lonsign = m.copysign(1, lon12);\n            lon12 *= lonsign;\n            lon12s *= lonsign;\n            lam12 = lon12 * m.degree;\n            t = m.sincosde(lon12, lon12s);\n            slam12 = t.s;\n            clam12 = t.c;\n            lon12s = 180 - lon12 - lon12s;\n            swapp = Math.abs(lat1) < Math.abs(lat2) || isNaN(lat2) ? -1 : 1;\n            if (swapp < 0) {\n                lonsign *= -1;\n                [lat2, lat1] = [\n                    lat1,\n                    lat2\n                ];\n            }\n            latsign = m.copysign(1, -lat1);\n            lat1 *= latsign;\n            lat2 *= latsign;\n            t = m.sincosd(lat1);\n            sbet1 = this._f1 * t.s;\n            cbet1 = t.c;\n            t = m.hypot(sbet1, cbet1);\n            sbet1 /= t;\n            cbet1 /= t;\n            cbet1 = Math.max(g.tiny_, cbet1);\n            t = m.sincosd(lat2);\n            sbet2 = this._f1 * t.s;\n            cbet2 = t.c;\n            t = m.hypot(sbet2, cbet2);\n            sbet2 /= t;\n            cbet2 /= t;\n            cbet2 = Math.max(g.tiny_, cbet2);\n            if (cbet1 < -sbet1) {\n                if (cbet2 === cbet1) sbet2 = m.copysign(sbet1, sbet2);\n            } else if (Math.abs(sbet2) === -sbet1) cbet2 = cbet1;\n            dn1 = Math.sqrt(1 + this._ep2 * m.sq(sbet1));\n            dn2 = Math.sqrt(1 + this._ep2 * m.sq(sbet2));\n            C1a = new Array(g.nC1_ + 1);\n            C2a = new Array(g.nC2_ + 1);\n            C3a = new Array(g.nC3_);\n            meridian = lat1 === -90 || slam12 === 0;\n            if (meridian) {\n                calp1 = clam12;\n                salp1 = slam12;\n                calp2 = 1;\n                salp2 = 0;\n                ssig1 = sbet1;\n                csig1 = calp1 * cbet1;\n                ssig2 = sbet2;\n                csig2 = calp2 * cbet2;\n                sig12 = Math.atan2(Math.max(0, csig1 * ssig2 - ssig1 * csig2), csig1 * csig2 + ssig1 * ssig2);\n                nvals = this.Lengths(this._n, sig12, ssig1, csig1, dn1, ssig2, csig2, dn2, cbet1, cbet2, outmask | g.DISTANCE | g.REDUCEDLENGTH, C1a, C2a);\n                s12x = nvals.s12b;\n                m12x = nvals.m12b;\n                if (outmask & g.GEODESICSCALE) {\n                    vals.M12 = nvals.M12;\n                    vals.M21 = nvals.M21;\n                }\n                if (sig12 < 1 || m12x >= 0) {\n                    if (sig12 < 3 * g.tiny_ || sig12 < tol0_ && (s12x < 0 || m12x < 0)) sig12 = m12x = s12x = 0;\n                    m12x *= this._b;\n                    s12x *= this._b;\n                    vals.a12 = sig12 / m.degree;\n                } else meridian = false;\n            }\n            somg12 = 2;\n            if (!meridian && sbet1 === 0 && (this.f <= 0 || lon12s >= this.f * 180)) {\n                calp1 = calp2 = 0;\n                salp1 = salp2 = 1;\n                s12x = this.a * lam12;\n                sig12 = omg12 = lam12 / this._f1;\n                m12x = this._b * Math.sin(sig12);\n                if (outmask & g.GEODESICSCALE) vals.M12 = vals.M21 = Math.cos(sig12);\n                vals.a12 = lon12 / this._f1;\n            } else if (!meridian) {\n                nvals = this.InverseStart(sbet1, cbet1, dn1, sbet2, cbet2, dn2, lam12, slam12, clam12, C1a, C2a);\n                sig12 = nvals.sig12;\n                salp1 = nvals.salp1;\n                calp1 = nvals.calp1;\n                if (sig12 >= 0) {\n                    salp2 = nvals.salp2;\n                    calp2 = nvals.calp2;\n                    dnm = nvals.dnm;\n                    s12x = sig12 * this._b * dnm;\n                    m12x = m.sq(dnm) * this._b * Math.sin(sig12 / dnm);\n                    if (outmask & g.GEODESICSCALE) vals.M12 = vals.M21 = Math.cos(sig12 / dnm);\n                    vals.a12 = sig12 / m.degree;\n                    omg12 = lam12 / (this._f1 * dnm);\n                } else {\n                    numit = 0;\n                    salp1a = g.tiny_;\n                    calp1a = 1;\n                    salp1b = g.tiny_;\n                    calp1b = -1;\n                    for(tripn = false, tripb = false;; ++numit){\n                        nvals = this.Lambda12(sbet1, cbet1, dn1, sbet2, cbet2, dn2, salp1, calp1, slam12, clam12, numit < maxit1_, C1a, C2a, C3a);\n                        v = nvals.lam12;\n                        salp2 = nvals.salp2;\n                        calp2 = nvals.calp2;\n                        sig12 = nvals.sig12;\n                        ssig1 = nvals.ssig1;\n                        csig1 = nvals.csig1;\n                        ssig2 = nvals.ssig2;\n                        csig2 = nvals.csig2;\n                        eps = nvals.eps;\n                        domg12 = nvals.domg12;\n                        dv = nvals.dlam12;\n                        if (tripb || !(Math.abs(v) >= (tripn ? 8 : 1) * tol0_) || numit == maxit2_) break;\n                        if (v > 0 && (numit < maxit1_ || calp1 / salp1 > calp1b / salp1b)) {\n                            salp1b = salp1;\n                            calp1b = calp1;\n                        } else if (v < 0 && (numit < maxit1_ || calp1 / salp1 < calp1a / salp1a)) {\n                            salp1a = salp1;\n                            calp1a = calp1;\n                        }\n                        if (numit < maxit1_ && dv > 0) {\n                            dalp1 = -v / dv;\n                            if (Math.abs(dalp1) < Math.PI) {\n                                sdalp1 = Math.sin(dalp1);\n                                cdalp1 = Math.cos(dalp1);\n                                nsalp1 = salp1 * cdalp1 + calp1 * sdalp1;\n                                if (nsalp1 > 0) {\n                                    calp1 = calp1 * cdalp1 - salp1 * sdalp1;\n                                    salp1 = nsalp1;\n                                    t = m.hypot(salp1, calp1);\n                                    salp1 /= t;\n                                    calp1 /= t;\n                                    tripn = Math.abs(v) <= 16 * tol0_;\n                                    continue;\n                                }\n                            }\n                        }\n                        salp1 = (salp1a + salp1b) / 2;\n                        calp1 = (calp1a + calp1b) / 2;\n                        t = m.hypot(salp1, calp1);\n                        salp1 /= t;\n                        calp1 /= t;\n                        tripn = false;\n                        tripb = Math.abs(salp1a - salp1) + (calp1a - calp1) < tolb_ || Math.abs(salp1 - salp1b) + (calp1 - calp1b) < tolb_;\n                    }\n                    lengthmask = outmask | (outmask & (g.REDUCEDLENGTH | g.GEODESICSCALE) ? g.DISTANCE : g.NONE);\n                    nvals = this.Lengths(eps, sig12, ssig1, csig1, dn1, ssig2, csig2, dn2, cbet1, cbet2, lengthmask, C1a, C2a);\n                    s12x = nvals.s12b;\n                    m12x = nvals.m12b;\n                    if (outmask & g.GEODESICSCALE) {\n                        vals.M12 = nvals.M12;\n                        vals.M21 = nvals.M21;\n                    }\n                    m12x *= this._b;\n                    s12x *= this._b;\n                    vals.a12 = sig12 / m.degree;\n                    if (outmask & g.AREA) {\n                        sdomg12 = Math.sin(domg12);\n                        cdomg12 = Math.cos(domg12);\n                        somg12 = slam12 * cdomg12 - clam12 * sdomg12;\n                        comg12 = clam12 * cdomg12 + slam12 * sdomg12;\n                    }\n                }\n            }\n            if (outmask & g.DISTANCE) vals.s12 = 0 + s12x;\n            if (outmask & g.REDUCEDLENGTH) vals.m12 = 0 + m12x;\n            if (outmask & g.AREA) {\n                salp0 = salp1 * cbet1;\n                calp0 = m.hypot(calp1, salp1 * sbet1);\n                if (calp0 !== 0 && salp0 !== 0) {\n                    ssig1 = sbet1;\n                    csig1 = calp1 * cbet1;\n                    ssig2 = sbet2;\n                    csig2 = calp2 * cbet2;\n                    k2 = m.sq(calp0) * this._ep2;\n                    eps = k2 / (2 * (1 + Math.sqrt(1 + k2)) + k2);\n                    A4 = m.sq(this.a) * calp0 * salp0 * this._e2;\n                    t = m.hypot(ssig1, csig1);\n                    ssig1 /= t;\n                    csig1 /= t;\n                    t = m.hypot(ssig2, csig2);\n                    ssig2 /= t;\n                    csig2 /= t;\n                    C4a = new Array(g.nC4_);\n                    this.C4f(eps, C4a);\n                    B41 = g.SinCosSeries(false, ssig1, csig1, C4a);\n                    B42 = g.SinCosSeries(false, ssig2, csig2, C4a);\n                    vals.S12 = A4 * (B42 - B41);\n                } else vals.S12 = 0;\n                if (!meridian && somg12 == 2) {\n                    somg12 = Math.sin(omg12);\n                    comg12 = Math.cos(omg12);\n                }\n                if (!meridian && comg12 > -0.7071 && sbet2 - sbet1 < 1.75) {\n                    domg12 = 1 + comg12;\n                    dbet1 = 1 + cbet1;\n                    dbet2 = 1 + cbet2;\n                    alp12 = 2 * Math.atan2(somg12 * (sbet1 * dbet2 + sbet2 * dbet1), domg12 * (sbet1 * sbet2 + dbet1 * dbet2));\n                } else {\n                    salp12 = salp2 * calp1 - calp2 * salp1;\n                    calp12 = calp2 * calp1 + salp2 * salp1;\n                    if (salp12 === 0 && calp12 < 0) {\n                        salp12 = g.tiny_ * calp1;\n                        calp12 = -1;\n                    }\n                    alp12 = Math.atan2(salp12, calp12);\n                }\n                vals.S12 += this._c2 * alp12;\n                vals.S12 *= swapp * lonsign * latsign;\n                vals.S12 += 0;\n            }\n            if (swapp < 0) {\n                [salp2, salp1] = [\n                    salp1,\n                    salp2\n                ];\n                [calp2, calp1] = [\n                    calp1,\n                    calp2\n                ];\n                if (outmask & g.GEODESICSCALE) [vals.M21, vals.M12] = [\n                    vals.M12,\n                    vals.M21\n                ];\n            }\n            salp1 *= swapp * lonsign;\n            calp1 *= swapp * latsign;\n            salp2 *= swapp * lonsign;\n            calp2 *= swapp * latsign;\n            return {\n                vals: vals,\n                salp1: salp1,\n                calp1: calp1,\n                salp2: salp2,\n                calp2: calp2\n            };\n        };\n        g.Geodesic.prototype.GenDirect = function(lat1, lon1, azi1, arcmode, s12_a12, outmask) {\n            var line;\n            if (!outmask) outmask = g.STANDARD;\n            else if (outmask === g.LONG_UNROLL) outmask |= g.STANDARD;\n            if (!arcmode) outmask |= g.DISTANCE_IN;\n            line = new l.GeodesicLine(this, lat1, lon1, azi1, outmask);\n            return line.GenPosition(arcmode, s12_a12, outmask);\n        };\n        g.Geodesic.prototype.Direct = function(lat1, lon1, azi1, s12, outmask) {\n            return this.GenDirect(lat1, lon1, azi1, false, s12, outmask);\n        };\n        g.Geodesic.prototype.ArcDirect = function(lat1, lon1, azi1, a12, outmask) {\n            return this.GenDirect(lat1, lon1, azi1, true, a12, outmask);\n        };\n        g.Geodesic.prototype.Line = function(lat1, lon1, azi1, caps) {\n            return new l.GeodesicLine(this, lat1, lon1, azi1, caps);\n        };\n        g.Geodesic.prototype.DirectLine = function(lat1, lon1, azi1, s12, caps) {\n            return this.GenDirectLine(lat1, lon1, azi1, false, s12, caps);\n        };\n        g.Geodesic.prototype.ArcDirectLine = function(lat1, lon1, azi1, a12, caps) {\n            return this.GenDirectLine(lat1, lon1, azi1, true, a12, caps);\n        };\n        g.Geodesic.prototype.GenDirectLine = function(lat1, lon1, azi1, arcmode, s12_a12, caps) {\n            var t;\n            if (!caps) caps = g.STANDARD | g.DISTANCE_IN;\n            if (!arcmode) caps |= g.DISTANCE_IN;\n            t = new l.GeodesicLine(this, lat1, lon1, azi1, caps);\n            t.GenSetDistance(arcmode, s12_a12);\n            return t;\n        };\n        g.Geodesic.prototype.InverseLine = function(lat1, lon1, lat2, lon2, caps) {\n            var r, t, azi1;\n            if (!caps) caps = g.STANDARD | g.DISTANCE_IN;\n            r = this.InverseInt(lat1, lon1, lat2, lon2, g.ARC);\n            azi1 = m.atan2d(r.salp1, r.calp1);\n            if (caps & (g.OUT_MASK & g.DISTANCE_IN)) caps |= g.DISTANCE;\n            t = new l.GeodesicLine(this, lat1, lon1, azi1, caps, r.salp1, r.calp1);\n            t.SetArc(r.vals.a12);\n            return t;\n        };\n        g.Geodesic.prototype.Polygon = function(polyline) {\n            return new p.PolygonArea(this, polyline);\n        };\n        g.WGS84 = new g.Geodesic(c.WGS84.a, c.WGS84.f);\n    })(geodesic.Geodesic, geodesic.GeodesicLine, geodesic.PolygonArea, geodesic.Math, geodesic.Constants);\n    (function(g, l, m) {\n        \"use strict\";\n        l.GeodesicLine = function(geod, lat1, lon1, azi1, caps, salp1, calp1) {\n            var t, cbet1, sbet1, eps, s, c;\n            if (!caps) caps = g.STANDARD | g.DISTANCE_IN;\n            this.a = geod.a;\n            this.f = geod.f;\n            this._b = geod._b;\n            this._c2 = geod._c2;\n            this._f1 = geod._f1;\n            this.caps = caps | g.LATITUDE | g.AZIMUTH | g.LONG_UNROLL;\n            this.lat1 = m.LatFix(lat1);\n            this.lon1 = lon1;\n            if (typeof salp1 === 'undefined' || typeof calp1 === 'undefined') {\n                this.azi1 = m.AngNormalize(azi1);\n                t = m.sincosd(m.AngRound(this.azi1));\n                this.salp1 = t.s;\n                this.calp1 = t.c;\n            } else {\n                this.azi1 = azi1;\n                this.salp1 = salp1;\n                this.calp1 = calp1;\n            }\n            t = m.sincosd(m.AngRound(this.lat1));\n            sbet1 = this._f1 * t.s;\n            cbet1 = t.c;\n            t = m.hypot(sbet1, cbet1);\n            sbet1 /= t;\n            cbet1 /= t;\n            cbet1 = Math.max(g.tiny_, cbet1);\n            this._dn1 = Math.sqrt(1 + geod._ep2 * m.sq(sbet1));\n            this._salp0 = this.salp1 * cbet1;\n            this._calp0 = m.hypot(this.calp1, this.salp1 * sbet1);\n            this._ssig1 = sbet1;\n            this._somg1 = this._salp0 * sbet1;\n            this._csig1 = this._comg1 = sbet1 !== 0 || this.calp1 !== 0 ? cbet1 * this.calp1 : 1;\n            t = m.hypot(this._ssig1, this._csig1);\n            this._ssig1 /= t;\n            this._csig1 /= t;\n            this._k2 = m.sq(this._calp0) * geod._ep2;\n            eps = this._k2 / (2 * (1 + Math.sqrt(1 + this._k2)) + this._k2);\n            if (this.caps & g.CAP_C1) {\n                this._A1m1 = g.A1m1f(eps);\n                this._C1a = new Array(g.nC1_ + 1);\n                g.C1f(eps, this._C1a);\n                this._B11 = g.SinCosSeries(true, this._ssig1, this._csig1, this._C1a);\n                s = Math.sin(this._B11);\n                c = Math.cos(this._B11);\n                this._stau1 = this._ssig1 * c + this._csig1 * s;\n                this._ctau1 = this._csig1 * c - this._ssig1 * s;\n            }\n            if (this.caps & g.CAP_C1p) {\n                this._C1pa = new Array(g.nC1p_ + 1);\n                g.C1pf(eps, this._C1pa);\n            }\n            if (this.caps & g.CAP_C2) {\n                this._A2m1 = g.A2m1f(eps);\n                this._C2a = new Array(g.nC2_ + 1);\n                g.C2f(eps, this._C2a);\n                this._B21 = g.SinCosSeries(true, this._ssig1, this._csig1, this._C2a);\n            }\n            if (this.caps & g.CAP_C3) {\n                this._C3a = new Array(g.nC3_);\n                geod.C3f(eps, this._C3a);\n                this._A3c = -this.f * this._salp0 * geod.A3f(eps);\n                this._B31 = g.SinCosSeries(true, this._ssig1, this._csig1, this._C3a);\n            }\n            if (this.caps & g.CAP_C4) {\n                this._C4a = new Array(g.nC4_);\n                geod.C4f(eps, this._C4a);\n                this._A4 = m.sq(this.a) * this._calp0 * this._salp0 * geod._e2;\n                this._B41 = g.SinCosSeries(false, this._ssig1, this._csig1, this._C4a);\n            }\n            this.a13 = this.s13 = NaN;\n        };\n        l.GeodesicLine.prototype.GenPosition = function(arcmode, s12_a12, outmask) {\n            var vals = {}, sig12, ssig12, csig12, B12, AB1, ssig2, csig2, tau12, s, c, serr, omg12, lam12, lon12, E, sbet2, cbet2, somg2, comg2, salp2, calp2, dn2, B22, AB2, J12, t, B42, salp12, calp12;\n            if (!outmask) outmask = g.STANDARD;\n            else if (outmask === g.LONG_UNROLL) outmask |= g.STANDARD;\n            outmask &= this.caps & g.OUT_MASK;\n            vals.lat1 = this.lat1;\n            vals.azi1 = this.azi1;\n            vals.lon1 = outmask & g.LONG_UNROLL ? this.lon1 : m.AngNormalize(this.lon1);\n            if (arcmode) vals.a12 = s12_a12;\n            else vals.s12 = s12_a12;\n            if (!(arcmode || this.caps & g.DISTANCE_IN & g.OUT_MASK)) {\n                vals.a12 = NaN;\n                return vals;\n            }\n            B12 = 0;\n            AB1 = 0;\n            if (arcmode) {\n                sig12 = s12_a12 * m.degree;\n                t = m.sincosd(s12_a12);\n                ssig12 = t.s;\n                csig12 = t.c;\n            } else {\n                tau12 = s12_a12 / (this._b * (1 + this._A1m1));\n                s = Math.sin(tau12);\n                c = Math.cos(tau12);\n                B12 = -g.SinCosSeries(true, this._stau1 * c + this._ctau1 * s, this._ctau1 * c - this._stau1 * s, this._C1pa);\n                sig12 = tau12 - (B12 - this._B11);\n                ssig12 = Math.sin(sig12);\n                csig12 = Math.cos(sig12);\n                if (Math.abs(this.f) > 0.01) {\n                    ssig2 = this._ssig1 * csig12 + this._csig1 * ssig12;\n                    csig2 = this._csig1 * csig12 - this._ssig1 * ssig12;\n                    B12 = g.SinCosSeries(true, ssig2, csig2, this._C1a);\n                    serr = (1 + this._A1m1) * (sig12 + (B12 - this._B11)) - s12_a12 / this._b;\n                    sig12 = sig12 - serr / Math.sqrt(1 + this._k2 * m.sq(ssig2));\n                    ssig12 = Math.sin(sig12);\n                    csig12 = Math.cos(sig12);\n                }\n            }\n            ssig2 = this._ssig1 * csig12 + this._csig1 * ssig12;\n            csig2 = this._csig1 * csig12 - this._ssig1 * ssig12;\n            dn2 = Math.sqrt(1 + this._k2 * m.sq(ssig2));\n            if (outmask & (g.DISTANCE | g.REDUCEDLENGTH | g.GEODESICSCALE)) {\n                if (arcmode || Math.abs(this.f) > 0.01) B12 = g.SinCosSeries(true, ssig2, csig2, this._C1a);\n                AB1 = (1 + this._A1m1) * (B12 - this._B11);\n            }\n            sbet2 = this._calp0 * ssig2;\n            cbet2 = m.hypot(this._salp0, this._calp0 * csig2);\n            if (cbet2 === 0) cbet2 = csig2 = g.tiny_;\n            salp2 = this._salp0;\n            calp2 = this._calp0 * csig2;\n            if (arcmode && outmask & g.DISTANCE) vals.s12 = this._b * ((1 + this._A1m1) * sig12 + AB1);\n            if (outmask & g.LONGITUDE) {\n                somg2 = this._salp0 * ssig2;\n                comg2 = csig2;\n                E = m.copysign(1, this._salp0);\n                omg12 = outmask & g.LONG_UNROLL ? E * (sig12 - (Math.atan2(ssig2, csig2) - Math.atan2(this._ssig1, this._csig1)) + (Math.atan2(E * somg2, comg2) - Math.atan2(E * this._somg1, this._comg1))) : Math.atan2(somg2 * this._comg1 - comg2 * this._somg1, comg2 * this._comg1 + somg2 * this._somg1);\n                lam12 = omg12 + this._A3c * (sig12 + (g.SinCosSeries(true, ssig2, csig2, this._C3a) - this._B31));\n                lon12 = lam12 / m.degree;\n                vals.lon2 = outmask & g.LONG_UNROLL ? this.lon1 + lon12 : m.AngNormalize(m.AngNormalize(this.lon1) + m.AngNormalize(lon12));\n            }\n            if (outmask & g.LATITUDE) vals.lat2 = m.atan2d(sbet2, this._f1 * cbet2);\n            if (outmask & g.AZIMUTH) vals.azi2 = m.atan2d(salp2, calp2);\n            if (outmask & (g.REDUCEDLENGTH | g.GEODESICSCALE)) {\n                B22 = g.SinCosSeries(true, ssig2, csig2, this._C2a);\n                AB2 = (1 + this._A2m1) * (B22 - this._B21);\n                J12 = (this._A1m1 - this._A2m1) * sig12 + (AB1 - AB2);\n                if (outmask & g.REDUCEDLENGTH) vals.m12 = this._b * (dn2 * (this._csig1 * ssig2) - this._dn1 * (this._ssig1 * csig2) - this._csig1 * csig2 * J12);\n                if (outmask & g.GEODESICSCALE) {\n                    t = this._k2 * (ssig2 - this._ssig1) * (ssig2 + this._ssig1) / (this._dn1 + dn2);\n                    vals.M12 = csig12 + (t * ssig2 - csig2 * J12) * this._ssig1 / this._dn1;\n                    vals.M21 = csig12 - (t * this._ssig1 - this._csig1 * J12) * ssig2 / dn2;\n                }\n            }\n            if (outmask & g.AREA) {\n                B42 = g.SinCosSeries(false, ssig2, csig2, this._C4a);\n                if (this._calp0 === 0 || this._salp0 === 0) {\n                    salp12 = salp2 * this.calp1 - calp2 * this.salp1;\n                    calp12 = calp2 * this.calp1 + salp2 * this.salp1;\n                } else {\n                    salp12 = this._calp0 * this._salp0 * (csig12 <= 0 ? this._csig1 * (1 - csig12) + ssig12 * this._ssig1 : ssig12 * (this._csig1 * ssig12 / (1 + csig12) + this._ssig1));\n                    calp12 = m.sq(this._salp0) + m.sq(this._calp0) * this._csig1 * csig2;\n                }\n                vals.S12 = this._c2 * Math.atan2(salp12, calp12) + this._A4 * (B42 - this._B41);\n            }\n            if (!arcmode) vals.a12 = sig12 / m.degree;\n            return vals;\n        };\n        l.GeodesicLine.prototype.Position = function(s12, outmask) {\n            return this.GenPosition(false, s12, outmask);\n        };\n        l.GeodesicLine.prototype.ArcPosition = function(a12, outmask) {\n            return this.GenPosition(true, a12, outmask);\n        };\n        l.GeodesicLine.prototype.GenSetDistance = function(arcmode, s13_a13) {\n            if (arcmode) this.SetArc(s13_a13);\n            else this.SetDistance(s13_a13);\n        };\n        l.GeodesicLine.prototype.SetDistance = function(s13) {\n            var r;\n            this.s13 = s13;\n            r = this.GenPosition(false, this.s13, g.ARC);\n            this.a13 = 0 + r.a12;\n        };\n        l.GeodesicLine.prototype.SetArc = function(a13) {\n            var r;\n            this.a13 = a13;\n            r = this.GenPosition(true, this.a13, g.DISTANCE);\n            this.s13 = 0 + r.s12;\n        };\n    })(geodesic.Geodesic, geodesic.GeodesicLine, geodesic.Math);\n    (function(p, g, m, a) {\n        \"use strict\";\n        var transit, transitdirect, AreaReduceA, AreaReduceB;\n        transit = function(lon1, lon2) {\n            var lon12 = m.AngDiff(lon1, lon2).d;\n            lon1 = m.AngNormalize(lon1);\n            lon2 = m.AngNormalize(lon2);\n            return lon12 > 0 && (lon1 < 0 && lon2 >= 0 || lon1 > 0 && lon2 === 0) ? 1 : lon12 < 0 && lon1 >= 0 && lon2 < 0 ? -1 : 0;\n        };\n        transitdirect = function(lon1, lon2) {\n            lon1 = lon1 % 720;\n            lon2 = lon2 % 720;\n            return (0 <= lon2 && lon2 < 360 || lon2 < -360 ? 0 : 1) - (0 <= lon1 && lon1 < 360 || lon1 < -360 ? 0 : 1);\n        };\n        AreaReduceA = function(area, area0, crossings, reverse, sign) {\n            area.Remainder(area0);\n            if (crossings & 1) area.Add((area.Sum() < 0 ? 1 : -1) * area0 / 2);\n            if (!reverse) area.Negate();\n            if (sign) {\n                if (area.Sum() > area0 / 2) area.Add(-area0);\n                else if (area.Sum() <= -area0 / 2) area.Add(+area0);\n            } else {\n                if (area.Sum() >= area0) area.Add(-area0);\n                else if (area.Sum() < 0) area.Add(+area0);\n            }\n            return 0 + area.Sum();\n        };\n        AreaReduceB = function(area, area0, crossings, reverse, sign) {\n            area = m.remainder(area, area0);\n            if (crossings & 1) area += (area < 0 ? 1 : -1) * area0 / 2;\n            if (!reverse) area *= -1;\n            if (sign) {\n                if (area > area0 / 2) area -= area0;\n                else if (area <= -area0 / 2) area += area0;\n            } else {\n                if (area >= area0) area -= area0;\n                else if (area < 0) area += area0;\n            }\n            return 0 + area;\n        };\n        p.PolygonArea = function(geod, polyline) {\n            this._geod = geod;\n            this.a = this._geod.a;\n            this.f = this._geod.f;\n            this._area0 = 4 * Math.PI * geod._c2;\n            this.polyline = !polyline ? false : polyline;\n            this._mask = g.LATITUDE | g.LONGITUDE | g.DISTANCE | (this.polyline ? g.NONE : g.AREA | g.LONG_UNROLL);\n            if (!this.polyline) this._areasum = new a.Accumulator(0);\n            this._perimetersum = new a.Accumulator(0);\n            this.Clear();\n        };\n        p.PolygonArea.prototype.Clear = function() {\n            this.num = 0;\n            this._crossings = 0;\n            if (!this.polyline) this._areasum.Set(0);\n            this._perimetersum.Set(0);\n            this._lat0 = this._lon0 = this.lat = this.lon = NaN;\n        };\n        p.PolygonArea.prototype.AddPoint = function(lat, lon) {\n            var t;\n            if (this.num === 0) {\n                this._lat0 = this.lat = lat;\n                this._lon0 = this.lon = lon;\n            } else {\n                t = this._geod.Inverse(this.lat, this.lon, lat, lon, this._mask);\n                this._perimetersum.Add(t.s12);\n                if (!this.polyline) {\n                    this._areasum.Add(t.S12);\n                    this._crossings += transit(this.lon, lon);\n                }\n                this.lat = lat;\n                this.lon = lon;\n            }\n            ++this.num;\n        };\n        p.PolygonArea.prototype.AddEdge = function(azi, s) {\n            var t;\n            if (this.num) {\n                t = this._geod.Direct(this.lat, this.lon, azi, s, this._mask);\n                this._perimetersum.Add(s);\n                if (!this.polyline) {\n                    this._areasum.Add(t.S12);\n                    this._crossings += transitdirect(this.lon, t.lon2);\n                }\n                this.lat = t.lat2;\n                this.lon = t.lon2;\n            }\n            ++this.num;\n        };\n        p.PolygonArea.prototype.Compute = function(reverse, sign) {\n            var vals = {\n                number: this.num\n            }, t, tempsum;\n            if (this.num < 2) {\n                vals.perimeter = 0;\n                if (!this.polyline) vals.area = 0;\n                return vals;\n            }\n            if (this.polyline) {\n                vals.perimeter = this._perimetersum.Sum();\n                return vals;\n            }\n            t = this._geod.Inverse(this.lat, this.lon, this._lat0, this._lon0, this._mask);\n            vals.perimeter = this._perimetersum.Sum(t.s12);\n            tempsum = new a.Accumulator(this._areasum);\n            tempsum.Add(t.S12);\n            vals.area = AreaReduceA(tempsum, this._area0, this._crossings + transit(this.lon, this._lon0), reverse, sign);\n            return vals;\n        };\n        p.PolygonArea.prototype.TestPoint = function(lat, lon, reverse, sign) {\n            var vals = {\n                number: this.num + 1\n            }, t, tempsum, crossings, i;\n            if (this.num === 0) {\n                vals.perimeter = 0;\n                if (!this.polyline) vals.area = 0;\n                return vals;\n            }\n            vals.perimeter = this._perimetersum.Sum();\n            tempsum = this.polyline ? 0 : this._areasum.Sum();\n            crossings = this._crossings;\n            for(i = 0; i < (this.polyline ? 1 : 2); ++i){\n                t = this._geod.Inverse(i === 0 ? this.lat : lat, i === 0 ? this.lon : lon, i !== 0 ? this._lat0 : lat, i !== 0 ? this._lon0 : lon, this._mask);\n                vals.perimeter += t.s12;\n                if (!this.polyline) {\n                    tempsum += t.S12;\n                    crossings += transit(i === 0 ? this.lon : lon, i !== 0 ? this._lon0 : lon);\n                }\n            }\n            if (this.polyline) return vals;\n            vals.area = AreaReduceB(tempsum, this._area0, crossings, reverse, sign);\n            return vals;\n        };\n        p.PolygonArea.prototype.TestEdge = function(azi, s, reverse, sign) {\n            var vals = {\n                number: this.num ? this.num + 1 : 0\n            }, t, tempsum, crossings;\n            if (this.num === 0) return vals;\n            vals.perimeter = this._perimetersum.Sum() + s;\n            if (this.polyline) return vals;\n            tempsum = this._areasum.Sum();\n            crossings = this._crossings;\n            t = this._geod.Direct(this.lat, this.lon, azi, s, this._mask);\n            tempsum += t.S12;\n            crossings += transitdirect(this.lon, t.lon2);\n            crossings += transit(t.lon2, this._lon0);\n            t = this._geod.Inverse(t.lat2, t.lon2, this._lat0, this._lon0, this._mask);\n            vals.perimeter += t.s12;\n            tempsum += t.S12;\n            vals.area = AreaReduceB(tempsum, this._area0, crossings, reverse, sign);\n            return vals;\n        };\n    })(geodesic.PolygonArea, geodesic.Geodesic, geodesic.Math, geodesic.Accumulator);\n    cb(geodesic);\n})(function(geo) {\n    if (module.exports) module.exports = geo;\n    else if (typeof define === 'function' && define.amd) define('geographiclib-geodesic', [], function() {\n        return geo;\n    });\n    else window.geodesic = geo;\n});\n\n});\n\n\nparcelRegister(\"37G1n\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $24629f153ebf2c1f$export$2e2bcd8739ae039);\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $ljPJJ = parcelRequire(\"ljPJJ\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nfunction $24629f153ebf2c1f$export$2cd8252107eb640b() {\n    // double temp;      /* temporary variable    */\n    /* Place parameters in static storage for common use\n      ------------------------------------------------- */ this.sin_p14 = Math.sin(this.lat0);\n    this.cos_p14 = Math.cos(this.lat0);\n}\nfunction $24629f153ebf2c1f$export$174bb771924e7eb1(p) {\n    var sinphi, cosphi; /* sin and cos value        */ \n    var dlon; /* delta longitude value      */ \n    var coslon; /* cos of longitude        */ \n    var ksp; /* scale factor          */ \n    var g, x, y;\n    var lon = p.x;\n    var lat = p.y;\n    /* Forward equations\n      ----------------- */ dlon = (0, $a9oRf.default)(lon - this.long0);\n    sinphi = Math.sin(lat);\n    cosphi = Math.cos(lat);\n    coslon = Math.cos(dlon);\n    g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n    ksp = 1;\n    if (g > 0 || Math.abs(g) <= (0, $gyVUi.EPSLN)) {\n        x = this.a * ksp * cosphi * Math.sin(dlon);\n        y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n}\nfunction $24629f153ebf2c1f$export$70ae2c07e401031b(p) {\n    var rh; /* height above ellipsoid      */ \n    var z; /* angle          */ \n    var sinz, cosz; /* sin of z and cos of z      */ \n    var con;\n    var lon, lat;\n    /* Inverse equations\n      ----------------- */ p.x -= this.x0;\n    p.y -= this.y0;\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    z = (0, $ljPJJ.default)(rh / this.a);\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n    lon = this.long0;\n    if (Math.abs(rh) <= (0, $gyVUi.EPSLN)) {\n        lat = this.lat0;\n        p.x = lon;\n        p.y = lat;\n        return p;\n    }\n    lat = (0, $ljPJJ.default)(cosz * this.sin_p14 + p.y * sinz * this.cos_p14 / rh);\n    con = Math.abs(this.lat0) - (0, $gyVUi.HALF_PI);\n    if (Math.abs(con) <= (0, $gyVUi.EPSLN)) {\n        if (this.lat0 >= 0) lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x, -p.y));\n        else lon = (0, $a9oRf.default)(this.long0 - Math.atan2(-p.x, p.y));\n        p.x = lon;\n        p.y = lat;\n        return p;\n    }\n    lon = (0, $a9oRf.default)(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n    p.x = lon;\n    p.y = lat;\n    return p;\n}\nvar $24629f153ebf2c1f$export$e4b2ac9215619f8d = [\n    'ortho'\n];\nvar $24629f153ebf2c1f$export$2e2bcd8739ae039 = {\n    init: $24629f153ebf2c1f$export$2cd8252107eb640b,\n    forward: $24629f153ebf2c1f$export$174bb771924e7eb1,\n    inverse: $24629f153ebf2c1f$export$70ae2c07e401031b,\n    names: $24629f153ebf2c1f$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"2XUb4\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $228cab2632c5bcf7$export$2e2bcd8739ae039);\n// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n/* constants */ var $228cab2632c5bcf7$var$FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\nvar $228cab2632c5bcf7$var$AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\nfunction $228cab2632c5bcf7$export$2cd8252107eb640b() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.lat0 = this.lat0 || 0;\n    this.long0 = this.long0 || 0;\n    this.lat_ts = this.lat_ts || 0;\n    this.title = this.title || 'Quadrilateralized Spherical Cube';\n    /* Determine the cube face from the center of projection. */ if (this.lat0 >= (0, $gyVUi.HALF_PI) - (0, $gyVUi.FORTPI) / 2.0) this.face = $228cab2632c5bcf7$var$FACE_ENUM.TOP;\n    else if (this.lat0 <= -((0, $gyVUi.HALF_PI) - (0, $gyVUi.FORTPI) / 2.0)) this.face = $228cab2632c5bcf7$var$FACE_ENUM.BOTTOM;\n    else if (Math.abs(this.long0) <= (0, $gyVUi.FORTPI)) this.face = $228cab2632c5bcf7$var$FACE_ENUM.FRONT;\n    else if (Math.abs(this.long0) <= (0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI)) this.face = this.long0 > 0.0 ? $228cab2632c5bcf7$var$FACE_ENUM.RIGHT : $228cab2632c5bcf7$var$FACE_ENUM.LEFT;\n    else this.face = $228cab2632c5bcf7$var$FACE_ENUM.BACK;\n    /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */ if (this.es !== 0) {\n        this.one_minus_f = 1 - (this.a - this.b) / this.a;\n        this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n    }\n}\nfunction $228cab2632c5bcf7$export$174bb771924e7eb1(p) {\n    var xy = {\n        x: 0,\n        y: 0\n    };\n    var lat, lon;\n    var theta, phi;\n    var t, mu;\n    /* nu; */ var area = {\n        value: 0\n    };\n    // move lon according to projection's lon\n    p.x -= this.long0;\n    /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */ if (this.es !== 0) lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n    else lat = p.y;\n    /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */ lon = p.x; // lon = lp.lam;\n    if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.TOP) {\n        phi = (0, $gyVUi.HALF_PI) - lat;\n        if (lon >= (0, $gyVUi.FORTPI) && lon <= (0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI)) {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_0;\n            theta = lon - (0, $gyVUi.HALF_PI);\n        } else if (lon > (0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI) || lon <= -((0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI))) {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_1;\n            theta = lon > 0.0 ? lon - (0, $gyVUi.SPI) : lon + (0, $gyVUi.SPI);\n        } else if (lon > -((0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI)) && lon <= -(0, $gyVUi.FORTPI)) {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_2;\n            theta = lon + (0, $gyVUi.HALF_PI);\n        } else {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_3;\n            theta = lon;\n        }\n    } else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.BOTTOM) {\n        phi = (0, $gyVUi.HALF_PI) + lat;\n        if (lon >= (0, $gyVUi.FORTPI) && lon <= (0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI)) {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_0;\n            theta = -lon + (0, $gyVUi.HALF_PI);\n        } else if (lon < (0, $gyVUi.FORTPI) && lon >= -(0, $gyVUi.FORTPI)) {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_1;\n            theta = -lon;\n        } else if (lon < -(0, $gyVUi.FORTPI) && lon >= -((0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI))) {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_2;\n            theta = -lon - (0, $gyVUi.HALF_PI);\n        } else {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_3;\n            theta = lon > 0.0 ? -lon + (0, $gyVUi.SPI) : -lon - (0, $gyVUi.SPI);\n        }\n    } else {\n        var q, r, s;\n        var sinlat, coslat;\n        var sinlon, coslon;\n        if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.RIGHT) lon = $228cab2632c5bcf7$var$qsc_shift_lon_origin(lon, +(0, $gyVUi.HALF_PI));\n        else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.BACK) lon = $228cab2632c5bcf7$var$qsc_shift_lon_origin(lon, +(0, $gyVUi.SPI));\n        else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.LEFT) lon = $228cab2632c5bcf7$var$qsc_shift_lon_origin(lon, -(0, $gyVUi.HALF_PI));\n        sinlat = Math.sin(lat);\n        coslat = Math.cos(lat);\n        sinlon = Math.sin(lon);\n        coslon = Math.cos(lon);\n        q = coslat * coslon;\n        r = coslat * sinlon;\n        s = sinlat;\n        if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.FRONT) {\n            phi = Math.acos(q);\n            theta = $228cab2632c5bcf7$var$qsc_fwd_equat_face_theta(phi, s, r, area);\n        } else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.RIGHT) {\n            phi = Math.acos(r);\n            theta = $228cab2632c5bcf7$var$qsc_fwd_equat_face_theta(phi, s, -q, area);\n        } else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.BACK) {\n            phi = Math.acos(-q);\n            theta = $228cab2632c5bcf7$var$qsc_fwd_equat_face_theta(phi, s, -r, area);\n        } else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.LEFT) {\n            phi = Math.acos(-r);\n            theta = $228cab2632c5bcf7$var$qsc_fwd_equat_face_theta(phi, s, q, area);\n        } else {\n            /* Impossible */ phi = theta = 0;\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_0;\n        }\n    }\n    /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */ mu = Math.atan(12 / (0, $gyVUi.SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos((0, $gyVUi.FORTPI))) - (0, $gyVUi.HALF_PI)));\n    t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n    /* Apply the result to the real area. */ if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_1) mu += (0, $gyVUi.HALF_PI);\n    else if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_2) mu += (0, $gyVUi.SPI);\n    else if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_3) mu += 1.5 * (0, $gyVUi.SPI);\n    /* Now compute x, y from mu and nu */ xy.x = t * Math.cos(mu);\n    xy.y = t * Math.sin(mu);\n    xy.x = xy.x * this.a + this.x0;\n    xy.y = xy.y * this.a + this.y0;\n    p.x = xy.x;\n    p.y = xy.y;\n    return p;\n}\nfunction $228cab2632c5bcf7$export$70ae2c07e401031b(p) {\n    var lp = {\n        lam: 0,\n        phi: 0\n    };\n    var mu, nu, cosmu, tannu;\n    var tantheta, theta, cosphi, phi;\n    var t;\n    var area = {\n        value: 0\n    };\n    /* de-offset */ p.x = (p.x - this.x0) / this.a;\n    p.y = (p.y - this.y0) / this.a;\n    /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */ nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n    mu = Math.atan2(p.y, p.x);\n    if (p.x >= 0.0 && p.x >= Math.abs(p.y)) area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_0;\n    else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n        area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_1;\n        mu -= (0, $gyVUi.HALF_PI);\n    } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n        area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_2;\n        mu = mu < 0.0 ? mu + (0, $gyVUi.SPI) : mu - (0, $gyVUi.SPI);\n    } else {\n        area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_3;\n        mu += (0, $gyVUi.HALF_PI);\n    }\n    /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */ t = (0, $gyVUi.SPI) / 12 * Math.tan(mu);\n    tantheta = Math.sin(t) / (Math.cos(t) - 1 / Math.sqrt(2));\n    theta = Math.atan(tantheta);\n    cosmu = Math.cos(mu);\n    tannu = Math.tan(nu);\n    cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n    if (cosphi < -1) cosphi = -1;\n    else if (cosphi > 1) cosphi = 1;\n    /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */ if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.TOP) {\n        phi = Math.acos(cosphi);\n        lp.phi = (0, $gyVUi.HALF_PI) - phi;\n        if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_0) lp.lam = theta + (0, $gyVUi.HALF_PI);\n        else if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_1) lp.lam = theta < 0.0 ? theta + (0, $gyVUi.SPI) : theta - (0, $gyVUi.SPI);\n        else if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_2) lp.lam = theta - (0, $gyVUi.HALF_PI);\n        else lp.lam = theta;\n    } else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.BOTTOM) {\n        phi = Math.acos(cosphi);\n        lp.phi = phi - (0, $gyVUi.HALF_PI);\n        if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_0) lp.lam = -theta + (0, $gyVUi.HALF_PI);\n        else if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_1) lp.lam = -theta;\n        else if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_2) lp.lam = -theta - (0, $gyVUi.HALF_PI);\n        else lp.lam = theta < 0.0 ? -theta - (0, $gyVUi.SPI) : -theta + (0, $gyVUi.SPI);\n    } else {\n        /* Compute phi and lam via cartesian unit sphere coordinates. */ var q, r, s;\n        q = cosphi;\n        t = q * q;\n        if (t >= 1) s = 0;\n        else s = Math.sqrt(1 - t) * Math.sin(theta);\n        t += s * s;\n        if (t >= 1) r = 0;\n        else r = Math.sqrt(1 - t);\n        /* Rotate q,r,s into the correct area. */ if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_1) {\n            t = r;\n            r = -s;\n            s = t;\n        } else if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_2) {\n            r = -r;\n            s = -s;\n        } else if (area.value === $228cab2632c5bcf7$var$AREA_ENUM.AREA_3) {\n            t = r;\n            r = s;\n            s = -t;\n        }\n        /* Rotate q,r,s into the correct cube face. */ if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.RIGHT) {\n            t = q;\n            q = -r;\n            r = t;\n        } else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.BACK) {\n            q = -q;\n            r = -r;\n        } else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.LEFT) {\n            t = q;\n            q = r;\n            r = -t;\n        }\n        /* Now compute phi and lam from the unit sphere coordinates. */ lp.phi = Math.acos(-s) - (0, $gyVUi.HALF_PI);\n        lp.lam = Math.atan2(r, q);\n        if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.RIGHT) lp.lam = $228cab2632c5bcf7$var$qsc_shift_lon_origin(lp.lam, -(0, $gyVUi.HALF_PI));\n        else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.BACK) lp.lam = $228cab2632c5bcf7$var$qsc_shift_lon_origin(lp.lam, -(0, $gyVUi.SPI));\n        else if (this.face === $228cab2632c5bcf7$var$FACE_ENUM.LEFT) lp.lam = $228cab2632c5bcf7$var$qsc_shift_lon_origin(lp.lam, +(0, $gyVUi.HALF_PI));\n    }\n    /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */ if (this.es !== 0) {\n        var invert_sign;\n        var tanphi, xa;\n        invert_sign = lp.phi < 0 ? 1 : 0;\n        tanphi = Math.tan(lp.phi);\n        xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n        lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n        if (invert_sign) lp.phi = -lp.phi;\n    }\n    lp.lam += this.long0;\n    p.x = lp.lam;\n    p.y = lp.phi;\n    return p;\n}\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */ function $228cab2632c5bcf7$var$qsc_fwd_equat_face_theta(phi, y, x, area) {\n    var theta;\n    if (phi < (0, $gyVUi.EPSLN)) {\n        area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_0;\n        theta = 0.0;\n    } else {\n        theta = Math.atan2(y, x);\n        if (Math.abs(theta) <= (0, $gyVUi.FORTPI)) area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_0;\n        else if (theta > (0, $gyVUi.FORTPI) && theta <= (0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI)) {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_1;\n            theta -= (0, $gyVUi.HALF_PI);\n        } else if (theta > (0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI) || theta <= -((0, $gyVUi.HALF_PI) + (0, $gyVUi.FORTPI))) {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_2;\n            theta = theta >= 0.0 ? theta - (0, $gyVUi.SPI) : theta + (0, $gyVUi.SPI);\n        } else {\n            area.value = $228cab2632c5bcf7$var$AREA_ENUM.AREA_3;\n            theta += (0, $gyVUi.HALF_PI);\n        }\n    }\n    return theta;\n}\n/* Helper function: shift the longitude. */ function $228cab2632c5bcf7$var$qsc_shift_lon_origin(lon, offset) {\n    var slon = lon + offset;\n    if (slon < -(0, $gyVUi.SPI)) slon += (0, $gyVUi.TWO_PI);\n    else if (slon > +(0, $gyVUi.SPI)) slon -= (0, $gyVUi.TWO_PI);\n    return slon;\n}\nvar $228cab2632c5bcf7$export$e4b2ac9215619f8d = [\n    'Quadrilateralized Spherical Cube',\n    'Quadrilateralized_Spherical_Cube',\n    'qsc'\n];\nvar $228cab2632c5bcf7$export$2e2bcd8739ae039 = {\n    init: $228cab2632c5bcf7$export$2cd8252107eb640b,\n    forward: $228cab2632c5bcf7$export$174bb771924e7eb1,\n    inverse: $228cab2632c5bcf7$export$70ae2c07e401031b,\n    names: $228cab2632c5bcf7$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"byZja\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $86b26d30d3579075$export$2e2bcd8739ae039);\n// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\nvar $86b26d30d3579075$var$COEFS_X = [\n    [\n        1.0000,\n        2.2199e-17,\n        -0.0000715515,\n        3.1103e-06\n    ],\n    [\n        0.9986,\n        -0.000482243,\n        -0.000024897,\n        -0.0000013309\n    ],\n    [\n        0.9954,\n        -0.00083103,\n        -0.0000448605,\n        -0.000000986701\n    ],\n    [\n        0.9900,\n        -0.00135364,\n        -0.000059661,\n        3.6777e-06\n    ],\n    [\n        0.9822,\n        -0.00167442,\n        -0.00000449547,\n        -0.00000572411\n    ],\n    [\n        0.9730,\n        -0.00214868,\n        -0.0000903571,\n        1.8736e-08\n    ],\n    [\n        0.9600,\n        -0.00305085,\n        -0.0000900761,\n        1.64917e-06\n    ],\n    [\n        0.9427,\n        -0.00382792,\n        -0.0000653386,\n        -0.0000026154\n    ],\n    [\n        0.9216,\n        -0.00467746,\n        -0.00010457,\n        4.81243e-06\n    ],\n    [\n        0.8962,\n        -0.00536223,\n        -0.0000323831,\n        -0.00000543432\n    ],\n    [\n        0.8679,\n        -0.00609363,\n        -0.000113898,\n        3.32484e-06\n    ],\n    [\n        0.8350,\n        -0.00698325,\n        -0.0000640253,\n        9.34959e-07\n    ],\n    [\n        0.7986,\n        -0.00755338,\n        -0.0000500009,\n        9.35324e-07\n    ],\n    [\n        0.7597,\n        -0.00798324,\n        -0.000035971,\n        -0.00000227626\n    ],\n    [\n        0.7186,\n        -0.00851367,\n        -0.0000701149,\n        -0.0000086303\n    ],\n    [\n        0.6732,\n        -0.00986209,\n        -0.000199569,\n        1.91974e-05\n    ],\n    [\n        0.6213,\n        -0.010418,\n        8.83923e-05,\n        6.24051e-06\n    ],\n    [\n        0.5722,\n        -0.00906601,\n        0.000182,\n        6.24051e-06\n    ],\n    [\n        0.5322,\n        -0.00677797,\n        0.000275608,\n        6.24051e-06\n    ]\n];\nvar $86b26d30d3579075$var$COEFS_Y = [\n    [\n        -0.00000000000000000520417,\n        0.0124,\n        1.21431e-18,\n        -0.0000000000845284\n    ],\n    [\n        0.0620,\n        0.0124,\n        -0.00000000126793,\n        4.22642e-10\n    ],\n    [\n        0.1240,\n        0.0124,\n        5.07171e-09,\n        -0.00000000160604\n    ],\n    [\n        0.1860,\n        0.0123999,\n        -0.0000000190189,\n        6.00152e-09\n    ],\n    [\n        0.2480,\n        0.0124002,\n        7.10039e-08,\n        -0.0000000224\n    ],\n    [\n        0.3100,\n        0.0123992,\n        -0.000000264997,\n        8.35986e-08\n    ],\n    [\n        0.3720,\n        0.0124029,\n        9.88983e-07,\n        -0.000000311994\n    ],\n    [\n        0.4340,\n        0.0123893,\n        -0.00000369093,\n        -0.000000435621\n    ],\n    [\n        0.4958,\n        0.0123198,\n        -0.0000102252,\n        -0.000000345523\n    ],\n    [\n        0.5571,\n        0.0121916,\n        -0.0000154081,\n        -0.000000582288\n    ],\n    [\n        0.6176,\n        0.0119938,\n        -0.0000241424,\n        -0.000000525327\n    ],\n    [\n        0.6769,\n        0.011713,\n        -0.0000320223,\n        -0.000000516405\n    ],\n    [\n        0.7346,\n        0.0113541,\n        -0.0000397684,\n        -0.000000609052\n    ],\n    [\n        0.7903,\n        0.0109107,\n        -0.0000489042,\n        -0.00000104739\n    ],\n    [\n        0.8435,\n        0.0103431,\n        -0.000064615,\n        -0.00000000140374\n    ],\n    [\n        0.8936,\n        0.00969686,\n        -0.000064636,\n        -0.000008547\n    ],\n    [\n        0.9394,\n        0.00840947,\n        -0.000192841,\n        -0.0000042106\n    ],\n    [\n        0.9761,\n        0.00616527,\n        -0.000256,\n        -0.0000042106\n    ],\n    [\n        1.0000,\n        0.00328947,\n        -0.000319159,\n        -0.0000042106\n    ]\n];\nvar $86b26d30d3579075$var$FXC = 0.8487;\nvar $86b26d30d3579075$var$FYC = 1.3523;\nvar $86b26d30d3579075$var$C1 = (0, $gyVUi.R2D) / 5; // rad to 5-degree interval\nvar $86b26d30d3579075$var$RC1 = 1 / $86b26d30d3579075$var$C1;\nvar $86b26d30d3579075$var$NODES = 18;\nvar $86b26d30d3579075$var$poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\nvar $86b26d30d3579075$var$poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\nfunction $86b26d30d3579075$var$newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for(; iters; --iters){\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) break;\n    }\n    return x;\n}\nfunction $86b26d30d3579075$export$2cd8252107eb640b() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || 'Robinson';\n}\nfunction $86b26d30d3579075$export$174bb771924e7eb1(ll) {\n    var lon = (0, $a9oRf.default)(ll.x - this.long0);\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * $86b26d30d3579075$var$C1);\n    if (i < 0) i = 0;\n    else if (i >= $86b26d30d3579075$var$NODES) i = $86b26d30d3579075$var$NODES - 1;\n    dphi = (0, $gyVUi.R2D) * (dphi - $86b26d30d3579075$var$RC1 * i);\n    var xy = {\n        x: $86b26d30d3579075$var$poly3_val($86b26d30d3579075$var$COEFS_X[i], dphi) * lon,\n        y: $86b26d30d3579075$var$poly3_val($86b26d30d3579075$var$COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) xy.y = -xy.y;\n    xy.x = xy.x * this.a * $86b26d30d3579075$var$FXC + this.x0;\n    xy.y = xy.y * this.a * $86b26d30d3579075$var$FYC + this.y0;\n    return xy;\n}\nfunction $86b26d30d3579075$export$70ae2c07e401031b(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * $86b26d30d3579075$var$FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * $86b26d30d3579075$var$FYC)\n    };\n    if (ll.y >= 1) {\n        ll.x /= $86b26d30d3579075$var$COEFS_X[$86b26d30d3579075$var$NODES][0];\n        ll.y = xy.y < 0 ? -(0, $gyVUi.HALF_PI) : (0, $gyVUi.HALF_PI);\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * $86b26d30d3579075$var$NODES);\n        if (i < 0) i = 0;\n        else if (i >= $86b26d30d3579075$var$NODES) i = $86b26d30d3579075$var$NODES - 1;\n        for(;;){\n            if ($86b26d30d3579075$var$COEFS_Y[i][0] > ll.y) --i;\n            else if ($86b26d30d3579075$var$COEFS_Y[i + 1][0] <= ll.y) ++i;\n            else break;\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = $86b26d30d3579075$var$COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / ($86b26d30d3579075$var$COEFS_Y[i + 1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = $86b26d30d3579075$var$newton_rapshon(function(x) {\n            return ($86b26d30d3579075$var$poly3_val(coefs, x) - ll.y) / $86b26d30d3579075$var$poly3_der(coefs, x);\n        }, t, (0, $gyVUi.EPSLN), 100);\n        ll.x /= $86b26d30d3579075$var$poly3_val($86b26d30d3579075$var$COEFS_X[i], t);\n        ll.y = (5 * i + t) * (0, $gyVUi.D2R);\n        if (xy.y < 0) ll.y = -ll.y;\n    }\n    ll.x = (0, $a9oRf.default)(ll.x + this.long0);\n    return ll;\n}\nvar $86b26d30d3579075$export$e4b2ac9215619f8d = [\n    'Robinson',\n    'robin'\n];\nvar $86b26d30d3579075$export$2e2bcd8739ae039 = {\n    init: $86b26d30d3579075$export$2cd8252107eb640b,\n    forward: $86b26d30d3579075$export$174bb771924e7eb1,\n    inverse: $86b26d30d3579075$export$70ae2c07e401031b,\n    names: $86b26d30d3579075$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"Fj8jS\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $07c2abe70612fbc5$export$2e2bcd8739ae039);\n\nvar $4YPx7 = parcelRequire(\"4YPx7\");\nfunction $07c2abe70612fbc5$export$2cd8252107eb640b() {\n    this.name = 'geocent';\n}\nfunction $07c2abe70612fbc5$export$174bb771924e7eb1(p) {\n    var point = (0, $4YPx7.geodeticToGeocentric)(p, this.es, this.a);\n    return point;\n}\nfunction $07c2abe70612fbc5$export$70ae2c07e401031b(p) {\n    var point = (0, $4YPx7.geocentricToGeodetic)(p, this.es, this.a, this.b);\n    return point;\n}\nvar $07c2abe70612fbc5$export$e4b2ac9215619f8d = [\n    'Geocentric',\n    'geocentric',\n    'geocent',\n    'Geocent'\n];\nvar $07c2abe70612fbc5$export$2e2bcd8739ae039 = {\n    init: $07c2abe70612fbc5$export$2cd8252107eb640b,\n    forward: $07c2abe70612fbc5$export$174bb771924e7eb1,\n    inverse: $07c2abe70612fbc5$export$70ae2c07e401031b,\n    names: $07c2abe70612fbc5$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"eJp9e\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $ab98c67e9f567a4b$export$2e2bcd8739ae039);\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\n\nvar $jU5gu = parcelRequire(\"jU5gu\");\nvar $ab98c67e9f567a4b$var$mode = {\n    N_POLE: 0,\n    S_POLE: 1,\n    EQUIT: 2,\n    OBLIQ: 3\n};\nvar $ab98c67e9f567a4b$var$params = {\n    h: {\n        def: 100000,\n        num: true\n    },\n    azi: {\n        def: 0,\n        num: true,\n        degrees: true\n    },\n    tilt: {\n        def: 0,\n        num: true,\n        degrees: true\n    },\n    long0: {\n        def: 0,\n        num: true\n    },\n    lat0: {\n        def: 0,\n        num: true\n    } // default is Equator, conversion to rad is automatic\n};\nfunction $ab98c67e9f567a4b$export$2cd8252107eb640b() {\n    Object.keys($ab98c67e9f567a4b$var$params).forEach((function(p) {\n        if (typeof this[p] === 'undefined') this[p] = $ab98c67e9f567a4b$var$params[p].def;\n        else if ($ab98c67e9f567a4b$var$params[p].num && isNaN(this[p])) throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n        else if ($ab98c67e9f567a4b$var$params[p].num) this[p] = parseFloat(this[p]);\n        if ($ab98c67e9f567a4b$var$params[p].degrees) this[p] = this[p] * (0, $gyVUi.D2R);\n    }).bind(this));\n    if (Math.abs(Math.abs(this.lat0) - (0, $gyVUi.HALF_PI)) < (0, $gyVUi.EPSLN)) this.mode = this.lat0 < 0 ? $ab98c67e9f567a4b$var$mode.S_POLE : $ab98c67e9f567a4b$var$mode.N_POLE;\n    else if (Math.abs(this.lat0) < (0, $gyVUi.EPSLN)) this.mode = $ab98c67e9f567a4b$var$mode.EQUIT;\n    else {\n        this.mode = $ab98c67e9f567a4b$var$mode.OBLIQ;\n        this.sinph0 = Math.sin(this.lat0);\n        this.cosph0 = Math.cos(this.lat0);\n    }\n    this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n    if (this.pn1 <= 0 || this.pn1 > 1e10) throw new Error('Invalid height');\n    this.p = 1 + this.pn1;\n    this.rp = 1 / this.p;\n    this.h1 = 1 / this.pn1;\n    this.pfact = (this.p + 1) * this.h1;\n    this.es = 0;\n    var omega = this.tilt;\n    var gamma = this.azi;\n    this.cg = Math.cos(gamma);\n    this.sg = Math.sin(gamma);\n    this.cw = Math.cos(omega);\n    this.sw = Math.sin(omega);\n}\nfunction $ab98c67e9f567a4b$export$174bb771924e7eb1(p) {\n    p.x -= this.long0;\n    var sinphi = Math.sin(p.y);\n    var cosphi = Math.cos(p.y);\n    var coslam = Math.cos(p.x);\n    var x, y;\n    switch(this.mode){\n        case $ab98c67e9f567a4b$var$mode.OBLIQ:\n            y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n            break;\n        case $ab98c67e9f567a4b$var$mode.EQUIT:\n            y = cosphi * coslam;\n            break;\n        case $ab98c67e9f567a4b$var$mode.S_POLE:\n            y = -sinphi;\n            break;\n        case $ab98c67e9f567a4b$var$mode.N_POLE:\n            y = sinphi;\n            break;\n    }\n    y = this.pn1 / (this.p - y);\n    x = y * cosphi * Math.sin(p.x);\n    switch(this.mode){\n        case $ab98c67e9f567a4b$var$mode.OBLIQ:\n            y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n            break;\n        case $ab98c67e9f567a4b$var$mode.EQUIT:\n            y *= sinphi;\n            break;\n        case $ab98c67e9f567a4b$var$mode.N_POLE:\n            y *= -(cosphi * coslam);\n            break;\n        case $ab98c67e9f567a4b$var$mode.S_POLE:\n            y *= cosphi * coslam;\n            break;\n    }\n    // Tilt\n    var yt, ba;\n    yt = y * this.cg + x * this.sg;\n    ba = 1 / (yt * this.sw * this.h1 + this.cw);\n    x = (x * this.cg - y * this.sg) * this.cw * ba;\n    y = yt * ba;\n    p.x = x * this.a;\n    p.y = y * this.a;\n    return p;\n}\nfunction $ab98c67e9f567a4b$export$70ae2c07e401031b(p) {\n    p.x /= this.a;\n    p.y /= this.a;\n    var r = {\n        x: p.x,\n        y: p.y\n    };\n    // Un-Tilt\n    var bm, bq, yt;\n    yt = 1 / (this.pn1 - p.y * this.sw);\n    bm = this.pn1 * p.x * yt;\n    bq = this.pn1 * p.y * this.cw * yt;\n    p.x = bm * this.cg + bq * this.sg;\n    p.y = bq * this.cg - bm * this.sg;\n    var rh = (0, $jU5gu.default)(p.x, p.y);\n    if (Math.abs(rh) < (0, $gyVUi.EPSLN)) {\n        r.x = 0;\n        r.y = p.y;\n    } else {\n        var cosz, sinz;\n        sinz = 1 - rh * rh * this.pfact;\n        sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n        cosz = Math.sqrt(1 - sinz * sinz);\n        switch(this.mode){\n            case $ab98c67e9f567a4b$var$mode.OBLIQ:\n                r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n                p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n                p.x *= sinz * this.cosph0;\n                break;\n            case $ab98c67e9f567a4b$var$mode.EQUIT:\n                r.y = Math.asin(p.y * sinz / rh);\n                p.y = cosz * rh;\n                p.x *= sinz;\n                break;\n            case $ab98c67e9f567a4b$var$mode.N_POLE:\n                r.y = Math.asin(cosz);\n                p.y = -p.y;\n                break;\n            case $ab98c67e9f567a4b$var$mode.S_POLE:\n                r.y = -Math.asin(cosz);\n                break;\n        }\n        r.x = Math.atan2(p.x, p.y);\n    }\n    p.x = r.x + this.long0;\n    p.y = r.y;\n    return p;\n}\nvar $ab98c67e9f567a4b$export$e4b2ac9215619f8d = [\n    'Tilted_Perspective',\n    'tpers'\n];\nvar $ab98c67e9f567a4b$export$2e2bcd8739ae039 = {\n    init: $ab98c67e9f567a4b$export$2cd8252107eb640b,\n    forward: $ab98c67e9f567a4b$export$174bb771924e7eb1,\n    inverse: $ab98c67e9f567a4b$export$70ae2c07e401031b,\n    names: $ab98c67e9f567a4b$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"jJ6PL\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $e5c7855edcbcda04$export$2e2bcd8739ae039);\n\nvar $jU5gu = parcelRequire(\"jU5gu\");\nfunction $e5c7855edcbcda04$export$2cd8252107eb640b() {\n    this.flip_axis = this.sweep === 'x' ? 1 : 0;\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) throw new Error();\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n        this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n    }\n    if (!this.title) this.title = 'Geostationary Satellite View';\n}\nfunction $e5c7855edcbcda04$var$forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / (0, $jU5gu.default)(this.radius_p * Math.cos(lat), Math.sin(lat));\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n        if ((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2 < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / (0, $jU5gu.default)(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / (0, $jU5gu.default)(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / (0, $jU5gu.default)(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / (0, $jU5gu.default)(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\nfunction $e5c7855edcbcda04$var$inverse(p) {\n    var v_x = -1;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * (0, $jU5gu.default)(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * (0, $jU5gu.default)(1.0, v_y);\n        }\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = b * b - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = b * b - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\nvar $e5c7855edcbcda04$export$e4b2ac9215619f8d = [\n    'Geostationary Satellite View',\n    'Geostationary_Satellite',\n    'geos'\n];\nvar $e5c7855edcbcda04$export$2e2bcd8739ae039 = {\n    init: $e5c7855edcbcda04$export$2cd8252107eb640b,\n    forward: $e5c7855edcbcda04$var$forward,\n    inverse: $e5c7855edcbcda04$var$inverse,\n    names: $e5c7855edcbcda04$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"cbANR\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $8df30f7b6f96e4d8$export$2e2bcd8739ae039);\n/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */ \nvar $a9oRf = parcelRequire(\"a9oRf\");\nvar $8df30f7b6f96e4d8$var$A1 = 1.340264, $8df30f7b6f96e4d8$var$A2 = -0.081106, $8df30f7b6f96e4d8$var$A3 = 0.000893, $8df30f7b6f96e4d8$var$A4 = 0.003796, $8df30f7b6f96e4d8$var$M = Math.sqrt(3) / 2.0;\nfunction $8df30f7b6f96e4d8$export$2cd8252107eb640b() {\n    this.es = 0;\n    this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\nfunction $8df30f7b6f96e4d8$export$174bb771924e7eb1(p) {\n    var lam = (0, $a9oRf.default)(p.x - this.long0);\n    var phi = p.y;\n    var paramLat = Math.asin($8df30f7b6f96e4d8$var$M * Math.sin(phi)), paramLatSq = paramLat * paramLat, paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    p.x = lam * Math.cos(paramLat) / ($8df30f7b6f96e4d8$var$M * ($8df30f7b6f96e4d8$var$A1 + 3 * $8df30f7b6f96e4d8$var$A2 * paramLatSq + paramLatPow6 * (7 * $8df30f7b6f96e4d8$var$A3 + 9 * $8df30f7b6f96e4d8$var$A4 * paramLatSq)));\n    p.y = paramLat * ($8df30f7b6f96e4d8$var$A1 + $8df30f7b6f96e4d8$var$A2 * paramLatSq + paramLatPow6 * ($8df30f7b6f96e4d8$var$A3 + $8df30f7b6f96e4d8$var$A4 * paramLatSq));\n    p.x = this.a * p.x + this.x0;\n    p.y = this.a * p.y + this.y0;\n    return p;\n}\nfunction $8df30f7b6f96e4d8$export$70ae2c07e401031b(p) {\n    p.x = (p.x - this.x0) / this.a;\n    p.y = (p.y - this.y0) / this.a;\n    var EPS = 1e-9, NITER = 12, paramLat = p.y, paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n    for(i = 0; i < NITER; ++i){\n        paramLatSq = paramLat * paramLat;\n        paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n        fy = paramLat * ($8df30f7b6f96e4d8$var$A1 + $8df30f7b6f96e4d8$var$A2 * paramLatSq + paramLatPow6 * ($8df30f7b6f96e4d8$var$A3 + $8df30f7b6f96e4d8$var$A4 * paramLatSq)) - p.y;\n        fpy = $8df30f7b6f96e4d8$var$A1 + 3 * $8df30f7b6f96e4d8$var$A2 * paramLatSq + paramLatPow6 * (7 * $8df30f7b6f96e4d8$var$A3 + 9 * $8df30f7b6f96e4d8$var$A4 * paramLatSq);\n        paramLat -= dlat = fy / fpy;\n        if (Math.abs(dlat) < EPS) break;\n    }\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    p.x = $8df30f7b6f96e4d8$var$M * p.x * ($8df30f7b6f96e4d8$var$A1 + 3 * $8df30f7b6f96e4d8$var$A2 * paramLatSq + paramLatPow6 * (7 * $8df30f7b6f96e4d8$var$A3 + 9 * $8df30f7b6f96e4d8$var$A4 * paramLatSq)) / Math.cos(paramLat);\n    p.y = Math.asin(Math.sin(paramLat) / $8df30f7b6f96e4d8$var$M);\n    p.x = (0, $a9oRf.default)(p.x + this.long0);\n    return p;\n}\nvar $8df30f7b6f96e4d8$export$e4b2ac9215619f8d = [\n    'eqearth',\n    'Equal Earth',\n    'Equal_Earth'\n];\nvar $8df30f7b6f96e4d8$export$2e2bcd8739ae039 = {\n    init: $8df30f7b6f96e4d8$export$2cd8252107eb640b,\n    forward: $8df30f7b6f96e4d8$export$174bb771924e7eb1,\n    inverse: $8df30f7b6f96e4d8$export$70ae2c07e401031b,\n    names: $8df30f7b6f96e4d8$export$e4b2ac9215619f8d\n};\n\n});\n\nparcelRegister(\"gtZfx\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $bffedda91368999e$export$2e2bcd8739ae039);\n\nvar $aDUFA = parcelRequire(\"aDUFA\");\n\nvar $a9oRf = parcelRequire(\"a9oRf\");\n\nvar $jU5gu = parcelRequire(\"jU5gu\");\n\nvar $gqKpL = parcelRequire(\"gqKpL\");\n\nvar $jQUK6 = parcelRequire(\"jQUK6\");\n\nvar $hpUQm = parcelRequire(\"hpUQm\");\n\nvar $gyVUi = parcelRequire(\"gyVUi\");\nvar $bffedda91368999e$var$EPS10 = 1e-10;\nfunction $bffedda91368999e$export$2cd8252107eb640b() {\n    var c;\n    this.phi1 = this.lat1;\n    if (Math.abs(this.phi1) < $bffedda91368999e$var$EPS10) throw new Error();\n    if (this.es) {\n        this.en = (0, $gqKpL.default)(this.es);\n        this.m1 = (0, $hpUQm.default)(this.phi1, this.am1 = Math.sin(this.phi1), c = Math.cos(this.phi1), this.en);\n        this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n        this.inverse = $bffedda91368999e$var$e_inv;\n        this.forward = $bffedda91368999e$var$e_fwd;\n    } else {\n        if (Math.abs(this.phi1) + $bffedda91368999e$var$EPS10 >= (0, $gyVUi.HALF_PI)) this.cphi1 = 0;\n        else this.cphi1 = 1 / Math.tan(this.phi1);\n        this.inverse = $bffedda91368999e$var$s_inv;\n        this.forward = $bffedda91368999e$var$s_fwd;\n    }\n}\nfunction $bffedda91368999e$var$e_fwd(p) {\n    var lam = (0, $a9oRf.default)(p.x - (this.long0 || 0));\n    var phi = p.y;\n    var rh, E, c;\n    rh = this.am1 + this.m1 - (0, $hpUQm.default)(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n    E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n    p.x = rh * Math.sin(E);\n    p.y = this.am1 - rh * Math.cos(E);\n    p.x = this.a * p.x + (this.x0 || 0);\n    p.y = this.a * p.y + (this.y0 || 0);\n    return p;\n}\nfunction $bffedda91368999e$var$e_inv(p) {\n    p.x = (p.x - (this.x0 || 0)) / this.a;\n    p.y = (p.y - (this.y0 || 0)) / this.a;\n    var s, rh, lam, phi;\n    rh = (0, $jU5gu.default)(p.x, p.y = this.am1 - p.y);\n    phi = (0, $jQUK6.default)(this.am1 + this.m1 - rh, this.es, this.en);\n    if ((s = Math.abs(phi)) < (0, $gyVUi.HALF_PI)) {\n        s = Math.sin(phi);\n        lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n    } else if (Math.abs(s - (0, $gyVUi.HALF_PI)) <= $bffedda91368999e$var$EPS10) lam = 0;\n    else throw new Error();\n    p.x = (0, $a9oRf.default)(lam + (this.long0 || 0));\n    p.y = (0, $aDUFA.default)(phi);\n    return p;\n}\nfunction $bffedda91368999e$var$s_fwd(p) {\n    var lam = (0, $a9oRf.default)(p.x - (this.long0 || 0));\n    var phi = p.y;\n    var E, rh;\n    rh = this.cphi1 + this.phi1 - phi;\n    if (Math.abs(rh) > $bffedda91368999e$var$EPS10) {\n        p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n        p.y = this.cphi1 - rh * Math.cos(E);\n    } else p.x = p.y = 0;\n    p.x = this.a * p.x + (this.x0 || 0);\n    p.y = this.a * p.y + (this.y0 || 0);\n    return p;\n}\nfunction $bffedda91368999e$var$s_inv(p) {\n    p.x = (p.x - (this.x0 || 0)) / this.a;\n    p.y = (p.y - (this.y0 || 0)) / this.a;\n    var lam, phi;\n    var rh = (0, $jU5gu.default)(p.x, p.y = this.cphi1 - p.y);\n    phi = this.cphi1 + this.phi1 - rh;\n    if (Math.abs(phi) > (0, $gyVUi.HALF_PI)) throw new Error();\n    if (Math.abs(Math.abs(phi) - (0, $gyVUi.HALF_PI)) <= $bffedda91368999e$var$EPS10) lam = 0;\n    else lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n    p.x = (0, $a9oRf.default)(lam + (this.long0 || 0));\n    p.y = (0, $aDUFA.default)(phi);\n    return p;\n}\nvar $bffedda91368999e$export$e4b2ac9215619f8d = [\n    'bonne',\n    'Bonne (Werner lat_1=90)'\n];\nvar $bffedda91368999e$export$2e2bcd8739ae039 = {\n    init: $bffedda91368999e$export$2cd8252107eb640b,\n    names: $bffedda91368999e$export$e4b2ac9215619f8d\n};\n\n});\n\n\n\n\n\n//# sourceMappingURL=customProj.bede341a.js.map\n","\nimport {register as olProj4Register} from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport {get as getProjection} from 'ol/proj.js';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\n\nolProj4Register(proj4);\ngetProjection('EPSG:21781').setExtent(epsg21781extent);\n\n","/**\n * @module ol/proj/proj4\n */\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n} from '../proj.js';\nimport Projection from './Projection.js';\nimport {get as getCachedProjection} from './projections.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!getCachedProjection(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = getCachedProjection(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = getCachedProjection(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return getCachedProjection(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return getCachedProjection(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","import proj4 from './core';\nimport Proj from './Proj';\nimport Point from './Point';\nimport common from './common/toPoint';\nimport defs from './defs';\nimport nadgrid from './nadgrid';\nimport transform from './transform';\nimport mgrs from 'mgrs';\nimport includedProjections from '../projs';\n\nproj4.defaultDatum = 'WGS84'; // default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || { x: NaN, y: NaN };\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from './nadgrid';\n\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if (typeof json !== 'object') {\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if (!ourProj) {\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code) {\n  return typeof code === 'string';\n}\nfunction testDef(code) {\n  return code in defs;\n}\nfunction testWKT(code) {\n  return (code.indexOf('+') !== 0 && code.indexOf('[') !== -1) || (typeof code === 'object' && !('srsCode' in code));\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code) {\n  return code[0] === '+';\n}\nfunction parse(code) {\n  if (testObj(code)) {\n    // check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else if (!code.projName) {\n    return wkt(code);\n  } else {\n    return code;\n  }\n}\n\nexport default parse;\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /* global console */\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      } else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        } else {\n          defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;\n","export default function (defs) {\n  defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n  defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n  defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n    defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function (defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v) * D2R;\n    },\n    lonc: function (v) {\n      self.longc = v * D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r: function (v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(',').map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function (v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = 'ewnsud';\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n  if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport { exports as default };\n\nexports.greenwich = 0.0; // \"0dE\",\nexports.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; // \"17d40'W\",\nexports.brussels = 4.367975; // \"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; // \"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n","export default {\n  mm: { to_meter: 0.001 },\n  cm: { to_meter: 0.01 },\n  ft: { to_meter: 0.3048 },\n  'us-ft': { to_meter: 1200 / 3937 },\n  fath: { to_meter: 1.8288 },\n  kmi: { to_meter: 1852 },\n  'us-ch': { to_meter: 20.1168402336805 },\n  'us-mi': { to_meter: 1609.34721869444 },\n  km: { to_meter: 1000 },\n  'ind-ft': { to_meter: 0.30479841 },\n  'ind-yd': { to_meter: 0.91439523 },\n  mi: { to_meter: 1609.344 },\n  yd: { to_meter: 0.9144 },\n  ch: { to_meter: 20.1168 },\n  link: { to_meter: 0.201168 },\n  dm: { to_meter: 0.1 },\n  in: { to_meter: 0.0254 },\n  'ind-ch': { to_meter: 20.11669506 },\n  'us-in': { to_meter: 0.025400050800101 },\n  'us-yd': { to_meter: 0.914401828803658 }\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import { buildPROJJSON } from './buildPROJJSON.js';\nimport { detectWKTVersion } from './detectWKTVersion.js';\nimport parser from './parser.js';\nimport {sExpr} from './process.js';\nimport { transformPROJJSON } from './transformPROJJSON.js';\nimport { applyProjectionDefaults, d2r } from './util.js';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n  if (wkt.rectified_grid_angle) {\n    wkt.rectified_grid_angle = d2r(wkt.rectified_grid_angle);\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  applyProjectionDefaults(wkt);\n}\nexport default function(wkt) {\n  if (typeof wkt === 'object') {\n    return transformPROJJSON(wkt);\n  }\n  const version = detectWKTVersion(wkt);\n  var lisp = parser(wkt);\n  if (version === 'WKT2') {\n    const projjson = buildPROJJSON(lisp);\n    return transformPROJJSON(projjson);\n  }\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","import PROJJSONBuilder2015 from './PROJJSONBuilder2015.js';\nimport PROJJSONBuilder2019 from './PROJJSONBuilder2019.js';\n\n/**\n * Detects the WKT2 version based on the structure of the WKT.\n * @param {Array} root The root WKT array node.\n * @returns {string} The detected version (\"2015\" or \"2019\").\n */\nfunction detectWKT2Version(root) {\n  // Check for WKT2-2019-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'USAGE')) {\n    return '2019'; // `USAGE` is specific to WKT2-2019\n  }\n\n  // Check for WKT2-2015-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'CS')) {\n    return '2015'; // `CS` is valid in both, but default to 2015 unless `USAGE` is present\n  }\n\n  if (root[0] === 'BOUNDCRS' || root[0] === 'PROJCRS' || root[0] === 'GEOGCRS') {\n    return '2015'; // These are valid in both, but default to 2015\n  }\n\n  // Default to WKT2-2015 if no specific indicators are found\n  return '2015';\n}\n\n/**\n * Builds a PROJJSON object from a WKT array structure.\n * @param {Array} root The root WKT array node.\n * @returns {Object} The PROJJSON object.\n */\nexport function buildPROJJSON(root) {\n  const version = detectWKT2Version(root);\n  const builder = version === '2019' ? PROJJSONBuilder2019 : PROJJSONBuilder2015;\n  return builder.convert(root);\n}\n","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2015 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Skip `CS` and `USAGE` nodes for WKT2-2015\n    if (result.coordinate_system && result.coordinate_system.subtype === 'Cartesian') {\n      delete result.coordinate_system;\n    }\n    if (result.usage) {\n      delete result.usage;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2015;","class PROJJSONBuilderBase {\n  static getId(node) {\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    if (idNode && idNode.length >= 3) {\n      return {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      };\n    }\n    return null;\n  }\n\n  static convertUnit(node, type = 'unit') {\n    if (!node || node.length < 3) {\n      return { type, name: 'unknown', conversion_factor: null };\n    }\n\n    const name = node[1];\n    const conversionFactor = parseFloat(node[2]) || null;\n\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    const id = idNode\n      ? {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      }\n      : null;\n\n    return {\n      type,\n      name,\n      conversion_factor: conversionFactor,\n      id,\n    };\n  }\n\n  static convertAxis(node) {\n    const name = node[1] || 'Unknown';\n\n    // Determine the direction\n    let direction;\n    const abbreviationMatch = name.match(/^\\((.)\\)$/); // Match abbreviations like \"(E)\" or \"(N)\"\n    if (abbreviationMatch) {\n      // Use the abbreviation to determine the direction\n      const abbreviation = abbreviationMatch[1].toUpperCase();\n      if (abbreviation === 'E') direction = 'east';\n      else if (abbreviation === 'N') direction = 'north';\n      else if (abbreviation === 'U') direction = 'up';\n      else throw new Error(`Unknown axis abbreviation: ${abbreviation}`);\n    } else {\n      // Use the explicit direction provided in the AXIS node\n      direction = node[2] ? node[2].toLowerCase() : 'unknown';\n    }\n\n    const orderNode = node.find((child) => Array.isArray(child) && child[0] === 'ORDER');\n    const order = orderNode ? parseInt(orderNode[1], 10) : null;\n\n    const unitNode = node.find(\n      (child) =>\n        Array.isArray(child) &&\n        (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n    );\n    const unit = this.convertUnit(unitNode);\n\n    return {\n      name,\n      direction, // Use the valid PROJJSON direction value\n      unit,\n      order,\n    };\n  }\n\n  static extractAxes(node) {\n    return node\n      .filter((child) => Array.isArray(child) && child[0] === 'AXIS')\n      .map((axis) => this.convertAxis(axis))\n      .sort((a, b) => (a.order || 0) - (b.order || 0)); // Sort by the \"order\" property\n  }\n\n  static convert(node, result = {}) {\n\n    switch (node[0]) {\n      case 'PROJCRS':\n        result.type = 'ProjectedCRS';\n        result.name = node[1];\n        result.base_crs = node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS'))\n          : null;\n        result.conversion = node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION'))\n          : null;\n\n        const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n        if (csNode) {\n          result.coordinate_system = {\n            type: csNode[1],\n            axis: this.extractAxes(node),\n          };\n        }\n\n        const lengthUnitNode = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT');\n        if (lengthUnitNode) {\n          const unit = this.convertUnit(lengthUnitNode);\n          result.coordinate_system.unit = unit; // Add unit to coordinate_system\n        }\n\n        result.id = this.getId(node);\n        break;\n\n      case 'BASEGEOGCRS':\n      case 'GEOGCRS':\n        result.type = 'GeographicCRS';\n        result.name = node[1];\n      \n        // Handle DATUM or ENSEMBLE\n        const datumOrEnsembleNode = node.find(\n          (child) => Array.isArray(child) && (child[0] === 'DATUM' || child[0] === 'ENSEMBLE')\n        );\n        if (datumOrEnsembleNode) {\n          const datumOrEnsemble = this.convert(datumOrEnsembleNode);\n          if (datumOrEnsembleNode[0] === 'ENSEMBLE') {\n            result.datum_ensemble = datumOrEnsemble;\n          } else {\n            result.datum = datumOrEnsemble;\n          }\n          const primem = node.find((child) => Array.isArray(child) && child[0] === 'PRIMEM');\n          if (primem && primem[1] !== 'Greenwich') {\n            datumOrEnsemble.prime_meridian = {\n              name: primem[1],\n              longitude: parseFloat(primem[2]),\n            }\n          }\n        }\n      \n        result.coordinate_system = {\n          type: 'ellipsoidal',\n          axis: this.extractAxes(node),\n        };\n      \n        result.id = this.getId(node);\n        break;\n\n      case 'DATUM':\n        result.type = 'GeodeticReferenceFrame';\n        result.name = node[1];\n        result.ellipsoid = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID'))\n          : null;\n        break;\n      \n      case 'ENSEMBLE':\n        result.type = 'DatumEnsemble';\n        result.name = node[1];\n      \n        // Extract ensemble members\n        result.members = node\n          .filter((child) => Array.isArray(child) && child[0] === 'MEMBER')\n          .map((member) => ({\n            type: 'DatumEnsembleMember',\n            name: member[1],\n            id: this.getId(member), // Extract ID as { authority, code }\n          }));\n      \n        // Extract accuracy\n        const accuracyNode = node.find((child) => Array.isArray(child) && child[0] === 'ENSEMBLEACCURACY');\n        if (accuracyNode) {\n          result.accuracy = parseFloat(accuracyNode[1]);\n        }\n      \n        // Extract ellipsoid\n        const ellipsoidNode = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID');\n        if (ellipsoidNode) {\n          result.ellipsoid = this.convert(ellipsoidNode); // Convert the ellipsoid node\n        }\n      \n        // Extract identifier for the ensemble\n        result.id = this.getId(node);\n        break;\n\n      case 'ELLIPSOID':\n        result.type = 'Ellipsoid';\n        result.name = node[1];\n        result.semi_major_axis = parseFloat(node[2]);\n        result.inverse_flattening = parseFloat(node[3]);\n        const units = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT'), result)\n          : null;\n        break;\n\n      case 'CONVERSION':\n        result.type = 'Conversion';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && child[0] === 'PARAMETER')\n          .map((param) => this.convert(param));\n        break;\n\n      case 'METHOD':\n        result.type = 'Method';\n        result.name = node[1];\n        result.id = this.getId(node);\n        break;\n\n      case 'PARAMETER':\n        result.type = 'Parameter';\n        result.name = node[1];\n        result.value = parseFloat(node[2]);\n        result.unit = this.convertUnit(\n          node.find(\n            (child) =>\n              Array.isArray(child) &&\n              (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n          )\n        );\n        result.id = this.getId(node);\n        break;\n\n      case 'BOUNDCRS':\n        result.type = 'BoundCRS';\n\n        // Process SOURCECRS\n        const sourceCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'SOURCECRS');\n        if (sourceCrsNode) {\n          const sourceCrsContent = sourceCrsNode.find((child) => Array.isArray(child));\n          result.source_crs = sourceCrsContent ? this.convert(sourceCrsContent) : null;\n        }\n\n        // Process TARGETCRS\n        const targetCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'TARGETCRS');\n        if (targetCrsNode) {\n          const targetCrsContent = targetCrsNode.find((child) => Array.isArray(child));\n          result.target_crs = targetCrsContent ? this.convert(targetCrsContent) : null;\n        }\n\n        // Process ABRIDGEDTRANSFORMATION\n        const transformationNode = node.find((child) => Array.isArray(child) && child[0] === 'ABRIDGEDTRANSFORMATION');\n        if (transformationNode) {\n          result.transformation = this.convert(transformationNode);\n        } else {\n          result.transformation = null;\n        }\n        break;\n\n      case 'ABRIDGEDTRANSFORMATION':\n        result.type = 'Transformation';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && (child[0] === 'PARAMETER' || child[0] === 'PARAMETERFILE'))\n          .map((param) => {\n            if (param[0] === 'PARAMETER') {\n              return this.convert(param);\n            } else if (param[0] === 'PARAMETERFILE') {\n              return {\n                name: param[1],\n                value: param[2],\n                id: {\n                  'authority': 'EPSG',\n                  'code': 8656\n                }\n              };\n            }\n          });\n\n        // Adjust the Scale difference parameter if present\n        if (result.parameters.length === 7) {\n          const scaleDifference = result.parameters[6];\n          if (scaleDifference.name === 'Scale difference') {\n            scaleDifference.value = Math.round((scaleDifference.value - 1) * 1e12) / 1e6;\n          }\n        }\n\n        result.id = this.getId(node);\n        break;\n      \n      case 'AXIS':\n        if (!result.coordinate_system) {\n          result.coordinate_system = { type: 'unspecified', axis: [] };\n        }\n        result.coordinate_system.axis.push(this.convertAxis(node));\n        break;\n      \n      case 'LENGTHUNIT':\n        const unit = this.convertUnit(node, 'LinearUnit');\n        if (result.coordinate_system && result.coordinate_system.axis) {\n          result.coordinate_system.axis.forEach((axis) => {\n            if (!axis.unit) {\n              axis.unit = unit;\n            }\n          });\n        }\n        if (unit.conversion_factor && unit.conversion_factor !== 1) {\n          if (result.semi_major_axis) {\n            result.semi_major_axis = {\n              value: result.semi_major_axis,\n              unit,\n            }\n          }\n        }\n        break;\n\n      default:\n        result.keyword = node[0];\n        break;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilderBase;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2019 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Handle `CS` node for WKT2-2019\n    const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n    if (csNode) {\n      result.coordinate_system = {\n        subtype: csNode[1],\n        axis: this.extractAxes(node),\n      };\n    }\n\n    // Handle `USAGE` node for WKT2-2019\n    const usageNode = node.find((child) => Array.isArray(child) && child[0] === 'USAGE');\n    if (usageNode) {\n      const scope = usageNode.find((child) => Array.isArray(child) && child[0] === 'SCOPE');\n      const area = usageNode.find((child) => Array.isArray(child) && child[0] === 'AREA');\n      const bbox = usageNode.find((child) => Array.isArray(child) && child[0] === 'BBOX');\n      result.usage = {};\n      if (scope) {\n        result.usage.scope = scope[1];\n      }\n      if (area) {\n        result.usage.area = area[1];\n      }\n      if (bbox) {\n        result.usage.bbox = bbox.slice(1);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2019;","/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (\n    normalizedWKT.includes('PROJCRS') ||\n    normalizedWKT.includes('GEOGCRS') ||\n    normalizedWKT.includes('BOUNDCRS') ||\n    normalizedWKT.includes('VERTCRS') ||\n    normalizedWKT.includes('LENGTHUNIT') ||\n    normalizedWKT.includes('ANGLEUNIT') ||\n    normalizedWKT.includes('SCALEUNIT')\n  ) {\n    return 'WKT2';\n  }\n\n  // Check for WKT1-specific keywords\n  if (\n    normalizedWKT.includes('PROJCS') ||\n    normalizedWKT.includes('GEOGCS') ||\n    normalizedWKT.includes('LOCAL_CS') ||\n    normalizedWKT.includes('VERT_CS') ||\n    normalizedWKT.includes('UNIT')\n  ) {\n    return 'WKT1';\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return 'WKT1';\n}","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","import { applyProjectionDefaults } from './util.js';\n\n// Helper function to process units and to_meter\nfunction processUnit(unit) {\n  let result = { units: null, to_meter: undefined };\n\n  if (typeof unit === 'string') {\n    result.units = unit.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    if (result.units === 'meter') {\n      result.to_meter = 1; // Only set to_meter if units are 'meter'\n    }\n  } else if (unit && unit.name) {\n    result.units = unit.name.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    result.to_meter = unit.conversion_factor;\n  }\n\n  return result;\n}\n\nfunction toValue(valueOrObject) {\n  if (typeof valueOrObject === 'object') {\n    return valueOrObject.value * valueOrObject.unit.conversion_factor;\n  }\n  return valueOrObject;\n}\n\nfunction calculateEllipsoid(value, result) {\n  if (value.ellipsoid.radius) {\n    result.a = value.ellipsoid.radius;\n    result.rf = 0;\n  } else {\n    result.a = toValue(value.ellipsoid.semi_major_axis);\n    if (value.ellipsoid.inverse_flattening !== undefined) {\n      result.rf = value.ellipsoid.inverse_flattening;\n    } else if (value.ellipsoid.semi_major_axis !== undefined && value.ellipsoid.semi_minor_axis !== undefined) {\n      result.rf = result.a / (result.a - toValue(value.ellipsoid.semi_minor_axis));\n    }\n  }\n}\n\nexport function transformPROJJSON(projjson, result = {}) {\n  if (!projjson || typeof projjson !== 'object') {\n    return projjson; // Return primitive values as-is\n  }\n\n  if (projjson.type === 'BoundCRS') {\n    transformPROJJSON(projjson.source_crs, result);\n\n    if (projjson.transformation) {\n      if (projjson.transformation.method && projjson.transformation.method.name === 'NTv2') {\n        // Set nadgrids to the filename from the parameterfile\n        result.nadgrids = projjson.transformation.parameters[0].value;\n      } else {\n        // Populate datum_params if no parameterfile is found\n        result.datum_params = projjson.transformation.parameters.map((param) => param.value);\n      }\n    }\n    return result; // Return early for BoundCRS\n  }\n\n  // Handle specific keys in PROJJSON\n  Object.keys(projjson).forEach((key) => {\n    const value = projjson[key];\n    if (value === null) {\n      return;\n    }\n\n    switch (key) {\n      case 'name':\n        if (result.srsCode) {\n          break;\n        }\n        result.name = value;\n        result.srsCode = value; // Map `name` to `srsCode`\n        break;\n\n      case 'type':\n        if (value === 'GeographicCRS') {\n          result.projName = 'longlat';\n        } else if (value === 'ProjectedCRS' && projjson.conversion && projjson.conversion.method) {\n          result.projName = projjson.conversion.method.name; // Retain original capitalization\n        }\n        break;\n\n      case 'datum':\n      case 'datum_ensemble': // Handle both datum and ensemble\n        if (value.ellipsoid) {\n          // Extract ellipsoid properties\n          result.ellps = value.ellipsoid.name;\n          calculateEllipsoid(value, result);\n        }\n        if (value.prime_meridian) {\n          result.from_greenwich = value.prime_meridian.longitude * Math.PI / 180; // Convert to radians\n        }\n        break;\n\n      case 'ellipsoid':\n        result.ellps = value.name;\n        calculateEllipsoid(value, result);\n        break;\n\n      case 'prime_meridian':\n        result.long0 = (value.longitude || 0) * Math.PI / 180; // Convert to radians\n        break;\n\n      case 'coordinate_system':\n        if (value.axis) {\n          result.axis = value.axis\n            .map((axis) => {\n              const direction = axis.direction;\n              if (direction === 'east') return 'e';\n              if (direction === 'north') return 'n';\n              if (direction === 'west') return 'w';\n              if (direction === 'south') return 's';\n              throw new Error(`Unknown axis direction: ${direction}`);\n            })\n            .join('') + 'u'; // Combine into a single string (e.g., \"enu\")\n\n          if (value.unit) {\n            const { units, to_meter } = processUnit(value.unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          } else if (value.axis[0] && value.axis[0].unit) {\n            const { units, to_meter } = processUnit(value.axis[0].unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          }\n        }\n        break;\n        \n      case 'id':\n        if (value.authority && value.code) {\n          result.title = value.authority + ':' + value.code;\n        }\n        break;\n\n      case 'conversion':\n        if (value.method && value.method.name) {\n          result.projName = value.method.name; // Retain original capitalization\n        }\n        if (value.parameters) {\n          value.parameters.forEach((param) => {\n            const paramName = param.name.toLowerCase().replace(/\\s+/g, '_');\n            const paramValue = param.value;\n            if (param.unit && param.unit.conversion_factor) {\n              result[paramName] = paramValue * param.unit.conversion_factor; // Convert to radians or meters\n            } else if (param.unit === 'degree') {\n              result[paramName] = paramValue * Math.PI / 180; // Convert to radians\n            } else {\n              result[paramName] = paramValue;\n            }\n          });\n        }\n        break;\n\n      case 'unit':\n        if (value.name) {\n          result.units = value.name.toLowerCase();\n          if (result.units === 'metre') {\n            result.units = 'meter';\n          }\n        }\n        if (value.conversion_factor) {\n          result.to_meter = value.conversion_factor;\n        }\n        break;\n\n      case 'base_crs':\n        transformPROJJSON(value, result); // Pass `result` directly\n        result.datumCode = value.id ? value.id.authority + '_' + value.id.code : value.name; // Set datumCode\n        break;\n\n      default:\n        // Ignore irrelevant or unneeded properties\n        break;\n    }\n  });\n\n  // Additional calculated properties\n  if (result.latitude_of_false_origin !== undefined) {\n    result.lat0 = result.latitude_of_false_origin; // Already in radians\n  }\n  if (result.longitude_of_false_origin !== undefined) {\n    result.long0 = result.longitude_of_false_origin;\n  }\n  if (result.latitude_of_standard_parallel !== undefined) {\n    result.lat0 = result.latitude_of_standard_parallel;\n    result.lat1 = result.latitude_of_standard_parallel;\n  }\n  if (result.latitude_of_1st_standard_parallel !== undefined) {\n    result.lat1 = result.latitude_of_1st_standard_parallel;\n  }\n  if (result.latitude_of_2nd_standard_parallel !== undefined) {\n    result.lat2 = result.latitude_of_2nd_standard_parallel; \n  }\n  if (result.latitude_of_projection_centre !== undefined) {\n    result.lat0 = result.latitude_of_projection_centre;\n  }\n  if (result.longitude_of_projection_centre !== undefined) {\n    result.longc = result.longitude_of_projection_centre;\n  }\n  if (result.easting_at_false_origin !== undefined) {\n    result.x0 = result.easting_at_false_origin;\n  }\n  if (result.northing_at_false_origin !== undefined) {\n    result.y0 = result.northing_at_false_origin;\n  }\n  if (result.latitude_of_natural_origin !== undefined) {\n    result.lat0 = result.latitude_of_natural_origin;\n  }\n  if (result.longitude_of_natural_origin !== undefined) {\n    result.long0 = result.longitude_of_natural_origin;\n  }\n  if (result.longitude_of_origin !== undefined) {\n    result.long0 = result.longitude_of_origin;\n  }\n  if (result.false_easting !== undefined) {\n    result.x0 = result.false_easting;\n  }\n  if (result.easting_at_projection_centre) {\n    result.x0 = result.easting_at_projection_centre;\n  }\n  if (result.false_northing !== undefined) {\n    result.y0 = result.false_northing;\n  }\n  if (result.northing_at_projection_centre) {\n    result.y0 = result.northing_at_projection_centre;\n  }\n  if (result.standard_parallel_1 !== undefined) {\n    result.lat1 = result.standard_parallel_1;\n  }\n  if (result.standard_parallel_2 !== undefined) {\n    result.lat2 = result.standard_parallel_2;\n  }\n  if (result.scale_factor_at_natural_origin !== undefined) {\n    result.k0 = result.scale_factor_at_natural_origin;\n  }\n  if (result.scale_factor_at_projection_centre !== undefined) {\n    result.k0 = result.scale_factor_at_projection_centre;\n  }\n  if (result.scale_factor_on_pseudo_standard_parallel !== undefined) {  \n    result.k0 = result.scale_factor_on_pseudo_standard_parallel;\n  }\n  if (result.azimuth !== undefined) {\n    result.alpha = result.azimuth;\n  }\n  if (result.azimuth_at_projection_centre !== undefined) {\n    result.alpha = result.azimuth_at_projection_centre;\n  }\n  if (result.angle_from_rectified_to_skew_grid) {\n    result.rectified_grid_angle = result.angle_from_rectified_to_skew_grid;\n  }\n\n  // Apply projection defaults\n  applyProjectionDefaults(result);\n\n  return result;\n}","var D2R = 0.01745329251994329577;\n\nexport function d2r(input) {\n  return input * D2R;\n}\n\nexport function applyProjectionDefaults(wkt) {\n  // Normalize projName for WKT2 compatibility\n  const normalizedProjName = (wkt.projName || '').toLowerCase().replace(/_/g, ' ');\n\n  if (!wkt.long0 && wkt.longc && (normalizedProjName === 'albers conic equal area' || normalizedProjName === 'lambert azimuthal equal area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (normalizedProjName === 'stereographic south pole' || normalizedProjName === 'polar stereographic (variant b)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n    delete wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && (normalizedProjName === 'polar stereographic' || normalizedProjName === 'polar stereographic (variant a)')) {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n    delete wkt.lat1;\n  }\n}","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","import merc from './projections/merc';\nimport longlat from './projections/longlat';\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport { add };\n\nexport function getNormalizedProjName(n) {\n  return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n  n = getNormalizedProjName(n);\n  if (n in names && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  -------------------------------------------------- */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  -------------------------------------------------- */\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mercator', 'Popular Visualisation Pseudo Mercator', 'Mercator_1SP', 'Mercator_Auxiliary_Sphere', 'Mercator_Variant_A', 'merc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","export default function (x) {\n  return x < 0 ? -1 : 1;\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  // console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  // no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = ['longlat', 'identity'];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid } from './constants/Ellipsoid';\nimport match from './match';\n\nconst WGS84 = Ellipsoid.WGS84; // default ellipsoid\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var ellipsoids = {\n  MERIT: {\n    a: 6378137,\n    rf: 298.257,\n    ellipseName: 'MERIT 1983'\n  },\n  SGS85: {\n    a: 6378136,\n    rf: 298.257,\n    ellipseName: 'Soviet Geodetic System 85'\n  },\n  GRS80: {\n    a: 6378137,\n    rf: 298.257222101,\n    ellipseName: 'GRS 1980(IUGG, 1980)'\n  },\n  IAU76: {\n    a: 6378140,\n    rf: 298.257,\n    ellipseName: 'IAU 1976'\n  },\n  airy: {\n    a: 6377563.396,\n    b: 6356256.91,\n    ellipseName: 'Airy 1830'\n  },\n  APL4: {\n    a: 6378137,\n    rf: 298.25,\n    ellipseName: 'Appl. Physics. 1965'\n  },\n  NWL9D: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'Naval Weapons Lab., 1965'\n  },\n  mod_airy: {\n    a: 6377340.189,\n    b: 6356034.446,\n    ellipseName: 'Modified Airy'\n  },\n  andrae: {\n    a: 6377104.43,\n    rf: 300,\n    ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n  },\n  aust_SA: {\n    a: 6378160,\n    rf: 298.25,\n    ellipseName: 'Australian Natl & S. Amer. 1969'\n  },\n  GRS67: {\n    a: 6378160,\n    rf: 298.247167427,\n    ellipseName: 'GRS 67(IUGG 1967)'\n  },\n  bessel: {\n    a: 6377397.155,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841'\n  },\n  bess_nam: {\n    a: 6377483.865,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841 (Namibia)'\n  },\n  clrk66: {\n    a: 6378206.4,\n    b: 6356583.8,\n    ellipseName: 'Clarke 1866'\n  },\n  clrk80: {\n    a: 6378249.145,\n    rf: 293.4663,\n    ellipseName: 'Clarke 1880 mod.'\n  },\n  clrk80ign: {\n    a: 6378249.2,\n    b: 6356515,\n    rf: 293.4660213,\n    ellipseName: 'Clarke 1880 (IGN)'\n  },\n  clrk58: {\n    a: 6378293.645208759,\n    rf: 294.2606763692654,\n    ellipseName: 'Clarke 1858'\n  },\n  CPM: {\n    a: 6375738.7,\n    rf: 334.29,\n    ellipseName: 'Comm. des Poids et Mesures 1799'\n  },\n  delmbr: {\n    a: 6376428,\n    rf: 311.5,\n    ellipseName: 'Delambre 1810 (Belgium)'\n  },\n  engelis: {\n    a: 6378136.05,\n    rf: 298.2566,\n    ellipseName: 'Engelis 1985'\n  },\n  evrst30: {\n    a: 6377276.345,\n    rf: 300.8017,\n    ellipseName: 'Everest 1830'\n  },\n  evrst48: {\n    a: 6377304.063,\n    rf: 300.8017,\n    ellipseName: 'Everest 1948'\n  },\n  evrst56: {\n    a: 6377301.243,\n    rf: 300.8017,\n    ellipseName: 'Everest 1956'\n  },\n  evrst69: {\n    a: 6377295.664,\n    rf: 300.8017,\n    ellipseName: 'Everest 1969'\n  },\n  evrstSS: {\n    a: 6377298.556,\n    rf: 300.8017,\n    ellipseName: 'Everest (Sabah & Sarawak)'\n  },\n  fschr60: {\n    a: 6378166,\n    rf: 298.3,\n    ellipseName: 'Fischer (Mercury Datum) 1960'\n  },\n  fschr60m: {\n    a: 6378155,\n    rf: 298.3,\n    ellipseName: 'Fischer 1960'\n  },\n  fschr68: {\n    a: 6378150,\n    rf: 298.3,\n    ellipseName: 'Fischer 1968'\n  },\n  helmert: {\n    a: 6378200,\n    rf: 298.3,\n    ellipseName: 'Helmert 1906'\n  },\n  hough: {\n    a: 6378270,\n    rf: 297,\n    ellipseName: 'Hough'\n  },\n  intl: {\n    a: 6378388,\n    rf: 297,\n    ellipseName: 'International 1909 (Hayford)'\n  },\n  kaula: {\n    a: 6378163,\n    rf: 298.24,\n    ellipseName: 'Kaula 1961'\n  },\n  lerch: {\n    a: 6378139,\n    rf: 298.257,\n    ellipseName: 'Lerch 1979'\n  },\n  mprts: {\n    a: 6397300,\n    rf: 191,\n    ellipseName: 'Maupertius 1738'\n  },\n  new_intl: {\n    a: 6378157.5,\n    b: 6356772.2,\n    ellipseName: 'New International 1967'\n  },\n  plessis: {\n    a: 6376523,\n    rf: 6355863,\n    ellipseName: 'Plessis 1817 (France)'\n  },\n  krass: {\n    a: 6378245,\n    rf: 298.3,\n    ellipseName: 'Krassovsky, 1942'\n  },\n  SEasia: {\n    a: 6378155,\n    b: 6356773.3205,\n    ellipseName: 'Southeast Asia'\n  },\n  walbeck: {\n    a: 6376896,\n    b: 6355834.8467,\n    ellipseName: 'Walbeck'\n  },\n  WGS60: {\n    a: 6378165,\n    rf: 298.3,\n    ellipseName: 'WGS 60'\n  },\n  WGS66: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'WGS 66'\n  },\n  WGS7: {\n    a: 6378135,\n    rf: 298.26,\n    ellipseName: 'WGS 72'\n  },\n  WGS84: {\n    a: 6378137,\n    rf: 298.257223563,\n    ellipseName: 'WGS 84'\n  },\n  sphere: {\n    a: 6370997,\n    b: 6370997,\n    ellipseName: 'Normal Sphere (r=6370997)'\n  }\n};\n\nexport default ellipsoids;\n","var datums = {\n  wgs84: {\n    towgs84: '0,0,0',\n    ellipse: 'WGS84',\n    datumName: 'WGS84'\n  },\n  ch1903: {\n    towgs84: '674.374,15.056,405.346',\n    ellipse: 'bessel',\n    datumName: 'swiss'\n  },\n  ggrs87: {\n    towgs84: '-199.87,74.79,246.62',\n    ellipse: 'GRS80',\n    datumName: 'Greek_Geodetic_Reference_System_1987'\n  },\n  nad83: {\n    towgs84: '0,0,0',\n    ellipse: 'GRS80',\n    datumName: 'North_American_Datum_1983'\n  },\n  nad27: {\n    nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n    ellipse: 'clrk66',\n    datumName: 'North_American_Datum_1927'\n  },\n  potsdam: {\n    towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n    ellipse: 'bessel',\n    datumName: 'Potsdam Rauenberg 1950 DHDN'\n  },\n  carthage: {\n    towgs84: '-263.0,6.0,431.0',\n    ellipse: 'clark80',\n    datumName: 'Carthage 1934 Tunisia'\n  },\n  hermannskogel: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Hermannskogel'\n  },\n  mgi: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Militar-Geographische Institut'\n  },\n  osni52: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'airy',\n    datumName: 'Irish National'\n  },\n  ire65: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'mod_airy',\n    datumName: 'Ireland 1965'\n  },\n  rassadiran: {\n    towgs84: '-133.63,-157.5,-158.62',\n    ellipse: 'intl',\n    datumName: 'Rassadiran'\n  },\n  nzgd49: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n    ellipse: 'intl',\n    datumName: 'New Zealand Geodetic Datum 1949'\n  },\n  osgb36: {\n    towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n    ellipse: 'airy',\n    datumName: 'Ordnance Survey of Great Britain 1936'\n  },\n  s_jtsk: {\n    towgs84: '589,76,480',\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n    ellipse: 'intl',\n    datumName: 'Reseau National Belge 1972'\n  },\n  EPSG_5451: {\n    towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n  },\n  IGNF_LURESG: {\n    towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n  },\n  EPSG_4614: {\n    towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n  },\n  EPSG_4615: {\n    towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n  },\n  ESRI_37241: {\n    towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n  },\n  ESRI_37249: {\n    towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n  },\n  ESRI_37245: {\n    towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n  },\n  EPSG_4178: {\n    towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n  },\n  EPSG_4622: {\n    towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n  },\n  EPSG_4625: {\n    towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n  },\n  EPSG_5252: {\n    towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n  },\n  EPSG_4314: {\n    towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n  },\n  EPSG_4282: {\n    towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n  },\n  EPSG_4231: {\n    towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n  },\n  EPSG_4274: {\n    towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n  },\n  EPSG_4134: {\n    towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n  },\n  EPSG_4254: {\n    towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n  },\n  EPSG_4159: {\n    towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n  },\n  EPSG_4687: {\n    towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_4227: {\n    towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n  },\n  EPSG_4746: {\n    towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n  },\n  EPSG_4745: {\n    towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n  },\n  EPSG_6311: {\n    towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n  },\n  EPSG_4289: {\n    towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n  },\n  EPSG_4230: {\n    towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n  },\n  EPSG_4154: {\n    towgs84: '-123.02,-158.95,-168.47'\n  },\n  EPSG_4156: {\n    towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n  },\n  EPSG_4299: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4179: {\n    towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n  },\n  EPSG_4313: {\n    towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n  },\n  EPSG_4194: {\n    towgs84: '163.511,127.533,-159.789'\n  },\n  EPSG_4195: {\n    towgs84: '105,326,-102.5'\n  },\n  EPSG_4196: {\n    towgs84: '-45,417,-3.5'\n  },\n  EPSG_4611: {\n    towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n  },\n  EPSG_4633: {\n    towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n  },\n  EPSG_4641: {\n    towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n  },\n  EPSG_4643: {\n    towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n  },\n  EPSG_4300: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4188: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4660: {\n    towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n  },\n  EPSG_4662: {\n    towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n  },\n  EPSG_3906: {\n    towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n  },\n  EPSG_4307: {\n    towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n  },\n  EPSG_6892: {\n    towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n  },\n  EPSG_4690: {\n    towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n  },\n  EPSG_4691: {\n    towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n  },\n  EPSG_4629: {\n    towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n  },\n  EPSG_4630: {\n    towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n  },\n  EPSG_4692: {\n    towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_9333: {\n    towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n  },\n  EPSG_9059: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4312: {\n    towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n  },\n  EPSG_4123: {\n    towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n  },\n  EPSG_4309: {\n    towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n  },\n  ESRI_104106: {\n    towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n  },\n  EPSG_4281: {\n    towgs84: '-219.247,-73.802,269.529'\n  },\n  EPSG_4322: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4324: {\n    towgs84: '0,0,1.9'\n  },\n  EPSG_4284: {\n    towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n  },\n  EPSG_4277: {\n    towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n  },\n  EPSG_4207: {\n    towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n  },\n  EPSG_4688: {\n    towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n  },\n  EPSG_4689: {\n    towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n  },\n  EPSG_4720: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4273: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  EPSG_4240: {\n    towgs84: '204.64,834.74,293.8'\n  },\n  EPSG_4817: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  ESRI_104131: {\n    towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n  },\n  EPSG_4265: {\n    towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n  },\n  EPSG_4263: {\n    towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n  },\n  EPSG_4298: {\n    towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n  },\n  EPSG_4270: {\n    towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n  },\n  EPSG_4229: {\n    towgs84: '-121.8,98.1,-10.7'\n  },\n  EPSG_4220: {\n    towgs84: '-55.5,-348,-229.2'\n  },\n  EPSG_4214: {\n    towgs84: '12.646,-155.176,-80.863'\n  },\n  EPSG_4232: {\n    towgs84: '-345,3,223'\n  },\n  EPSG_4238: {\n    towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n  },\n  EPSG_4168: {\n    towgs84: '-170,33,326'\n  },\n  EPSG_4131: {\n    towgs84: '199,931,318.9'\n  },\n  EPSG_4152: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_5228: {\n    towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n  },\n  EPSG_8351: {\n    towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n  },\n  EPSG_4683: {\n    towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n  },\n  EPSG_4133: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7373: {\n    towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n  },\n  EPSG_9075: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9072: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9294: {\n    towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n  },\n  EPSG_4212: {\n    towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n  },\n  EPSG_4191: {\n    towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n  },\n  EPSG_4237: {\n    towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n  },\n  EPSG_4740: {\n    towgs84: '-1.08,-0.27,-0.9'\n  },\n  EPSG_4124: {\n    towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n  },\n  EPSG_5681: {\n    towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n  },\n  EPSG_4141: {\n    towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n  },\n  EPSG_4204: {\n    towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n  },\n  EPSG_4319: {\n    towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n  },\n  EPSG_4200: {\n    towgs84: '24.82,-131.21,-82.66'\n  },\n  EPSG_4130: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4127: {\n    towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n  },\n  EPSG_4149: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4617: {\n    towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n  },\n  EPSG_4663: {\n    towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n  },\n  EPSG_4664: {\n    towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n  },\n  EPSG_4665: {\n    towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n  },\n  EPSG_4666: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  EPSG_4756: {\n    towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n  },\n  EPSG_4723: {\n    towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n  },\n  EPSG_4726: {\n    towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n  },\n  EPSG_4267: {\n    towgs84: '-8.0,160.0,176.0'\n  },\n  EPSG_5365: {\n    towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n  },\n  EPSG_4218: {\n    towgs84: '304.5,306.5,-318.1'\n  },\n  EPSG_4242: {\n    towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n  },\n  EPSG_4216: {\n    towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n  },\n  ESRI_104105: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  ESRI_104129: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4673: {\n    towgs84: '174.05,-25.49,112.57'\n  },\n  EPSG_4202: {\n    towgs84: '-124,-60,154'\n  },\n  EPSG_4203: {\n    towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n  },\n  EPSG_3819: {\n    towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n  },\n  EPSG_8694: {\n    towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n  },\n  EPSG_4145: {\n    towgs84: '275.57,676.78,229.6'\n  },\n  EPSG_4283: {\n    towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n  },\n  EPSG_4317: {\n    towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n  },\n  EPSG_4272: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n  },\n  EPSG_4248: {\n    towgs84: '-307.7,265.3,-363.5'\n  },\n  EPSG_5561: {\n    towgs84: '24,-121,-76'\n  },\n  EPSG_5233: {\n    towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n  },\n  ESRI_104130: {\n    towgs84: '-86,-98,-119'\n  },\n  ESRI_104102: {\n    towgs84: '682,-203,480'\n  },\n  ESRI_37207: {\n    towgs84: '7,-10,-26'\n  },\n  EPSG_4675: {\n    towgs84: '59.935,118.4,-10.871'\n  },\n  ESRI_104109: {\n    towgs84: '-89.121,-348.182,260.871'\n  },\n  ESRI_104112: {\n    towgs84: '-185.583,-230.096,281.361'\n  },\n  ESRI_104113: {\n    towgs84: '25.1,-275.6,222.6'\n  },\n  IGNF_WGS72G: {\n    towgs84: '0,12,6'\n  },\n  IGNF_NTFG: {\n    towgs84: '-168,-60,320'\n  },\n  IGNF_EFATE57G: {\n    towgs84: '-127,-769,472'\n  },\n  IGNF_PGP50G: {\n    towgs84: '324.8,153.6,172.1'\n  },\n  IGNF_REUN47G: {\n    towgs84: '94,-948,-1262'\n  },\n  IGNF_CSG67G: {\n    towgs84: '-186,230,110'\n  },\n  IGNF_GUAD48G: {\n    towgs84: '-467,-16,-300'\n  },\n  IGNF_TAHI51G: {\n    towgs84: '162,117,154'\n  },\n  IGNF_TAHAAG: {\n    towgs84: '65,342,77'\n  },\n  IGNF_NUKU72G: {\n    towgs84: '84,274,65'\n  },\n  IGNF_PETRELS72G: {\n    towgs84: '365,194,166'\n  },\n  IGNF_WALL78G: {\n    towgs84: '253,-133,-127'\n  },\n  IGNF_MAYO50G: {\n    towgs84: '-382,-59,-262'\n  },\n  IGNF_TANNAG: {\n    towgs84: '-139,-967,436'\n  },\n  IGNF_IGN72G: {\n    towgs84: '-13,-348,292'\n  },\n  IGNF_ATIGG: {\n    towgs84: '1118,23,66'\n  },\n  IGNF_FANGA84G: {\n    towgs84: '150.57,158.33,118.32'\n  },\n  IGNF_RUSAT84G: {\n    towgs84: '202.13,174.6,-15.74'\n  },\n  IGNF_KAUE70G: {\n    towgs84: '126.74,300.1,-75.49'\n  },\n  IGNF_MOP90G: {\n    towgs84: '-10.8,-1.8,12.77'\n  },\n  IGNF_MHPF67G: {\n    towgs84: '338.08,212.58,-296.17'\n  },\n  IGNF_TAHI79G: {\n    towgs84: '160.61,116.05,153.69'\n  },\n  IGNF_ANAA92G: {\n    towgs84: '1.5,3.84,4.81'\n  },\n  IGNF_MARQUI72G: {\n    towgs84: '330.91,-13.92,58.56'\n  },\n  IGNF_APAT86G: {\n    towgs84: '143.6,197.82,74.05'\n  },\n  IGNF_TUBU69G: {\n    towgs84: '237.17,171.61,-77.84'\n  },\n  IGNF_STPM50G: {\n    towgs84: '11.363,424.148,373.13'\n  },\n  EPSG_4150: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4754: {\n    towgs84: '-208.4058,-109.8777,-2.5764'\n  },\n  ESRI_104101: {\n    towgs84: '374,150,588'\n  },\n  EPSG_4693: {\n    towgs84: '0,-0.15,0.68'\n  },\n  EPSG_6207: {\n    towgs84: '293.17,726.18,245.36'\n  },\n  EPSG_4153: {\n    towgs84: '-133.63,-157.5,-158.62'\n  },\n  EPSG_4132: {\n    towgs84: '-241.54,-163.64,396.06'\n  },\n  EPSG_4221: {\n    towgs84: '-154.5,150.7,100.4'\n  },\n  EPSG_4266: {\n    towgs84: '-80.7,-132.5,41.1'\n  },\n  EPSG_4193: {\n    towgs84: '-70.9,-151.8,-41.4'\n  },\n  EPSG_5340: {\n    towgs84: '-0.41,0.46,-0.35'\n  },\n  EPSG_4246: {\n    towgs84: '-294.7,-200.1,525.5'\n  },\n  EPSG_4318: {\n    towgs84: '-3.2,-5.7,2.8'\n  },\n  EPSG_4121: {\n    towgs84: '-199.87,74.79,246.62'\n  },\n  EPSG_4223: {\n    towgs84: '-260.1,5.5,432.2'\n  },\n  EPSG_4158: {\n    towgs84: '-0.465,372.095,171.736'\n  },\n  EPSG_4285: {\n    towgs84: '-128.16,-282.42,21.93'\n  },\n  EPSG_4613: {\n    towgs84: '-404.78,685.68,45.47'\n  },\n  EPSG_4607: {\n    towgs84: '195.671,332.517,274.607'\n  },\n  EPSG_4475: {\n    towgs84: '-381.788,-57.501,-256.673'\n  },\n  EPSG_4208: {\n    towgs84: '-157.84,308.54,-146.6'\n  },\n  EPSG_4743: {\n    towgs84: '70.995,-335.916,262.898'\n  },\n  EPSG_4710: {\n    towgs84: '-323.65,551.39,-491.22'\n  },\n  EPSG_7881: {\n    towgs84: '-0.077,0.079,0.086'\n  },\n  EPSG_4682: {\n    towgs84: '283.729,735.942,261.143'\n  },\n  EPSG_4739: {\n    towgs84: '-156,-271,-189'\n  },\n  EPSG_4679: {\n    towgs84: '-80.01,253.26,291.19'\n  },\n  EPSG_4750: {\n    towgs84: '-56.263,16.136,-22.856'\n  },\n  EPSG_4644: {\n    towgs84: '-10.18,-350.43,291.37'\n  },\n  EPSG_4695: {\n    towgs84: '-103.746,-9.614,-255.95'\n  },\n  EPSG_4292: {\n    towgs84: '-355,21,72'\n  },\n  EPSG_4302: {\n    towgs84: '-61.702,284.488,472.052'\n  },\n  EPSG_4143: {\n    towgs84: '-124.76,53,466.79'\n  },\n  EPSG_4606: {\n    towgs84: '-153,153,307'\n  },\n  EPSG_4699: {\n    towgs84: '-770.1,158.4,-498.2'\n  },\n  EPSG_4247: {\n    towgs84: '-273.5,110.6,-357.9'\n  },\n  EPSG_4160: {\n    towgs84: '8.88,184.86,106.69'\n  },\n  EPSG_4161: {\n    towgs84: '-233.43,6.65,173.64'\n  },\n  EPSG_9251: {\n    towgs84: '-9.5,122.9,138.2'\n  },\n  EPSG_9253: {\n    towgs84: '-78.1,101.6,133.3'\n  },\n  EPSG_4297: {\n    towgs84: '-198.383,-240.517,-107.909'\n  },\n  EPSG_4269: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4301: {\n    towgs84: '-147,506,687'\n  },\n  EPSG_4618: {\n    towgs84: '-59,-11,-52'\n  },\n  EPSG_4612: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4678: {\n    towgs84: '44.585,-131.212,-39.544'\n  },\n  EPSG_4250: {\n    towgs84: '-130,29,364'\n  },\n  EPSG_4144: {\n    towgs84: '214,804,268'\n  },\n  EPSG_4147: {\n    towgs84: '-17.51,-108.32,-62.39'\n  },\n  EPSG_4259: {\n    towgs84: '-254.1,-5.36,-100.29'\n  },\n  EPSG_4164: {\n    towgs84: '-76,-138,67'\n  },\n  EPSG_4211: {\n    towgs84: '-378.873,676.002,-46.255'\n  },\n  EPSG_4182: {\n    towgs84: '-422.651,-172.995,84.02'\n  },\n  EPSG_4224: {\n    towgs84: '-143.87,243.37,-33.52'\n  },\n  EPSG_4225: {\n    towgs84: '-205.57,168.77,-4.12'\n  },\n  EPSG_5527: {\n    towgs84: '-67.35,3.88,-38.22'\n  },\n  EPSG_4752: {\n    towgs84: '98,390,-22'\n  },\n  EPSG_4310: {\n    towgs84: '-30,190,89'\n  },\n  EPSG_9248: {\n    towgs84: '-192.26,65.72,132.08'\n  },\n  EPSG_4680: {\n    towgs84: '124.5,-63.5,-281'\n  },\n  EPSG_4701: {\n    towgs84: '-79.9,-158,-168.9'\n  },\n  EPSG_4706: {\n    towgs84: '-146.21,112.63,4.05'\n  },\n  EPSG_4805: {\n    towgs84: '682,-203,480'\n  },\n  EPSG_4201: {\n    towgs84: '-165,-11,206'\n  },\n  EPSG_4210: {\n    towgs84: '-157,-2,-299'\n  },\n  EPSG_4183: {\n    towgs84: '-104,167,-38'\n  },\n  EPSG_4139: {\n    towgs84: '11,72,-101'\n  },\n  EPSG_4668: {\n    towgs84: '-86,-98,-119'\n  },\n  EPSG_4717: {\n    towgs84: '-2,151,181'\n  },\n  EPSG_4732: {\n    towgs84: '102,52,-38'\n  },\n  EPSG_4280: {\n    towgs84: '-377,681,-50'\n  },\n  EPSG_4209: {\n    towgs84: '-138,-105,-289'\n  },\n  EPSG_4261: {\n    towgs84: '31,146,47'\n  },\n  EPSG_4658: {\n    towgs84: '-73,46,-86'\n  },\n  EPSG_4721: {\n    towgs84: '265.025,384.929,-194.046'\n  },\n  EPSG_4222: {\n    towgs84: '-136,-108,-292'\n  },\n  EPSG_4601: {\n    towgs84: '-255,-15,71'\n  },\n  EPSG_4602: {\n    towgs84: '725,685,536'\n  },\n  EPSG_4603: {\n    towgs84: '72,213.7,93'\n  },\n  EPSG_4605: {\n    towgs84: '9,183,236'\n  },\n  EPSG_4621: {\n    towgs84: '137,248,-430'\n  },\n  EPSG_4657: {\n    towgs84: '-28,199,5'\n  },\n  EPSG_4316: {\n    towgs84: '103.25,-100.4,-307.19'\n  },\n  EPSG_4642: {\n    towgs84: '-13,-348,292'\n  },\n  EPSG_4698: {\n    towgs84: '145,-187,103'\n  },\n  EPSG_4192: {\n    towgs84: '-206.1,-174.7,-87.7'\n  },\n  EPSG_4311: {\n    towgs84: '-265,120,-358'\n  },\n  EPSG_4135: {\n    towgs84: '58,-283,-182'\n  },\n  ESRI_104138: {\n    towgs84: '198,-226,-347'\n  },\n  EPSG_4245: {\n    towgs84: '-11,851,5'\n  },\n  EPSG_4142: {\n    towgs84: '-125,53,467'\n  },\n  EPSG_4213: {\n    towgs84: '-106,-87,188'\n  },\n  EPSG_4253: {\n    towgs84: '-133,-77,-51'\n  },\n  EPSG_4129: {\n    towgs84: '-132,-110,-335'\n  },\n  EPSG_4713: {\n    towgs84: '-77,-128,142'\n  },\n  EPSG_4239: {\n    towgs84: '217,823,299'\n  },\n  EPSG_4146: {\n    towgs84: '295,736,257'\n  },\n  EPSG_4155: {\n    towgs84: '-83,37,124'\n  },\n  EPSG_4165: {\n    towgs84: '-173,253,27'\n  },\n  EPSG_4672: {\n    towgs84: '175,-38,113'\n  },\n  EPSG_4236: {\n    towgs84: '-637,-549,-203'\n  },\n  EPSG_4251: {\n    towgs84: '-90,40,88'\n  },\n  EPSG_4271: {\n    towgs84: '-2,374,172'\n  },\n  EPSG_4175: {\n    towgs84: '-88,4,101'\n  },\n  EPSG_4716: {\n    towgs84: '298,-304,-375'\n  },\n  EPSG_4315: {\n    towgs84: '-23,259,-9'\n  },\n  EPSG_4744: {\n    towgs84: '-242.2,-144.9,370.3'\n  },\n  EPSG_4244: {\n    towgs84: '-97,787,86'\n  },\n  EPSG_4293: {\n    towgs84: '616,97,-251'\n  },\n  EPSG_4714: {\n    towgs84: '-127,-769,472'\n  },\n  EPSG_4736: {\n    towgs84: '260,12,-147'\n  },\n  EPSG_6883: {\n    towgs84: '-235,-110,393'\n  },\n  EPSG_6894: {\n    towgs84: '-63,176,185'\n  },\n  EPSG_4205: {\n    towgs84: '-43,-163,45'\n  },\n  EPSG_4256: {\n    towgs84: '41,-220,-134'\n  },\n  EPSG_4262: {\n    towgs84: '639,405,60'\n  },\n  EPSG_4604: {\n    towgs84: '174,359,365'\n  },\n  EPSG_4169: {\n    towgs84: '-115,118,426'\n  },\n  EPSG_4620: {\n    towgs84: '-106,-129,165'\n  },\n  EPSG_4184: {\n    towgs84: '-203,141,53'\n  },\n  EPSG_4616: {\n    towgs84: '-289,-124,60'\n  },\n  EPSG_9403: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4684: {\n    towgs84: '-133,-321,50'\n  },\n  EPSG_4708: {\n    towgs84: '-491,-22,435'\n  },\n  EPSG_4707: {\n    towgs84: '114,-116,-333'\n  },\n  EPSG_4709: {\n    towgs84: '145,75,-272'\n  },\n  EPSG_4712: {\n    towgs84: '-205,107,53'\n  },\n  EPSG_4711: {\n    towgs84: '124,-234,-25'\n  },\n  EPSG_4718: {\n    towgs84: '230,-199,-752'\n  },\n  EPSG_4719: {\n    towgs84: '211,147,111'\n  },\n  EPSG_4724: {\n    towgs84: '208,-435,-229'\n  },\n  EPSG_4725: {\n    towgs84: '189,-79,-202'\n  },\n  EPSG_4735: {\n    towgs84: '647,1777,-1124'\n  },\n  EPSG_4722: {\n    towgs84: '-794,119,-298'\n  },\n  EPSG_4728: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4734: {\n    towgs84: '-632,438,-609'\n  },\n  EPSG_4727: {\n    towgs84: '912,-58,1227'\n  },\n  EPSG_4729: {\n    towgs84: '185,165,42'\n  },\n  EPSG_4730: {\n    towgs84: '170,42,84'\n  },\n  EPSG_4733: {\n    towgs84: '276,-57,149'\n  },\n  ESRI_37218: {\n    towgs84: '230,-199,-752'\n  },\n  ESRI_37240: {\n    towgs84: '-7,215,225'\n  },\n  ESRI_37221: {\n    towgs84: '252,-209,-751'\n  },\n  ESRI_4305: {\n    towgs84: '-123,-206,219'\n  },\n  ESRI_104139: {\n    towgs84: '-73,-247,227'\n  },\n  EPSG_4748: {\n    towgs84: '51,391,-36'\n  },\n  EPSG_4219: {\n    towgs84: '-384,664,-48'\n  },\n  EPSG_4255: {\n    towgs84: '-333,-222,114'\n  },\n  EPSG_4257: {\n    towgs84: '-587.8,519.75,145.76'\n  },\n  EPSG_4646: {\n    towgs84: '-963,510,-359'\n  },\n  EPSG_6881: {\n    towgs84: '-24,-203,268'\n  },\n  EPSG_6882: {\n    towgs84: '-183,-15,273'\n  },\n  EPSG_4715: {\n    towgs84: '-104,-129,239'\n  },\n  IGNF_RGF93GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGM04GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGSPM06GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGTAAF07GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGFG95GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGNCG: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGPFGDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_ETRS89G: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGR92GDD: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4173: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4180: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4619: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4667: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4075: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6706: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7798: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4661: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4669: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8685: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4151: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4758: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4761: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4765: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8997: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4023: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4670: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4694: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4148: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4163: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4167: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4189: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4190: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4176: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4659: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3824: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3889: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4046: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4081: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4558: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4483: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5013: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5264: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5324: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5354: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5371: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5373: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5381: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5393: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5489: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5593: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6135: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6365: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5246: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7886: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8431: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8427: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8699: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8818: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4757: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9140: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8086: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4686: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4737: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4747: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4749: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4674: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4755: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4759: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4762: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4763: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4764: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4166: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4170: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5546: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7844: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4818: {\n    towgs84: '589,76,480'\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  if (!datum.datumName) {\n    continue;\n  }\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; // datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load either a NTv2 file (.gsb) or a Geotiff (.tif) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer. Pass Geotiff as a GeoTIFF instance from the geotiff.js library.\n */\nexport default function nadgrid(key, data, options) {\n  if (data instanceof ArrayBuffer) {\n    return readNTV2Grid(key, data, options);\n  }\n  return { ready: readGeotiffGrid(key, data) };\n}\n\nfunction readNTV2Grid(key, data, options) {\n  var includeErrorFields = true;\n  if (options !== undefined && options.includeErrorFields === false) {\n    includeErrorFields = false;\n  }\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian, includeErrorFields);\n  var nadgrid = { header: header, subgrids: subgrids };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\nasync function readGeotiffGrid(key, tiff) {\n  var subgrids = [];\n  var subGridCount = await tiff.getImageCount();\n  // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n  for (var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--) {\n    var image = await tiff.getImage(subgridIndex);\n\n    var rasters = await image.readRasters();\n    var data = rasters;\n    var lim = [image.getWidth(), image.getHeight()];\n    var imageBBoxRadians = image.getBoundingBox().map(degreesToRadians);\n    var del = [image.fileDirectory.ModelPixelScale[0], image.fileDirectory.ModelPixelScale[1]].map(degreesToRadians);\n\n    var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n    var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n\n    var latitudeOffsetBand = data[0];\n    var longitudeOffsetBand = data[1];\n    var nodes = [];\n\n    for (let i = lim[1] - 1; i >= 0; i--) {\n      for (let j = lim[0] - 1; j >= 0; j--) {\n        var index = i * lim[0] + j;\n        nodes.push([-secondsToRadians(longitudeOffsetBand[index]), secondsToRadians(latitudeOffsetBand[index])]);\n      }\n    }\n\n    subgrids.push({\n      del: del,\n      lim: lim,\n      ll: [-maxX, minY],\n      cvs: nodes\n    });\n  }\n\n  var tifGrid = {\n    header: {\n      nSubgrids: subGridCount\n    },\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = tifGrid;\n  return tifGrid;\n};\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return { name: 'null', mandatory: !optional, grid: null, isNull: true };\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction degreesToRadians(degrees) {\n  return (degrees) * Math.PI / 180;\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    var rowSize = 16;\n    if (includeErrorFields === false) {\n      rowSize = 8;\n    }\n    gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n  }\n  return grids;\n}\n\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n\n  if (includeErrorFields === false) {\n    gridRecordLength = 8;\n  }\n\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n\n    };\n\n    if (includeErrorFields !== false) {\n      record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n      record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n    }\n\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84')\n  || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from './common/adjust_lon';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = { x: -point.x, y: point.y };\n  var output = { x: Number.NaN, y: Number.NaN };\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log('Failed to find a grid shift table for location \\''\n      + -input.x * R2D + ' ' + input.y * R2D + ' tried: \\'' + attemptedGrids + '\\'');\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = { x: Number.NaN, y: Number.NaN };\n  if (isNaN(pin.x)) {\n    return val;\n  }\n  var tb = { x: pin.x, y: pin.y };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n        break;\n      }\n      dif = { x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y) };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log('Inverse grid shift iterator failed to converge.');\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = { x: pin.x / ct.del[0], y: pin.y / ct.del[1] };\n  var indx = { x: Math.floor(t.x), y: Math.floor(t.y) };\n  var frct = { x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y };\n  var val = { x: Number.NaN, y: Number.NaN };\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx++;\n  var f10 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx += ct.lim[0];\n  var f11 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx--;\n  var f01 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","'use strict';\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; // Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    // ..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; // Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } // cs_geocentric_from_wgs84()\n}\n","export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if ('ew'.indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if ('ns'.indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n      // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}\n","export default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n  return out;\n}\n","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import { toPoint, forward } from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1\n      + als / 6 * (1 - t + c\n        + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c\n          + als / 42 * (61 + 179 * ts - ts * t - 479 * t)))))\n        + this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0\n      + sin_phi * delta_lon * al / 2 * (1\n        + als / 12 * (5 - t + 9 * c + 4 * cs\n          + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c\n            + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t))))))\n          + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1\n        - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs\n          - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c\n            - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1\n        - ds / 6 * (1 + 2 * t + c\n          - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c\n            - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Fast_Transverse_Mercator', 'Fast Transverse Mercator'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n","import pj_mlfn from './pj_mlfn';\nimport { EPSLN } from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    // phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Extended_Transverse_Mercator', 'Extended Transverse Mercator', 'etmerc', 'Transverse_Mercator', 'Transverse Mercator', 'Gauss Kruger', 'Gauss_Kruger', 'tmerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = ['Universal Transverse Mercator System', 'utm'];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = 'Oblique Stereographic Alternative';\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['Stereographic_North_Pole', 'Oblique_Stereographic', 'sterea', 'Oblique Stereographic Alternative', 'Double_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gauss'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n","import { EPSLN, HALF_PI } from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        // North pole\n        // trace('stere:north pole');\n        this.con = 1;\n      } else {\n        // South pole\n        // trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    // case of the origine point\n    // trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    // trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      // trace(p.toString());\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      // Eq\n      // trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      // other case\n      // trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  // trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        // trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  // trace(p.toString());\n  return p;\n}\n\nexport var names = ['stere', 'Stereographic_South_Pole', 'Polar_Stereographic_variant_A', 'Polar_Stereographic_variant_B', 'Polar_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      // ...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = ['somerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------ */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.pi) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\nexport function init() {\n  // double lat0;                    /* the reference latitude               */\n  // double long0;                   /* the reference longitude              */\n  // double lat1;                    /* first standard parallel              */\n  // double lat2;                    /* second standard parallel             */\n  // double r_maj;                   /* major axis                           */\n  // double r_min;                   /* minor axis                           */\n  // double false_east;              /* x offset in meters                   */\n  // double false_north;             /* y offset in meters                   */\n\n  // the above value can be set with proj4.defs\n  // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } // if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN\n    ? 0 // Handle poles by setting ts0 to 0\n    : tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = 'Lambert Conformal Conic';\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  'Lambert Tangential Conformal Conic Projection',\n  'Lambert_Conformal_Conic',\n  'Lambert_Conformal_Conic_1SP',\n  'Lambert_Conformal_Conic_2SP',\n  'lcc',\n  'Lambert Conic Conformal (1SP)',\n  'Lambert Conic Conformal (2SP)'\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x */\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = ['Krovak', 'krovak'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    // ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['Cassini', 'Cassini_Soldner', 'cass'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n","export default function (x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n","export default function (x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n","export default function (x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n","export default function (x) {\n  return (x * x * x * (35 / 3072));\n}\n","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------ */\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  } else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n      case this.N_POLE:\n        this.dd = 1;\n        break;\n      case this.S_POLE:\n        this.dd = 1;\n        break;\n      case this.EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n      case this.OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n        x = this.xmf * b * cosb * sinlam;\n        break;\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n        } else {\n          x = y = 0;\n        }\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n      case this.OBLIQ:\n        phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = ['Lambert Azimuthal Equal Area', 'Lambert_Azimuthal_Equal_Area', 'laea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function (eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  } else {\n    return (2 * sinphi);\n  }\n}\n","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  ------------------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n------------------------------------------- */\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = ['Albers_Conic_Equal_Area', 'Albers_Equal_Area', 'Albers', 'aea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      ----------------- */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gnom'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  // no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['cea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    } else {\n      return HALF_PI;\n    }\n  }\n  // var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = ['Equirectangular', 'Equidistant_Cylindrical', 'Equidistant_Cylindrical_Spherical', 'eqc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Polyconic', 'American_Polyconic', 'poly'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { SEC_TO_RAD } from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['New_Zealand_Map_Grid', 'nzmg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  ------------------------------------------- */\nexport function init() {\n  // no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Miller_Cylindrical', 'mill'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    ------------------------------------------------- */\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  ----------------------------------------------------- */\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    ----------------- */\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    } else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Sinusoidal', 'sinu'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ---------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mollweide', 'moll'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  } else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      ----------------- */\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\n\nexport var names = ['Equidistant_Conic', 'eqdc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ---------------------------------------- */\nexport function init() {\n  // this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  // con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  --------------------------------------------------------- */\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Van_der_Grinten_I', 'VanDerGrinten', 'Van_der_Grinten', 'vandg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN, D2R } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nimport { Geodesic } from 'geographiclib-geodesic';\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n  this.g = new Geodesic.Geodesic(this.a, this.es / (1 + Math.sqrt(1 - this.es)));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, lat1, lon1, lat2, lon2, vars, azi1;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      // default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      // Default case\n      if (Math.abs(lon) < EPSLN && Math.abs(lat - this.lat0) < EPSLN) {\n        p.x = p.y = 0;\n        return p;\n      }\n      lat1 = this.lat0 / D2R;\n      lon1 = this.long0 / D2R;\n      lat2 = lat / D2R;\n      lon2 = lon / D2R;\n\n      vars = this.g.Inverse(lat1, lon1, lat2, lon2, this.g.AZIMUTH);\n      azi1 = vars.azi1 * D2R;\n\n      p.x = vars.s12 * Math.sin(azi1);\n      p.y = vars.s12 * Math.cos(azi1);\n      return p;\n    }\n  }\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, lat1, lon1, azi1, s12, vars;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        /* con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        } */\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      // default case\n      lat1 = this.lat0 / D2R;\n      lon1 = this.long0 / D2R;\n      azi1 = Math.atan2(p.x, p.y) / D2R;\n      s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n      vars = this.g.Direct(lat1, lon1, azi1, s12, this.g.STANDARD);\n\n      p.x = vars.lon2 * D2R;\n      p.y = vars.lat2 * D2R;\n      return p;\n    }\n  }\n}\n\nexport var names = ['Azimuthal_Equidistant', 'aeqd'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","\n(function(cb){var geodesic={};geodesic.Constants={};geodesic.Math={};geodesic.Accumulator={};(function(c){\"use strict\";c.WGS84={a:6378137,f:1/298.257223563};c.version={major:2,minor:1,patch:1};c.version_string=\"2.1.1\";})(geodesic.Constants);(function(m){\"use strict\";m.digits=53;m.epsilon=Math.pow(0.5,m.digits-1);m.degree=Math.PI/180;m.sq=function(x){return x*x;};m.hypot=function(x,y){return Math.sqrt(x*x+y*y);};m.cbrt=Math.cbrt||function(x){var y=Math.pow(Math.abs(x),1/3);return x>0?y:(x<0?-y:x);};m.log1p=Math.log1p||function(x){var y=1+x,z=y-1;return z===0?x:x*Math.log(y)/z;};m.atanh=Math.atanh||function(x){var y=Math.abs(x);y=m.log1p(2*y/(1-y))/2;return x>0?y:(x<0?-y:x);};m.copysign=function(x,y){return Math.abs(x)*(y<0||(y===0&&1/y<0)?-1:1);};m.sum=function(u,v){var s=u+v,up=s-v,vpp=s-up,t;up-=u;vpp-=v;t=s?0-(up+vpp):s;return{s:s,t:t};};m.polyval=function(N,p,s,x){var y=N<0?0:p[s++];while(--N>=0)y=y*x+p[s++];return y;};m.AngRound=function(x){var z=1/16,y=Math.abs(x);y=y<z?z-(z-y):y;return m.copysign(y,x);};m.remainder=function(x,y){x%=y;return x<-y/2?x+y:(x<y/2?x:x-y);};m.AngNormalize=function(x){var y=m.remainder(x,360);return Math.abs(y)===180?m.copysign(180,x):y;};m.LatFix=function(x){return Math.abs(x)>90?NaN:x;};m.AngDiff=function(x,y){var r=m.sum(m.remainder(-x,360),m.remainder(y,360)),d,e;r=m.sum(m.remainder(r.s,360),r.t);d=r.s;e=r.t;if(d===0||Math.abs(d)===180)\nd=m.copysign(d,e===0?y-x:-e);return{d:d,e:e};};m.sincosd=function(x){var d,r,q,s,c,sinx,cosx;d=x%360;q=Math.round(d/90);d-=90*q;r=d*this.degree;s=Math.sin(r);c=Math.cos(r);if(Math.abs(d)===45){c=Math.sqrt(0.5);s=m.copysign(c,r);}else if(Math.abs(d)===30){c=Math.sqrt(0.75);s=m.copysign(0.5,r);}\nswitch(q&3){case 0:sinx=s;cosx=c;break;case 1:sinx=c;cosx=-s;break;case 2:sinx=-s;cosx=-c;break;default:sinx=-c;cosx=s;break;}\ncosx+=0;if(sinx===0)sinx=m.copysign(sinx,x);return{s:sinx,c:cosx};};m.sincosde=function(x,t){var d,r,q,s,c,sinx,cosx;d=x%360;q=Math.round(d/90);d=m.AngRound((d-90*q)+t);r=d*this.degree;s=Math.sin(r);c=Math.cos(r);if(Math.abs(d)===45){c=Math.sqrt(0.5);s=m.copysign(c,r);}else if(Math.abs(d)===30){c=Math.sqrt(0.75);s=m.copysign(0.5,r);}\nswitch(q&3){case 0:sinx=s;cosx=c;break;case 1:sinx=c;cosx=-s;break;case 2:sinx=-s;cosx=-c;break;default:sinx=-c;cosx=s;break;}\ncosx+=0;if(sinx===0)sinx=m.copysign(sinx,x+t);return{s:sinx,c:cosx};};m.atan2d=function(y,x){var q=0,ang;if(Math.abs(y)>Math.abs(x)){[y,x]=[x,y];q=2;}\nif(m.copysign(1,x)<0){x=-x;++q;}\nang=Math.atan2(y,x)/this.degree;switch(q){case 1:ang=m.copysign(180,y)-ang;break;case 2:ang=90-ang;break;case 3:ang=-90+ang;break;default:break;}\nreturn ang;};})(geodesic.Math);(function(a,m){\"use strict\";a.Accumulator=function(y){this.Set(y);};a.Accumulator.prototype.Set=function(y){if(!y)y=0;if(y.constructor===a.Accumulator){this._s=y._s;this._t=y._t;}else{this._s=y;this._t=0;}};a.Accumulator.prototype.Add=function(y){var u=m.sum(y,this._t),v=m.sum(u.s,this._s);u=u.t;this._s=v.s;this._t=v.t;if(this._s===0)\nthis._s=u;else\nthis._t+=u;};a.Accumulator.prototype.Sum=function(y){var b;if(!y)\nreturn this._s;else{b=new a.Accumulator(this);b.Add(y);return b._s;}};a.Accumulator.prototype.Negate=function(){this._s*=-1;this._t*=-1;};a.Accumulator.prototype.Remainder=function(y){this._s=m.remainder(this._s,y);this.Add(0);};})(geodesic.Accumulator,geodesic.Math);geodesic.Geodesic={};geodesic.GeodesicLine={};geodesic.PolygonArea={};(function(g,l,p,m,c){\"use strict\";var GEOGRAPHICLIB_GEODESIC_ORDER=6,nA1_=GEOGRAPHICLIB_GEODESIC_ORDER,nA2_=GEOGRAPHICLIB_GEODESIC_ORDER,nA3_=GEOGRAPHICLIB_GEODESIC_ORDER,nA3x_=nA3_,nC3x_,nC4x_,maxit1_=20,maxit2_=maxit1_+m.digits+10,tol0_=m.epsilon,tol1_=200*tol0_,tol2_=Math.sqrt(tol0_),tolb_=tol0_,xthresh_=1000*tol2_,CAP_NONE=0,CAP_ALL=0x1F,OUT_ALL=0x7F80,astroid,A1m1f_coeff,C1f_coeff,C1pf_coeff,A2m1f_coeff,C2f_coeff,A3_coeff,C3_coeff,C4_coeff;g.tiny_=Math.sqrt(Number.MIN_VALUE/Number.EPSILON);g.nC1_=GEOGRAPHICLIB_GEODESIC_ORDER;g.nC1p_=GEOGRAPHICLIB_GEODESIC_ORDER;g.nC2_=GEOGRAPHICLIB_GEODESIC_ORDER;g.nC3_=GEOGRAPHICLIB_GEODESIC_ORDER;g.nC4_=GEOGRAPHICLIB_GEODESIC_ORDER;nC3x_=(g.nC3_*(g.nC3_-1))/2;nC4x_=(g.nC4_*(g.nC4_+1))/2;g.CAP_C1=1<<0;g.CAP_C1p=1<<1;g.CAP_C2=1<<2;g.CAP_C3=1<<3;g.CAP_C4=1<<4;g.NONE=0;g.ARC=1<<6;g.LATITUDE=1<<7|CAP_NONE;g.LONGITUDE=1<<8|g.CAP_C3;g.AZIMUTH=1<<9|CAP_NONE;g.DISTANCE=1<<10|g.CAP_C1;g.STANDARD=g.LATITUDE|g.LONGITUDE|g.AZIMUTH|g.DISTANCE;g.DISTANCE_IN=1<<11|g.CAP_C1|g.CAP_C1p;g.REDUCEDLENGTH=1<<12|g.CAP_C1|g.CAP_C2;g.GEODESICSCALE=1<<13|g.CAP_C1|g.CAP_C2;g.AREA=1<<14|g.CAP_C4;g.ALL=OUT_ALL|CAP_ALL;g.LONG_UNROLL=1<<15;g.OUT_MASK=OUT_ALL|g.LONG_UNROLL;g.SinCosSeries=function(sinp,sinx,cosx,c){var k=c.length,n=k-(sinp?1:0),ar=2*(cosx-sinx)*(cosx+sinx),y0=n&1?c[--k]:0,y1=0;n=Math.floor(n/2);while(n--){y1=ar*y0-y1+c[--k];y0=ar*y1-y0+c[--k];}\nreturn(sinp?2*sinx*cosx*y0:cosx*(y0-y1));};astroid=function(x,y){var k,p=m.sq(x),q=m.sq(y),r=(p+q-1)/6,S,r2,r3,disc,u,T3,T,ang,v,uv,w;if(!(q===0&&r<=0)){S=p*q/4;r2=m.sq(r);r3=r*r2;disc=S*(S+2*r3);u=r;if(disc>=0){T3=S+r3;T3+=T3<0?-Math.sqrt(disc):Math.sqrt(disc);T=m.cbrt(T3);u+=T+(T!==0?r2/T:0);}else{ang=Math.atan2(Math.sqrt(-disc),-(S+r3));u+=2*r*Math.cos(ang/3);}\nv=Math.sqrt(m.sq(u)+q);uv=u<0?q/(v-u):u+v;w=(uv-q)/(2*v);k=uv/(Math.sqrt(uv+m.sq(w))+w);}else{k=0;}\nreturn k;};A1m1f_coeff=[+1,4,64,0,256];g.A1m1f=function(eps){var p=Math.floor(nA1_/2),t=m.polyval(p,A1m1f_coeff,0,m.sq(eps))/A1m1f_coeff[p+1];return(t+eps)/(1-eps);};C1f_coeff=[-1,6,-16,32,-9,64,-128,2048,+9,-16,768,+3,-5,512,-7,1280,-7,2048];g.C1f=function(eps,c){var eps2=m.sq(eps),d=eps,o=0,l,p;for(l=1;l<=g.nC1_;++l){p=Math.floor((g.nC1_-l)/2);c[l]=d*m.polyval(p,C1f_coeff,o,eps2)/C1f_coeff[o+p+1];o+=p+2;d*=eps;}};C1pf_coeff=[+205,-432,768,1536,+4005,-4736,3840,12288,-225,116,384,-7173,2695,7680,+3467,7680,+38081,61440];g.C1pf=function(eps,c){var eps2=m.sq(eps),d=eps,o=0,l,p;for(l=1;l<=g.nC1p_;++l){p=Math.floor((g.nC1p_-l)/2);c[l]=d*m.polyval(p,C1pf_coeff,o,eps2)/C1pf_coeff[o+p+1];o+=p+2;d*=eps;}};A2m1f_coeff=[-11,-28,-192,0,256];g.A2m1f=function(eps){var p=Math.floor(nA2_/2),t=m.polyval(p,A2m1f_coeff,0,m.sq(eps))/A2m1f_coeff[p+1];return(t-eps)/(1+eps);};C2f_coeff=[+1,2,16,32,+35,64,384,2048,+15,80,768,+7,35,512,+63,1280,+77,2048];g.C2f=function(eps,c){var eps2=m.sq(eps),d=eps,o=0,l,p;for(l=1;l<=g.nC2_;++l){p=Math.floor((g.nC2_-l)/2);c[l]=d*m.polyval(p,C2f_coeff,o,eps2)/C2f_coeff[o+p+1];o+=p+2;d*=eps;}};g.Geodesic=function(a,f){this.a=a;this.f=f;this._f1=1-this.f;this._e2=this.f*(2-this.f);this._ep2=this._e2/m.sq(this._f1);this._n=this.f/(2-this.f);this._b=this.a*this._f1;this._c2=(m.sq(this.a)+m.sq(this._b)*(this._e2===0?1:(this._e2>0?m.atanh(Math.sqrt(this._e2)):Math.atan(Math.sqrt(-this._e2)))/Math.sqrt(Math.abs(this._e2))))/2;this._etol2=0.1*tol2_/Math.sqrt(Math.max(0.001,Math.abs(this.f))*Math.min(1,1-this.f/2)/2);if(!(isFinite(this.a)&&this.a>0))\nthrow new Error(\"Equatorial radius is not positive\");if(!(isFinite(this._b)&&this._b>0))\nthrow new Error(\"Polar semi-axis is not positive\");this._A3x=new Array(nA3x_);this._C3x=new Array(nC3x_);this._C4x=new Array(nC4x_);this.A3coeff();this.C3coeff();this.C4coeff();};A3_coeff=[-3,128,-2,-3,64,-1,-3,-1,16,+3,-1,-2,8,+1,-1,2,+1,1];g.Geodesic.prototype.A3coeff=function(){var o=0,k=0,j,p;for(j=nA3_-1;j>=0;--j){p=Math.min(nA3_-j-1,j);this._A3x[k++]=m.polyval(p,A3_coeff,o,this._n)/A3_coeff[o+p+1];o+=p+2;}};C3_coeff=[+3,128,+2,5,128,-1,3,3,64,-1,0,1,8,-1,1,4,+5,256,+1,3,128,-3,-2,3,64,+1,-3,2,32,+7,512,-10,9,384,+5,-9,5,192,+7,512,-14,7,512,+21,2560];g.Geodesic.prototype.C3coeff=function(){var o=0,k=0,l,j,p;for(l=1;l<g.nC3_;++l){for(j=g.nC3_-1;j>=l;--j){p=Math.min(g.nC3_-j-1,j);this._C3x[k++]=m.polyval(p,C3_coeff,o,this._n)/C3_coeff[o+p+1];o+=p+2;}}};C4_coeff=[+97,15015,+1088,156,45045,-224,-4784,1573,45045,-10656,14144,-4576,-858,45045,+64,624,-4576,6864,-3003,15015,+100,208,572,3432,-12012,30030,45045,+1,9009,-2944,468,135135,+5792,1040,-1287,135135,+5952,-11648,9152,-2574,135135,-64,-624,4576,-6864,3003,135135,+8,10725,+1856,-936,225225,-8448,4992,-1144,225225,-1440,4160,-4576,1716,225225,-136,63063,+1024,-208,105105,+3584,-3328,1144,315315,-128,135135,-2560,832,405405,+128,99099];g.Geodesic.prototype.C4coeff=function(){var o=0,k=0,l,j,p;for(l=0;l<g.nC4_;++l){for(j=g.nC4_-1;j>=l;--j){p=g.nC4_-j-1;this._C4x[k++]=m.polyval(p,C4_coeff,o,this._n)/C4_coeff[o+p+1];o+=p+2;}}};g.Geodesic.prototype.A3f=function(eps){return m.polyval(nA3x_-1,this._A3x,0,eps);};g.Geodesic.prototype.C3f=function(eps,c){var mult=1,o=0,l,p;for(l=1;l<g.nC3_;++l){p=g.nC3_-l-1;mult*=eps;c[l]=mult*m.polyval(p,this._C3x,o,eps);o+=p+1;}};g.Geodesic.prototype.C4f=function(eps,c){var mult=1,o=0,l,p;for(l=0;l<g.nC4_;++l){p=g.nC4_-l-1;c[l]=mult*m.polyval(p,this._C4x,o,eps);o+=p+1;mult*=eps;}};g.Geodesic.prototype.Lengths=function(eps,sig12,ssig1,csig1,dn1,ssig2,csig2,dn2,cbet1,cbet2,outmask,C1a,C2a){outmask&=g.OUT_MASK;var vals={},m0x=0,J12=0,A1=0,A2=0,B1,B2,l,csig12,t;if(outmask&(g.DISTANCE|g.REDUCEDLENGTH|g.GEODESICSCALE)){A1=g.A1m1f(eps);g.C1f(eps,C1a);if(outmask&(g.REDUCEDLENGTH|g.GEODESICSCALE)){A2=g.A2m1f(eps);g.C2f(eps,C2a);m0x=A1-A2;A2=1+A2;}\nA1=1+A1;}\nif(outmask&g.DISTANCE){B1=g.SinCosSeries(true,ssig2,csig2,C1a)-\ng.SinCosSeries(true,ssig1,csig1,C1a);vals.s12b=A1*(sig12+B1);if(outmask&(g.REDUCEDLENGTH|g.GEODESICSCALE)){B2=g.SinCosSeries(true,ssig2,csig2,C2a)-\ng.SinCosSeries(true,ssig1,csig1,C2a);J12=m0x*sig12+(A1*B1-A2*B2);}}else if(outmask&(g.REDUCEDLENGTH|g.GEODESICSCALE)){for(l=1;l<=g.nC2_;++l)\nC2a[l]=A1*C1a[l]-A2*C2a[l];J12=m0x*sig12+(g.SinCosSeries(true,ssig2,csig2,C2a)-\ng.SinCosSeries(true,ssig1,csig1,C2a));}\nif(outmask&g.REDUCEDLENGTH){vals.m0=m0x;vals.m12b=dn2*(csig1*ssig2)-dn1*(ssig1*csig2)-\ncsig1*csig2*J12;}\nif(outmask&g.GEODESICSCALE){csig12=csig1*csig2+ssig1*ssig2;t=this._ep2*(cbet1-cbet2)*(cbet1+cbet2)/(dn1+dn2);vals.M12=csig12+(t*ssig2-csig2*J12)*ssig1/dn1;vals.M21=csig12-(t*ssig1-csig1*J12)*ssig2/dn2;}\nreturn vals;};g.Geodesic.prototype.InverseStart=function(sbet1,cbet1,dn1,sbet2,cbet2,dn2,lam12,slam12,clam12,C1a,C2a){var vals={},sbet12=sbet2*cbet1-cbet2*sbet1,cbet12=cbet2*cbet1+sbet2*sbet1,sbet12a,shortline,omg12,sbetm2,somg12,comg12,t,ssig12,csig12,x,y,lamscale,betscale,k2,eps,cbet12a,bet12a,m12b,m0,nvals,k,omg12a,lam12x;vals.sig12=-1;sbet12a=sbet2*cbet1;sbet12a+=cbet2*sbet1;shortline=cbet12>=0&&sbet12<0.5&&cbet2*lam12<0.5;if(shortline){sbetm2=m.sq(sbet1+sbet2);sbetm2/=sbetm2+m.sq(cbet1+cbet2);vals.dnm=Math.sqrt(1+this._ep2*sbetm2);omg12=lam12/(this._f1*vals.dnm);somg12=Math.sin(omg12);comg12=Math.cos(omg12);}else{somg12=slam12;comg12=clam12;}\nvals.salp1=cbet2*somg12;vals.calp1=comg12>=0?sbet12+cbet2*sbet1*m.sq(somg12)/(1+comg12):sbet12a-cbet2*sbet1*m.sq(somg12)/(1-comg12);ssig12=m.hypot(vals.salp1,vals.calp1);csig12=sbet1*sbet2+cbet1*cbet2*comg12;if(shortline&&ssig12<this._etol2){vals.salp2=cbet1*somg12;vals.calp2=sbet12-cbet1*sbet2*(comg12>=0?m.sq(somg12)/(1+comg12):1-comg12);t=m.hypot(vals.salp2,vals.calp2);vals.salp2/=t;vals.calp2/=t;vals.sig12=Math.atan2(ssig12,csig12);}else if(Math.abs(this._n)>0.1||csig12>=0||ssig12>=6*Math.abs(this._n)*Math.PI*m.sq(cbet1)){}else{lam12x=Math.atan2(-slam12,-clam12);if(this.f>=0){k2=m.sq(sbet1)*this._ep2;eps=k2/(2*(1+Math.sqrt(1+k2))+k2);lamscale=this.f*cbet1*this.A3f(eps)*Math.PI;betscale=lamscale*cbet1;x=lam12x/lamscale;y=sbet12a/betscale;}else{cbet12a=cbet2*cbet1-sbet2*sbet1;bet12a=Math.atan2(sbet12a,cbet12a);nvals=this.Lengths(this._n,Math.PI+bet12a,sbet1,-cbet1,dn1,sbet2,cbet2,dn2,cbet1,cbet2,g.REDUCEDLENGTH,C1a,C2a);m12b=nvals.m12b;m0=nvals.m0;x=-1+m12b/(cbet1*cbet2*m0*Math.PI);betscale=x<-0.01?sbet12a/x:-this.f*m.sq(cbet1)*Math.PI;lamscale=betscale/cbet1;y=lam12/lamscale;}\nif(y>-tol1_&&x>-1-xthresh_){if(this.f>=0){vals.salp1=Math.min(1,-x);vals.calp1=-Math.sqrt(1-m.sq(vals.salp1));}else{vals.calp1=Math.max(x>-tol1_?0:-1,x);vals.salp1=Math.sqrt(1-m.sq(vals.calp1));}}else{k=astroid(x,y);omg12a=lamscale*(this.f>=0?-x*k/(1+k):-y*(1+k)/k);somg12=Math.sin(omg12a);comg12=-Math.cos(omg12a);vals.salp1=cbet2*somg12;vals.calp1=sbet12a-\ncbet2*sbet1*m.sq(somg12)/(1-comg12);}}\nif(!(vals.salp1<=0)){t=m.hypot(vals.salp1,vals.calp1);vals.salp1/=t;vals.calp1/=t;}else{vals.salp1=1;vals.calp1=0;}\nreturn vals;};g.Geodesic.prototype.Lambda12=function(sbet1,cbet1,dn1,sbet2,cbet2,dn2,salp1,calp1,slam120,clam120,diffp,C1a,C2a,C3a){var vals={},t,salp0,calp0,somg1,comg1,somg2,comg2,somg12,comg12,B312,eta,k2,nvals;if(sbet1===0&&calp1===0)\ncalp1=-g.tiny_;salp0=salp1*cbet1;calp0=m.hypot(calp1,salp1*sbet1);vals.ssig1=sbet1;somg1=salp0*sbet1;vals.csig1=comg1=calp1*cbet1;t=m.hypot(vals.ssig1,vals.csig1);vals.ssig1/=t;vals.csig1/=t;vals.salp2=cbet2!==cbet1?salp0/cbet2:salp1;vals.calp2=cbet2!==cbet1||Math.abs(sbet2)!==-sbet1?Math.sqrt(m.sq(calp1*cbet1)+(cbet1<-sbet1?(cbet2-cbet1)*(cbet1+cbet2):(sbet1-sbet2)*(sbet1+sbet2)))/cbet2:Math.abs(calp1);vals.ssig2=sbet2;somg2=salp0*sbet2;vals.csig2=comg2=vals.calp2*cbet2;t=m.hypot(vals.ssig2,vals.csig2);vals.ssig2/=t;vals.csig2/=t;vals.sig12=Math.atan2(Math.max(0,vals.csig1*vals.ssig2-\nvals.ssig1*vals.csig2),vals.csig1*vals.csig2+\nvals.ssig1*vals.ssig2);somg12=Math.max(0,comg1*somg2-somg1*comg2);comg12=comg1*comg2+somg1*somg2;eta=Math.atan2(somg12*clam120-comg12*slam120,comg12*clam120+somg12*slam120);k2=m.sq(calp0)*this._ep2;vals.eps=k2/(2*(1+Math.sqrt(1+k2))+k2);this.C3f(vals.eps,C3a);B312=(g.SinCosSeries(true,vals.ssig2,vals.csig2,C3a)-\ng.SinCosSeries(true,vals.ssig1,vals.csig1,C3a));vals.domg12=-this.f*this.A3f(vals.eps)*salp0*(vals.sig12+B312);vals.lam12=eta+vals.domg12;if(diffp){if(vals.calp2===0)\nvals.dlam12=-2*this._f1*dn1/sbet1;else{nvals=this.Lengths(vals.eps,vals.sig12,vals.ssig1,vals.csig1,dn1,vals.ssig2,vals.csig2,dn2,cbet1,cbet2,g.REDUCEDLENGTH,C1a,C2a);vals.dlam12=nvals.m12b;vals.dlam12*=this._f1/(vals.calp2*cbet2);}}\nreturn vals;};g.Geodesic.prototype.Inverse=function(lat1,lon1,lat2,lon2,outmask){var r,vals;if(!outmask)outmask=g.STANDARD;if(outmask===g.LONG_UNROLL)outmask|=g.STANDARD;outmask&=g.OUT_MASK;r=this.InverseInt(lat1,lon1,lat2,lon2,outmask);vals=r.vals;if(outmask&g.AZIMUTH){vals.azi1=m.atan2d(r.salp1,r.calp1);vals.azi2=m.atan2d(r.salp2,r.calp2);}\nreturn vals;};g.Geodesic.prototype.InverseInt=function(lat1,lon1,lat2,lon2,outmask){var vals={},lon12,lon12s,lonsign,t,swapp,latsign,sbet1,cbet1,sbet2,cbet2,s12x,m12x,dn1,dn2,lam12,slam12,clam12,sig12,calp1,salp1,calp2,salp2,C1a,C2a,C3a,meridian,nvals,ssig1,csig1,ssig2,csig2,eps,omg12,dnm,numit,salp1a,calp1a,salp1b,calp1b,tripn,tripb,v,dv,dalp1,sdalp1,cdalp1,nsalp1,lengthmask,salp0,calp0,alp12,k2,A4,C4a,B41,B42,somg12,comg12,domg12,dbet1,dbet2,salp12,calp12,sdomg12,cdomg12;vals.lat1=lat1=m.LatFix(lat1);vals.lat2=lat2=m.LatFix(lat2);lat1=m.AngRound(lat1);lat2=m.AngRound(lat2);lon12=m.AngDiff(lon1,lon2);lon12s=lon12.e;lon12=lon12.d;if(outmask&g.LONG_UNROLL){vals.lon1=lon1;vals.lon2=(lon1+lon12)+lon12s;}else{vals.lon1=m.AngNormalize(lon1);vals.lon2=m.AngNormalize(lon2);}\nlonsign=m.copysign(1,lon12);lon12*=lonsign;lon12s*=lonsign;lam12=lon12*m.degree;t=m.sincosde(lon12,lon12s);slam12=t.s;clam12=t.c;lon12s=(180-lon12)-lon12s;swapp=Math.abs(lat1)<Math.abs(lat2)||isNaN(lat2)?-1:1;if(swapp<0){lonsign*=-1;[lat2,lat1]=[lat1,lat2];}\nlatsign=m.copysign(1,-lat1);lat1*=latsign;lat2*=latsign;t=m.sincosd(lat1);sbet1=this._f1*t.s;cbet1=t.c;t=m.hypot(sbet1,cbet1);sbet1/=t;cbet1/=t;cbet1=Math.max(g.tiny_,cbet1);t=m.sincosd(lat2);sbet2=this._f1*t.s;cbet2=t.c;t=m.hypot(sbet2,cbet2);sbet2/=t;cbet2/=t;cbet2=Math.max(g.tiny_,cbet2);if(cbet1<-sbet1){if(cbet2===cbet1)\nsbet2=m.copysign(sbet1,sbet2);}else{if(Math.abs(sbet2)===-sbet1)\ncbet2=cbet1;}\ndn1=Math.sqrt(1+this._ep2*m.sq(sbet1));dn2=Math.sqrt(1+this._ep2*m.sq(sbet2));C1a=new Array(g.nC1_+1);C2a=new Array(g.nC2_+1);C3a=new Array(g.nC3_);meridian=lat1===-90||slam12===0;if(meridian){calp1=clam12;salp1=slam12;calp2=1;salp2=0;ssig1=sbet1;csig1=calp1*cbet1;ssig2=sbet2;csig2=calp2*cbet2;sig12=Math.atan2(Math.max(0,csig1*ssig2-ssig1*csig2),csig1*csig2+ssig1*ssig2);nvals=this.Lengths(this._n,sig12,ssig1,csig1,dn1,ssig2,csig2,dn2,cbet1,cbet2,outmask|g.DISTANCE|g.REDUCEDLENGTH,C1a,C2a);s12x=nvals.s12b;m12x=nvals.m12b;if(outmask&g.GEODESICSCALE){vals.M12=nvals.M12;vals.M21=nvals.M21;}\nif(sig12<1||m12x>=0){if(sig12<3*g.tiny_||(sig12<tol0_&&(s12x<0||m12x<0)))\nsig12=m12x=s12x=0;m12x*=this._b;s12x*=this._b;vals.a12=sig12/m.degree;}else\nmeridian=false;}\nsomg12=2;if(!meridian&&sbet1===0&&(this.f<=0||lon12s>=this.f*180)){calp1=calp2=0;salp1=salp2=1;s12x=this.a*lam12;sig12=omg12=lam12/this._f1;m12x=this._b*Math.sin(sig12);if(outmask&g.GEODESICSCALE)\nvals.M12=vals.M21=Math.cos(sig12);vals.a12=lon12/this._f1;}else if(!meridian){nvals=this.InverseStart(sbet1,cbet1,dn1,sbet2,cbet2,dn2,lam12,slam12,clam12,C1a,C2a);sig12=nvals.sig12;salp1=nvals.salp1;calp1=nvals.calp1;if(sig12>=0){salp2=nvals.salp2;calp2=nvals.calp2;dnm=nvals.dnm;s12x=sig12*this._b*dnm;m12x=m.sq(dnm)*this._b*Math.sin(sig12/dnm);if(outmask&g.GEODESICSCALE)\nvals.M12=vals.M21=Math.cos(sig12/dnm);vals.a12=sig12/m.degree;omg12=lam12/(this._f1*dnm);}else{numit=0;salp1a=g.tiny_;calp1a=1;salp1b=g.tiny_;calp1b=-1;for(tripn=false,tripb=false;;++numit){nvals=this.Lambda12(sbet1,cbet1,dn1,sbet2,cbet2,dn2,salp1,calp1,slam12,clam12,numit<maxit1_,C1a,C2a,C3a);v=nvals.lam12;salp2=nvals.salp2;calp2=nvals.calp2;sig12=nvals.sig12;ssig1=nvals.ssig1;csig1=nvals.csig1;ssig2=nvals.ssig2;csig2=nvals.csig2;eps=nvals.eps;domg12=nvals.domg12;dv=nvals.dlam12;if(tripb||!(Math.abs(v)>=(tripn?8:1)*tol0_)||numit==maxit2_)\nbreak;if(v>0&&(numit<maxit1_||calp1/salp1>calp1b/salp1b)){salp1b=salp1;calp1b=calp1;}else if(v<0&&(numit<maxit1_||calp1/salp1<calp1a/salp1a)){salp1a=salp1;calp1a=calp1;}\nif(numit<maxit1_&&dv>0){dalp1=-v/dv;if(Math.abs(dalp1)<Math.PI){sdalp1=Math.sin(dalp1);cdalp1=Math.cos(dalp1);nsalp1=salp1*cdalp1+calp1*sdalp1;if(nsalp1>0){calp1=calp1*cdalp1-salp1*sdalp1;salp1=nsalp1;t=m.hypot(salp1,calp1);salp1/=t;calp1/=t;tripn=Math.abs(v)<=16*tol0_;continue;}}}\nsalp1=(salp1a+salp1b)/2;calp1=(calp1a+calp1b)/2;t=m.hypot(salp1,calp1);salp1/=t;calp1/=t;tripn=false;tripb=(Math.abs(salp1a-salp1)+(calp1a-calp1)<tolb_||Math.abs(salp1-salp1b)+(calp1-calp1b)<tolb_);}\nlengthmask=outmask|(outmask&(g.REDUCEDLENGTH|g.GEODESICSCALE)?g.DISTANCE:g.NONE);nvals=this.Lengths(eps,sig12,ssig1,csig1,dn1,ssig2,csig2,dn2,cbet1,cbet2,lengthmask,C1a,C2a);s12x=nvals.s12b;m12x=nvals.m12b;if(outmask&g.GEODESICSCALE){vals.M12=nvals.M12;vals.M21=nvals.M21;}\nm12x*=this._b;s12x*=this._b;vals.a12=sig12/m.degree;if(outmask&g.AREA){sdomg12=Math.sin(domg12);cdomg12=Math.cos(domg12);somg12=slam12*cdomg12-clam12*sdomg12;comg12=clam12*cdomg12+slam12*sdomg12;}}}\nif(outmask&g.DISTANCE)\nvals.s12=0+s12x;if(outmask&g.REDUCEDLENGTH)\nvals.m12=0+m12x;if(outmask&g.AREA){salp0=salp1*cbet1;calp0=m.hypot(calp1,salp1*sbet1);if(calp0!==0&&salp0!==0){ssig1=sbet1;csig1=calp1*cbet1;ssig2=sbet2;csig2=calp2*cbet2;k2=m.sq(calp0)*this._ep2;eps=k2/(2*(1+Math.sqrt(1+k2))+k2);A4=m.sq(this.a)*calp0*salp0*this._e2;t=m.hypot(ssig1,csig1);ssig1/=t;csig1/=t;t=m.hypot(ssig2,csig2);ssig2/=t;csig2/=t;C4a=new Array(g.nC4_);this.C4f(eps,C4a);B41=g.SinCosSeries(false,ssig1,csig1,C4a);B42=g.SinCosSeries(false,ssig2,csig2,C4a);vals.S12=A4*(B42-B41);}else\nvals.S12=0;if(!meridian&&somg12==2){somg12=Math.sin(omg12);comg12=Math.cos(omg12);}\nif(!meridian&&comg12>-0.7071&&sbet2-sbet1<1.75){domg12=1+comg12;dbet1=1+cbet1;dbet2=1+cbet2;alp12=2*Math.atan2(somg12*(sbet1*dbet2+sbet2*dbet1),domg12*(sbet1*sbet2+dbet1*dbet2));}else{salp12=salp2*calp1-calp2*salp1;calp12=calp2*calp1+salp2*salp1;if(salp12===0&&calp12<0){salp12=g.tiny_*calp1;calp12=-1;}\nalp12=Math.atan2(salp12,calp12);}\nvals.S12+=this._c2*alp12;vals.S12*=swapp*lonsign*latsign;vals.S12+=0;}\nif(swapp<0){[salp2,salp1]=[salp1,salp2];[calp2,calp1]=[calp1,calp2];if(outmask&g.GEODESICSCALE){[vals.M21,vals.M12]=[vals.M12,vals.M21];}}\nsalp1*=swapp*lonsign;calp1*=swapp*latsign;salp2*=swapp*lonsign;calp2*=swapp*latsign;return{vals:vals,salp1:salp1,calp1:calp1,salp2:salp2,calp2:calp2};};g.Geodesic.prototype.GenDirect=function(lat1,lon1,azi1,arcmode,s12_a12,outmask){var line;if(!outmask)outmask=g.STANDARD;else if(outmask===g.LONG_UNROLL)outmask|=g.STANDARD;if(!arcmode)outmask|=g.DISTANCE_IN;line=new l.GeodesicLine(this,lat1,lon1,azi1,outmask);return line.GenPosition(arcmode,s12_a12,outmask);};g.Geodesic.prototype.Direct=function(lat1,lon1,azi1,s12,outmask){return this.GenDirect(lat1,lon1,azi1,false,s12,outmask);};g.Geodesic.prototype.ArcDirect=function(lat1,lon1,azi1,a12,outmask){return this.GenDirect(lat1,lon1,azi1,true,a12,outmask);};g.Geodesic.prototype.Line=function(lat1,lon1,azi1,caps){return new l.GeodesicLine(this,lat1,lon1,azi1,caps);};g.Geodesic.prototype.DirectLine=function(lat1,lon1,azi1,s12,caps){return this.GenDirectLine(lat1,lon1,azi1,false,s12,caps);};g.Geodesic.prototype.ArcDirectLine=function(lat1,lon1,azi1,a12,caps){return this.GenDirectLine(lat1,lon1,azi1,true,a12,caps);};g.Geodesic.prototype.GenDirectLine=function(lat1,lon1,azi1,arcmode,s12_a12,caps){var t;if(!caps)caps=g.STANDARD|g.DISTANCE_IN;if(!arcmode)caps|=g.DISTANCE_IN;t=new l.GeodesicLine(this,lat1,lon1,azi1,caps);t.GenSetDistance(arcmode,s12_a12);return t;};g.Geodesic.prototype.InverseLine=function(lat1,lon1,lat2,lon2,caps){var r,t,azi1;if(!caps)caps=g.STANDARD|g.DISTANCE_IN;r=this.InverseInt(lat1,lon1,lat2,lon2,g.ARC);azi1=m.atan2d(r.salp1,r.calp1);if(caps&(g.OUT_MASK&g.DISTANCE_IN))caps|=g.DISTANCE;t=new l.GeodesicLine(this,lat1,lon1,azi1,caps,r.salp1,r.calp1);t.SetArc(r.vals.a12);return t;};g.Geodesic.prototype.Polygon=function(polyline){return new p.PolygonArea(this,polyline);};g.WGS84=new g.Geodesic(c.WGS84.a,c.WGS84.f);})(geodesic.Geodesic,geodesic.GeodesicLine,geodesic.PolygonArea,geodesic.Math,geodesic.Constants);(function(g,l,m){\"use strict\";l.GeodesicLine=function(geod,lat1,lon1,azi1,caps,salp1,calp1){var t,cbet1,sbet1,eps,s,c;if(!caps)caps=g.STANDARD|g.DISTANCE_IN;this.a=geod.a;this.f=geod.f;this._b=geod._b;this._c2=geod._c2;this._f1=geod._f1;this.caps=caps|g.LATITUDE|g.AZIMUTH|g.LONG_UNROLL;this.lat1=m.LatFix(lat1);this.lon1=lon1;if(typeof salp1==='undefined'||typeof calp1==='undefined'){this.azi1=m.AngNormalize(azi1);t=m.sincosd(m.AngRound(this.azi1));this.salp1=t.s;this.calp1=t.c;}else{this.azi1=azi1;this.salp1=salp1;this.calp1=calp1;}\nt=m.sincosd(m.AngRound(this.lat1));sbet1=this._f1*t.s;cbet1=t.c;t=m.hypot(sbet1,cbet1);sbet1/=t;cbet1/=t;cbet1=Math.max(g.tiny_,cbet1);this._dn1=Math.sqrt(1+geod._ep2*m.sq(sbet1));this._salp0=this.salp1*cbet1;this._calp0=m.hypot(this.calp1,this.salp1*sbet1);this._ssig1=sbet1;this._somg1=this._salp0*sbet1;this._csig1=this._comg1=sbet1!==0||this.calp1!==0?cbet1*this.calp1:1;t=m.hypot(this._ssig1,this._csig1);this._ssig1/=t;this._csig1/=t;this._k2=m.sq(this._calp0)*geod._ep2;eps=this._k2/(2*(1+Math.sqrt(1+this._k2))+this._k2);if(this.caps&g.CAP_C1){this._A1m1=g.A1m1f(eps);this._C1a=new Array(g.nC1_+1);g.C1f(eps,this._C1a);this._B11=g.SinCosSeries(true,this._ssig1,this._csig1,this._C1a);s=Math.sin(this._B11);c=Math.cos(this._B11);this._stau1=this._ssig1*c+this._csig1*s;this._ctau1=this._csig1*c-this._ssig1*s;}\nif(this.caps&g.CAP_C1p){this._C1pa=new Array(g.nC1p_+1);g.C1pf(eps,this._C1pa);}\nif(this.caps&g.CAP_C2){this._A2m1=g.A2m1f(eps);this._C2a=new Array(g.nC2_+1);g.C2f(eps,this._C2a);this._B21=g.SinCosSeries(true,this._ssig1,this._csig1,this._C2a);}\nif(this.caps&g.CAP_C3){this._C3a=new Array(g.nC3_);geod.C3f(eps,this._C3a);this._A3c=-this.f*this._salp0*geod.A3f(eps);this._B31=g.SinCosSeries(true,this._ssig1,this._csig1,this._C3a);}\nif(this.caps&g.CAP_C4){this._C4a=new Array(g.nC4_);geod.C4f(eps,this._C4a);this._A4=m.sq(this.a)*this._calp0*this._salp0*geod._e2;this._B41=g.SinCosSeries(false,this._ssig1,this._csig1,this._C4a);}\nthis.a13=this.s13=NaN;};l.GeodesicLine.prototype.GenPosition=function(arcmode,s12_a12,outmask){var vals={},sig12,ssig12,csig12,B12,AB1,ssig2,csig2,tau12,s,c,serr,omg12,lam12,lon12,E,sbet2,cbet2,somg2,comg2,salp2,calp2,dn2,B22,AB2,J12,t,B42,salp12,calp12;if(!outmask)outmask=g.STANDARD;else if(outmask===g.LONG_UNROLL)outmask|=g.STANDARD;outmask&=this.caps&g.OUT_MASK;vals.lat1=this.lat1;vals.azi1=this.azi1;vals.lon1=outmask&g.LONG_UNROLL?this.lon1:m.AngNormalize(this.lon1);if(arcmode)\nvals.a12=s12_a12;else\nvals.s12=s12_a12;if(!(arcmode||(this.caps&g.DISTANCE_IN&g.OUT_MASK))){vals.a12=NaN;return vals;}\nB12=0;AB1=0;if(arcmode){sig12=s12_a12*m.degree;t=m.sincosd(s12_a12);ssig12=t.s;csig12=t.c;}else{tau12=s12_a12/(this._b*(1+this._A1m1));s=Math.sin(tau12);c=Math.cos(tau12);B12=-g.SinCosSeries(true,this._stau1*c+this._ctau1*s,this._ctau1*c-this._stau1*s,this._C1pa);sig12=tau12-(B12-this._B11);ssig12=Math.sin(sig12);csig12=Math.cos(sig12);if(Math.abs(this.f)>0.01){ssig2=this._ssig1*csig12+this._csig1*ssig12;csig2=this._csig1*csig12-this._ssig1*ssig12;B12=g.SinCosSeries(true,ssig2,csig2,this._C1a);serr=(1+this._A1m1)*(sig12+(B12-this._B11))-\ns12_a12/this._b;sig12=sig12-serr/Math.sqrt(1+this._k2*m.sq(ssig2));ssig12=Math.sin(sig12);csig12=Math.cos(sig12);}}\nssig2=this._ssig1*csig12+this._csig1*ssig12;csig2=this._csig1*csig12-this._ssig1*ssig12;dn2=Math.sqrt(1+this._k2*m.sq(ssig2));if(outmask&(g.DISTANCE|g.REDUCEDLENGTH|g.GEODESICSCALE)){if(arcmode||Math.abs(this.f)>0.01)\nB12=g.SinCosSeries(true,ssig2,csig2,this._C1a);AB1=(1+this._A1m1)*(B12-this._B11);}\nsbet2=this._calp0*ssig2;cbet2=m.hypot(this._salp0,this._calp0*csig2);if(cbet2===0)\ncbet2=csig2=g.tiny_;salp2=this._salp0;calp2=this._calp0*csig2;if(arcmode&&(outmask&g.DISTANCE))\nvals.s12=this._b*((1+this._A1m1)*sig12+AB1);if(outmask&g.LONGITUDE){somg2=this._salp0*ssig2;comg2=csig2;E=m.copysign(1,this._salp0);omg12=outmask&g.LONG_UNROLL?E*(sig12-\n(Math.atan2(ssig2,csig2)-\nMath.atan2(this._ssig1,this._csig1))+\n(Math.atan2(E*somg2,comg2)-\nMath.atan2(E*this._somg1,this._comg1))):Math.atan2(somg2*this._comg1-comg2*this._somg1,comg2*this._comg1+somg2*this._somg1);lam12=omg12+this._A3c*(sig12+(g.SinCosSeries(true,ssig2,csig2,this._C3a)-\nthis._B31));lon12=lam12/m.degree;vals.lon2=outmask&g.LONG_UNROLL?this.lon1+lon12:m.AngNormalize(m.AngNormalize(this.lon1)+m.AngNormalize(lon12));}\nif(outmask&g.LATITUDE)\nvals.lat2=m.atan2d(sbet2,this._f1*cbet2);if(outmask&g.AZIMUTH)\nvals.azi2=m.atan2d(salp2,calp2);if(outmask&(g.REDUCEDLENGTH|g.GEODESICSCALE)){B22=g.SinCosSeries(true,ssig2,csig2,this._C2a);AB2=(1+this._A2m1)*(B22-this._B21);J12=(this._A1m1-this._A2m1)*sig12+(AB1-AB2);if(outmask&g.REDUCEDLENGTH)\nvals.m12=this._b*((dn2*(this._csig1*ssig2)-\nthis._dn1*(this._ssig1*csig2))-\nthis._csig1*csig2*J12);if(outmask&g.GEODESICSCALE){t=this._k2*(ssig2-this._ssig1)*(ssig2+this._ssig1)/(this._dn1+dn2);vals.M12=csig12+\n(t*ssig2-csig2*J12)*this._ssig1/this._dn1;vals.M21=csig12-\n(t*this._ssig1-this._csig1*J12)*ssig2/dn2;}}\nif(outmask&g.AREA){B42=g.SinCosSeries(false,ssig2,csig2,this._C4a);if(this._calp0===0||this._salp0===0){salp12=salp2*this.calp1-calp2*this.salp1;calp12=calp2*this.calp1+salp2*this.salp1;}else{salp12=this._calp0*this._salp0*(csig12<=0?this._csig1*(1-csig12)+ssig12*this._ssig1:ssig12*(this._csig1*ssig12/(1+csig12)+this._ssig1));calp12=m.sq(this._salp0)+m.sq(this._calp0)*this._csig1*csig2;}\nvals.S12=this._c2*Math.atan2(salp12,calp12)+\nthis._A4*(B42-this._B41);}\nif(!arcmode)\nvals.a12=sig12/m.degree;return vals;};l.GeodesicLine.prototype.Position=function(s12,outmask){return this.GenPosition(false,s12,outmask);};l.GeodesicLine.prototype.ArcPosition=function(a12,outmask){return this.GenPosition(true,a12,outmask);};l.GeodesicLine.prototype.GenSetDistance=function(arcmode,s13_a13){if(arcmode)\nthis.SetArc(s13_a13);else\nthis.SetDistance(s13_a13);};l.GeodesicLine.prototype.SetDistance=function(s13){var r;this.s13=s13;r=this.GenPosition(false,this.s13,g.ARC);this.a13=0+r.a12;};l.GeodesicLine.prototype.SetArc=function(a13){var r;this.a13=a13;r=this.GenPosition(true,this.a13,g.DISTANCE);this.s13=0+r.s12;};})(geodesic.Geodesic,geodesic.GeodesicLine,geodesic.Math);(function(p,g,m,a){\"use strict\";var transit,transitdirect,AreaReduceA,AreaReduceB;transit=function(lon1,lon2){var lon12=m.AngDiff(lon1,lon2).d;lon1=m.AngNormalize(lon1);lon2=m.AngNormalize(lon2);return lon12>0&&((lon1<0&&lon2>=0)||(lon1>0&&lon2===0))?1:(lon12<0&&lon1>=0&&lon2<0?-1:0);};transitdirect=function(lon1,lon2){lon1=lon1%720;lon2=lon2%720;return((0<=lon2&&lon2<360)||lon2<-360?0:1)-\n((0<=lon1&&lon1<360)||lon1<-360?0:1);};AreaReduceA=function(area,area0,crossings,reverse,sign){area.Remainder(area0);if(crossings&1)\narea.Add((area.Sum()<0?1:-1)*area0/2);if(!reverse)\narea.Negate();if(sign){if(area.Sum()>area0/2)\narea.Add(-area0);else if(area.Sum()<=-area0/2)\narea.Add(+area0);}else{if(area.Sum()>=area0)\narea.Add(-area0);else if(area.Sum()<0)\narea.Add(+area0);}\nreturn 0+area.Sum();};AreaReduceB=function(area,area0,crossings,reverse,sign){area=m.remainder(area,area0);if(crossings&1)\narea+=(area<0?1:-1)*area0/2;if(!reverse)\narea*=-1;if(sign){if(area>area0/2)\narea-=area0;else if(area<=-area0/2)\narea+=area0;}else{if(area>=area0)\narea-=area0;else if(area<0)\narea+=area0;}\nreturn 0+area;};p.PolygonArea=function(geod,polyline){this._geod=geod;this.a=this._geod.a;this.f=this._geod.f;this._area0=4*Math.PI*geod._c2;this.polyline=!polyline?false:polyline;this._mask=g.LATITUDE|g.LONGITUDE|g.DISTANCE|(this.polyline?g.NONE:g.AREA|g.LONG_UNROLL);if(!this.polyline)\nthis._areasum=new a.Accumulator(0);this._perimetersum=new a.Accumulator(0);this.Clear();};p.PolygonArea.prototype.Clear=function(){this.num=0;this._crossings=0;if(!this.polyline)\nthis._areasum.Set(0);this._perimetersum.Set(0);this._lat0=this._lon0=this.lat=this.lon=NaN;};p.PolygonArea.prototype.AddPoint=function(lat,lon){var t;if(this.num===0){this._lat0=this.lat=lat;this._lon0=this.lon=lon;}else{t=this._geod.Inverse(this.lat,this.lon,lat,lon,this._mask);this._perimetersum.Add(t.s12);if(!this.polyline){this._areasum.Add(t.S12);this._crossings+=transit(this.lon,lon);}\nthis.lat=lat;this.lon=lon;}\n++this.num;};p.PolygonArea.prototype.AddEdge=function(azi,s){var t;if(this.num){t=this._geod.Direct(this.lat,this.lon,azi,s,this._mask);this._perimetersum.Add(s);if(!this.polyline){this._areasum.Add(t.S12);this._crossings+=transitdirect(this.lon,t.lon2);}\nthis.lat=t.lat2;this.lon=t.lon2;}\n++this.num;};p.PolygonArea.prototype.Compute=function(reverse,sign){var vals={number:this.num},t,tempsum;if(this.num<2){vals.perimeter=0;if(!this.polyline)\nvals.area=0;return vals;}\nif(this.polyline){vals.perimeter=this._perimetersum.Sum();return vals;}\nt=this._geod.Inverse(this.lat,this.lon,this._lat0,this._lon0,this._mask);vals.perimeter=this._perimetersum.Sum(t.s12);tempsum=new a.Accumulator(this._areasum);tempsum.Add(t.S12);vals.area=AreaReduceA(tempsum,this._area0,this._crossings+transit(this.lon,this._lon0),reverse,sign);return vals;};p.PolygonArea.prototype.TestPoint=function(lat,lon,reverse,sign){var vals={number:this.num+1},t,tempsum,crossings,i;if(this.num===0){vals.perimeter=0;if(!this.polyline)\nvals.area=0;return vals;}\nvals.perimeter=this._perimetersum.Sum();tempsum=this.polyline?0:this._areasum.Sum();crossings=this._crossings;for(i=0;i<(this.polyline?1:2);++i){t=this._geod.Inverse(i===0?this.lat:lat,i===0?this.lon:lon,i!==0?this._lat0:lat,i!==0?this._lon0:lon,this._mask);vals.perimeter+=t.s12;if(!this.polyline){tempsum+=t.S12;crossings+=transit(i===0?this.lon:lon,i!==0?this._lon0:lon);}}\nif(this.polyline)\nreturn vals;vals.area=AreaReduceB(tempsum,this._area0,crossings,reverse,sign);return vals;};p.PolygonArea.prototype.TestEdge=function(azi,s,reverse,sign){var vals={number:this.num?this.num+1:0},t,tempsum,crossings;if(this.num===0)\nreturn vals;vals.perimeter=this._perimetersum.Sum()+s;if(this.polyline)\nreturn vals;tempsum=this._areasum.Sum();crossings=this._crossings;t=this._geod.Direct(this.lat,this.lon,azi,s,this._mask);tempsum+=t.S12;crossings+=transitdirect(this.lon,t.lon2);crossings+=transit(t.lon2,this._lon0);t=this._geod.Inverse(t.lat2,t.lon2,this._lat0,this._lon0,this._mask);vals.perimeter+=t.s12;tempsum+=t.S12;vals.area=AreaReduceB(tempsum,this._area0,crossings,reverse,sign);return vals;};})(geodesic.PolygonArea,geodesic.Geodesic,geodesic.Math,geodesic.Accumulator);cb(geodesic);})(function(geo){if(typeof module==='object'&&module.exports){module.exports=geo;}else if(typeof define==='function'&&define.amd){define('geographiclib-geodesic',[],function(){return geo;});}else{window.geodesic=geo;}});","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nexport function init() {\n  // double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['ortho'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Quadrilateralized Spherical Cube';\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = { x: 0, y: 0 };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = { value: 0 };\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) { // if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; // lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = { lam: 0, phi: 0 };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = { value: 0 };\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = ['Quadrilateralized Spherical Cube', 'Quadrilateralized_Spherical_Cube', 'qsc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n  [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n  [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n  [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n  [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n  [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n  [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n  [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n  [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n  [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n  [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n  [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n  [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n  [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n  [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n  [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n  [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n  [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n  [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n  [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n  [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n  [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n  [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n  [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n  [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n  [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n  [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n  [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n  [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n  [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n  [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n  [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n  [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n  [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n  [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n  [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n  [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n  [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n  [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || 'Robinson';\n}\n\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\n\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) { // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    }\n    // linear interpolation in 5 degree interval\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]);\n    // find t so that poly3_val(coefs, t) = ll.y\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\n\nexport var names = ['Robinson', 'robin'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n  geodeticToGeocentric,\n  geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n  this.name = 'geocent';\n}\n\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\n\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\n\nexport var names = ['Geocentric', 'geocentric', 'geocent', 'Geocent'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from '../constants/values';\nimport hypot from '../common/hypot';\n\nvar params = {\n  h: { def: 100000, num: true }, // default is Karman line, no default in PROJ.7\n  azi: { def: 0, num: true, degrees: true }, // default is North\n  tilt: { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true }, // default is Greenwich, conversion to rad is automatic\n  lat0: { def: 0, num: true } // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === 'undefined') {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error('Invalid height');\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = ['Tilted_Perspective', 'tpers'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n  this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = 'Geostationary Satellite View';\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  }\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n  p.x = p.x + this.long0;\n  return p;\n}\n\nexport var names = ['Geostationary Satellite View', 'Geostationary_Satellite', 'geos'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from '../common/adjust_lon';\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n    paramLatSq = paramLat * paramLat,\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat)\n    / (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n    NITER = 12,\n    paramLat = p.y,\n    paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n      break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq))\n    / Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['eqearth', 'Equal Earth', 'Equal_Earth'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lat from '../common/adjust_lat';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\nimport pj_enfn from '../common/pj_enfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport { HALF_PI } from '../constants/values';\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    } else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['bonne', 'Bonne (Werner lat_1=90)'];\nexport default {\n  init: init,\n  names: names\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$448DI","$ebcW3","$dpRHA","default","defs","setExtent","$2f5e3cce9f26ffcd$export$6503ec6e8aabbaf","$9qhtr","$l72II","$1wgRP","proj4","i","j","projCodes","keys","len","length","def","units","projName","addProjection","axisOrientation","axis","metersPerUnit","to_meter","code1","proj1","code2","proj2","addEquivalentProjections","transform","addCoordinateTransforms","createSafeCoordinateTransform","forward","inverse","$a52c207aab93bf4f$export$2e2bcd8739ae039","$66mQQ","$38qqf","$iCFRA","$5vTfu","$ezj1P","$flUkq","$ceNev","$4hMrQ","$j48cx","defaultDatum","Proj","WGS84","Point","toPoint","nadgrid","mgrs","version","$471507637a3ff861$export$2e2bcd8739ae039","$471507637a3ff861$var$wgs84","$471507637a3ff861$var$transformer","from","to","coords","enforceAxis","transformedArray","out","Array","isArray","x","NaN","y","name","concat","slice","z","forEach","key","$471507637a3ff861$var$checkProj","item","oProj","fromProj","toProj","coord","obj","single","$24869d6338533b3b$export$2e2bcd8739ae039","$giDQh","$cWauz","$1Wo5P","$d8b9d","$gMdFS","$3MCqb","$hzXAi","$24869d6338533b3b$var$Projection","srsCode","callback","error","json","ourProj","projections","datumCode","datumDef","datum_params","towgs84","split","ellps","ellipse","datumName","k0","lat1","lat0","sphere_","sphere","a","b","rf","ecc","eccentricity","R_A","nadgrids","getNadgrids","datumObj","datum","es","ep2","start","$bddd3b9c0d2064cd$export$2e2bcd8739ae039","$7UVTv","$7zrM7","$bddd3b9c0d2064cd$var$codes","indexOf","$bddd3b9c0d2064cd$var$checkMercator","auth","maybeProjStr","$bddd3b9c0d2064cd$var$checkProjStr","ext","$a9b3183caccb3297$export$2e2bcd8739ae039","$cR6T8","$a9b3183caccb3297$var$defs","that","arguments","charAt","map","apply","EPSG","ESRI","IAU2000","console","log","$95bfc720255032a6$export$2e2bcd8739ae039","GOOGLE","$583158df16d3522c$export$2e2bcd8739ae039","$gyVUi","$gyWgF","$6CY0Z","defData","paramName","paramVal","paramOutname","self","paramObj","trim","filter","reduce","p","push","toLowerCase","params","proj","parseFloat","lat_0","D2R","lat_1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k","r","r_a","zone","parseInt","south","utmSouth","unit","from_greenwich","pm","legalAxis","substr","approx","$c0ecbd71ed29ee86$export$3a3ed3e590e8ec27","$c0ecbd71ed29ee86$export$8cab19b7f383a7a7","$c0ecbd71ed29ee86$export$83d26ae02793dd10","$c0ecbd71ed29ee86$export$ab5bf8c731b6bbbb","$c0ecbd71ed29ee86$export$8df4c7729d8ed58d","$c0ecbd71ed29ee86$export$d612c03b7390d945","$c0ecbd71ed29ee86$export$59af086d7527ec46","$c0ecbd71ed29ee86$export$9b798f9d78b99fc0","$c0ecbd71ed29ee86$export$e0b9011552f3b2f7","$c0ecbd71ed29ee86$export$f504979d7e0a75c7","$c0ecbd71ed29ee86$export$d7977f56a0faa834","$c0ecbd71ed29ee86$export$9e703428410a9c7b","$c0ecbd71ed29ee86$export$bb54dde5565ed6e3","$c0ecbd71ed29ee86$export$2aa89dbfb8b504bb","$c0ecbd71ed29ee86$export$ed6012a68c0f4a70","$c0ecbd71ed29ee86$export$456934b8be7498c3","$c0ecbd71ed29ee86$export$10cb69dd603c11b0","$c0ecbd71ed29ee86$export$6eec49b1a6289c4e","$c0ecbd71ed29ee86$export$703a92fc6506ffb9","Math","PI","$c0ed0517e336f22b$export$2e2bcd8739ae039","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","$4d34d8675ead8d22$export$2e2bcd8739ae039","mm","cm","ft","fath","kmi","km","mi","yd","ch","link","dm","in","$ccc3ecc4732a4173$export$2e2bcd8739ae039","$ccc3ecc4732a4173$var$ignoredChar","testkey","lkey","replace","processedKey","$5c3aabf591259c07$export$2e2bcd8739ae039","$5uKqK","$ad1Gh","$6Pz8X","$7SVqc","$hwbbo","$am47V","$5c3aabf591259c07$var$knownTypes","wkt","transformPROJJSON","detectWKTVersion","lisp","projjson","buildPROJJSON","type","sExpr","$5c3aabf591259c07$var$cleanWKT","ii","$5c3aabf591259c07$var$setPropertiesFromWkt","AUTHORITY","authority","title","local","PROJECTION","AXIS","axisOrder","UNIT","convert","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","input","TOWGS84","isFinite","d2r","list","outName","inName","applyProjectionDefaults","$4003c53a8a2e570b$export$48d0005f67ba915","$g1F38","$7HCiu","root","builder","find","child","$baac94ed6bfdac10$export$2e2bcd8739ae039","$fYQzQ","$baac94ed6bfdac10$var$PROJJSONBuilder2015","node","result","coordinate_system","subtype","usage","$ba253e570caf793b$export$2e2bcd8739ae039","getId","idNode","convertUnit","conversion_factor","conversionFactor","convertAxis","direction","abbreviationMatch","match","abbreviation","toUpperCase","orderNode","order","unitNode","extractAxes","sort","base_crs","conversion","csNode","lengthUnitNode","datumOrEnsembleNode","datumOrEnsemble","datum_ensemble","primem","prime_meridian","longitude","ellipsoid","members","member","accuracyNode","accuracy","ellipsoidNode","semi_major_axis","inverse_flattening","method","parameters","param","value","sourceCrsNode","sourceCrsContent","source_crs","targetCrsNode","targetCrsContent","target_crs","transformationNode","transformation","scaleDifference","round","keyword","$59ba41957df98247$export$2e2bcd8739ae039","$59ba41957df98247$var$PROJJSONBuilder2019","usageNode","scope","area","bbox","$76ec6c11849d6ec6$export$9362d65e4771b5d5","normalizedWKT","includes","$4f92c43f9960a1f4$export$2e2bcd8739ae039","txt","parser","$4f92c43f9960a1f4$var$Parser","output","$4f92c43f9960a1f4$var$whitespace","$4f92c43f9960a1f4$var$latin","$4f92c43f9960a1f4$var$keyword","$4f92c43f9960a1f4$var$endThings","$4f92c43f9960a1f4$var$digets","text","level","place","stack","currentObject","state","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","$5bda1e467f1c2649$var$mapit","unshift","thing","newObj","$5bda1e467f1c2649$export$337bc7a3aef1f775","shift","$cc0e197ab4726924$export$b04e619e90585ec3","$cc0e197ab4726924$var$calculateEllipsoid","join","$cc0e197ab4726924$var$processUnit","paramValue","undefined","latitude_of_false_origin","longitude_of_false_origin","latitude_of_standard_parallel","latitude_of_1st_standard_parallel","latitude_of_2nd_standard_parallel","latitude_of_projection_centre","longitude_of_projection_centre","easting_at_false_origin","northing_at_false_origin","latitude_of_natural_origin","longitude_of_natural_origin","longitude_of_origin","false_easting","easting_at_projection_centre","false_northing","northing_at_projection_centre","standard_parallel_1","standard_parallel_2","scale_factor_at_natural_origin","scale_factor_at_projection_centre","scale_factor_on_pseudo_standard_parallel","azimuth","azimuth_at_projection_centre","angle_from_rectified_to_skew_grid","$cc0e197ab4726924$var$toValue","valueOrObject","radius","semi_minor_axis","$789f28efd4cd941a$export$e726aea149b4fd71","$789f28efd4cd941a$export$d6def86a6ec68808","normalizedProjName","$96b30a4c80088893$export$2e2bcd8739ae039","destination","source","property","$169de593aeaa174c$export$9ee0bb5510679155","$169de593aeaa174c$export$2e2bcd8739ae039","$ioIYn","$iMMJV","$169de593aeaa174c$var$projs","$169de593aeaa174c$var$names","$169de593aeaa174c$var$projStore","$169de593aeaa174c$export$e16d8520af44a096","names","add","$d64d5a882433f366$export$2e2bcd8739ae039","$bi5ZC","$a9oRf","$3xC66","$2AZR8","con","sqrt","cos","sin","lon","lat","R2D","abs","HALF_PI","EPSLN","tan","FORTPI","sinphi","ts","atan","exp","$8386063044328ea8$export$2e2bcd8739ae039","eccent","cosphi","$763e06e438986b6c$export$2e2bcd8739ae039","$boTd3","SPI","TWO_PI","$84ccc316da8510bf$export$2e2bcd8739ae039","$2942018063c2eff1$export$2e2bcd8739ae039","phi","pow","$1e3eece278ef2a71$export$2e2bcd8739ae039","dphi","eccnth","$dad2845bfa7291b9$export$174bb771924e7eb1","pt","$dad2845bfa7291b9$export$2e2bcd8739ae039","$98f4ab684186b766$export$e3d7bf2ed2a7479f","$98f4ab684186b766$export$b2690196de52b050","$bO5FE","$98f4ab684186b766$var$WGS84","a2","b2","SIXTH","RA4","RA6","$8988c354f092c217$export$2e2bcd8739ae039","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk80ign","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","$c36bbc8057de3d00$export$2e2bcd8739ae039","$c36bbc8057de3d00$var$datums","wgs84","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","mgi","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","EPSG_5451","IGNF_LURESG","EPSG_4614","EPSG_4615","ESRI_37241","ESRI_37249","ESRI_37245","EPSG_4178","EPSG_4622","EPSG_4625","EPSG_5252","EPSG_4314","EPSG_4282","EPSG_4231","EPSG_4274","EPSG_4134","EPSG_4254","EPSG_4159","EPSG_4687","EPSG_4227","EPSG_4746","EPSG_4745","EPSG_6311","EPSG_4289","EPSG_4230","EPSG_4154","EPSG_4156","EPSG_4299","EPSG_4179","EPSG_4313","EPSG_4194","EPSG_4195","EPSG_4196","EPSG_4611","EPSG_4633","EPSG_4641","EPSG_4643","EPSG_4300","EPSG_4188","EPSG_4660","EPSG_4662","EPSG_3906","EPSG_4307","EPSG_6892","EPSG_4690","EPSG_4691","EPSG_4629","EPSG_4630","EPSG_4692","EPSG_9333","EPSG_9059","EPSG_4312","EPSG_4123","EPSG_4309","ESRI_104106","EPSG_4281","EPSG_4322","EPSG_4324","EPSG_4284","EPSG_4277","EPSG_4207","EPSG_4688","EPSG_4689","EPSG_4720","EPSG_4273","EPSG_4240","EPSG_4817","ESRI_104131","EPSG_4265","EPSG_4263","EPSG_4298","EPSG_4270","EPSG_4229","EPSG_4220","EPSG_4214","EPSG_4232","EPSG_4238","EPSG_4168","EPSG_4131","EPSG_4152","EPSG_5228","EPSG_8351","EPSG_4683","EPSG_4133","EPSG_7373","EPSG_9075","EPSG_9072","EPSG_9294","EPSG_4212","EPSG_4191","EPSG_4237","EPSG_4740","EPSG_4124","EPSG_5681","EPSG_4141","EPSG_4204","EPSG_4319","EPSG_4200","EPSG_4130","EPSG_4127","EPSG_4149","EPSG_4617","EPSG_4663","EPSG_4664","EPSG_4665","EPSG_4666","EPSG_4756","EPSG_4723","EPSG_4726","EPSG_4267","EPSG_5365","EPSG_4218","EPSG_4242","EPSG_4216","ESRI_104105","ESRI_104129","EPSG_4673","EPSG_4202","EPSG_4203","EPSG_3819","EPSG_8694","EPSG_4145","EPSG_4283","EPSG_4317","EPSG_4272","EPSG_4248","EPSG_5561","EPSG_5233","ESRI_104130","ESRI_104102","ESRI_37207","EPSG_4675","ESRI_104109","ESRI_104112","ESRI_104113","IGNF_WGS72G","IGNF_NTFG","IGNF_EFATE57G","IGNF_PGP50G","IGNF_REUN47G","IGNF_CSG67G","IGNF_GUAD48G","IGNF_TAHI51G","IGNF_TAHAAG","IGNF_NUKU72G","IGNF_PETRELS72G","IGNF_WALL78G","IGNF_MAYO50G","IGNF_TANNAG","IGNF_IGN72G","IGNF_ATIGG","IGNF_FANGA84G","IGNF_RUSAT84G","IGNF_KAUE70G","IGNF_MOP90G","IGNF_MHPF67G","IGNF_TAHI79G","IGNF_ANAA92G","IGNF_MARQUI72G","IGNF_APAT86G","IGNF_TUBU69G","IGNF_STPM50G","EPSG_4150","EPSG_4754","ESRI_104101","EPSG_4693","EPSG_6207","EPSG_4153","EPSG_4132","EPSG_4221","EPSG_4266","EPSG_4193","EPSG_5340","EPSG_4246","EPSG_4318","EPSG_4121","EPSG_4223","EPSG_4158","EPSG_4285","EPSG_4613","EPSG_4607","EPSG_4475","EPSG_4208","EPSG_4743","EPSG_4710","EPSG_7881","EPSG_4682","EPSG_4739","EPSG_4679","EPSG_4750","EPSG_4644","EPSG_4695","EPSG_4292","EPSG_4302","EPSG_4143","EPSG_4606","EPSG_4699","EPSG_4247","EPSG_4160","EPSG_4161","EPSG_9251","EPSG_9253","EPSG_4297","EPSG_4269","EPSG_4301","EPSG_4618","EPSG_4612","EPSG_4678","EPSG_4250","EPSG_4144","EPSG_4147","EPSG_4259","EPSG_4164","EPSG_4211","EPSG_4182","EPSG_4224","EPSG_4225","EPSG_5527","EPSG_4752","EPSG_4310","EPSG_9248","EPSG_4680","EPSG_4701","EPSG_4706","EPSG_4805","EPSG_4201","EPSG_4210","EPSG_4183","EPSG_4139","EPSG_4668","EPSG_4717","EPSG_4732","EPSG_4280","EPSG_4209","EPSG_4261","EPSG_4658","EPSG_4721","EPSG_4222","EPSG_4601","EPSG_4602","EPSG_4603","EPSG_4605","EPSG_4621","EPSG_4657","EPSG_4316","EPSG_4642","EPSG_4698","EPSG_4192","EPSG_4311","EPSG_4135","ESRI_104138","EPSG_4245","EPSG_4142","EPSG_4213","EPSG_4253","EPSG_4129","EPSG_4713","EPSG_4239","EPSG_4146","EPSG_4155","EPSG_4165","EPSG_4672","EPSG_4236","EPSG_4251","EPSG_4271","EPSG_4175","EPSG_4716","EPSG_4315","EPSG_4744","EPSG_4244","EPSG_4293","EPSG_4714","EPSG_4736","EPSG_6883","EPSG_6894","EPSG_4205","EPSG_4256","EPSG_4262","EPSG_4604","EPSG_4169","EPSG_4620","EPSG_4184","EPSG_4616","EPSG_9403","EPSG_4684","EPSG_4708","EPSG_4707","EPSG_4709","EPSG_4712","EPSG_4711","EPSG_4718","EPSG_4719","EPSG_4724","EPSG_4725","EPSG_4735","EPSG_4722","EPSG_4728","EPSG_4734","EPSG_4727","EPSG_4729","EPSG_4730","EPSG_4733","ESRI_37218","ESRI_37240","ESRI_37221","ESRI_4305","ESRI_104139","EPSG_4748","EPSG_4219","EPSG_4255","EPSG_4257","EPSG_4646","EPSG_6881","EPSG_6882","EPSG_4715","IGNF_RGF93GDD","IGNF_RGM04GDD","IGNF_RGSPM06GDD","IGNF_RGTAAF07GDD","IGNF_RGFG95GDD","IGNF_RGNCG","IGNF_RGPFGDD","IGNF_ETRS89G","IGNF_RGR92GDD","EPSG_4173","EPSG_4180","EPSG_4619","EPSG_4667","EPSG_4075","EPSG_6706","EPSG_7798","EPSG_4661","EPSG_4669","EPSG_8685","EPSG_4151","EPSG_9702","EPSG_4758","EPSG_4761","EPSG_4765","EPSG_8997","EPSG_4023","EPSG_4670","EPSG_4694","EPSG_4148","EPSG_4163","EPSG_4167","EPSG_4189","EPSG_4190","EPSG_4176","EPSG_4659","EPSG_3824","EPSG_3889","EPSG_4046","EPSG_4081","EPSG_4558","EPSG_4483","EPSG_5013","EPSG_5264","EPSG_5324","EPSG_5354","EPSG_5371","EPSG_5373","EPSG_5381","EPSG_5393","EPSG_5489","EPSG_5593","EPSG_6135","EPSG_6365","EPSG_5246","EPSG_7886","EPSG_8431","EPSG_8427","EPSG_8699","EPSG_8818","EPSG_4757","EPSG_9140","EPSG_8086","EPSG_4686","EPSG_4737","EPSG_4702","EPSG_4747","EPSG_4749","EPSG_4674","EPSG_4755","EPSG_4759","EPSG_4762","EPSG_4763","EPSG_4764","EPSG_4166","EPSG_4170","EPSG_5546","EPSG_7844","EPSG_4818","$c36bbc8057de3d00$var$key","$c36bbc8057de3d00$var$datum","$2c13a87cc45f972b$export$2e2bcd8739ae039","datum_type","PJD_NODATUM","PJD_WGS84","PJD_3PARAM","PJD_7PARAM","SEC_TO_RAD","PJD_GRIDSHIFT","grids","$b2d482da445fbb18$export$2e2bcd8739ae039","$b2d482da445fbb18$export$31c4d9288d81329a","$b2d482da445fbb18$var$loadedNadgrids","data","options","includeErrorFields","view","nFields","isLittleEndian","header","subgrids","ArrayBuffer","DataView","getInt32","warn","nSubgridFields","nSubgrids","shiftType","$b2d482da445fbb18$var$decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","$b2d482da445fbb18$var$readSubgrids","gridOffset","offset","subHeader","parent","lowerLatitude","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","nodes","$b2d482da445fbb18$var$readGridNodes","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","latitudeShift","getFloat32","longitudeShift","latitudeAccuracy","longitudeAccuracy","lngColumnCount","latColumnCount","ll","$b2d482da445fbb18$var$secondsToRadians","del","lim","count","cvs","rowSize","ready","$b2d482da445fbb18$var$readGeotiffGrid","tiff","subGridCount","getImageCount","subgridIndex","image","getImage","rasters","readRasters","getWidth","getHeight","imageBBoxRadians","getBoundingBox","$b2d482da445fbb18$var$degreesToRadians","fileDirectory","ModelPixelScale","maxX","minY","latitudeOffsetBand","longitudeOffsetBand","index","tifGrid","$b2d482da445fbb18$var$parseNadgridString","optional","mandatory","grid","isNull","degrees","seconds","end","String","fromCharCode","Uint8Array","buffer","$8e8cfb7cbefc2113$export$2e2bcd8739ae039","dest","point","hasZ","m","$coO2L","$hL60j","$d7qcu","$98d040a88dc0214f$export$2e2bcd8739ae039","$4YPx7","$98d040a88dc0214f$var$checkParams","compareDatums","source_a","source_es","gridShiftCode","$98d040a88dc0214f$export$cfa06df23524576a","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","dest_a","dest_b","dest_es","SRS_WGS84_SEMIMINOR","geodeticToGeocentric","geocentricToWgs84","geocentricFromWgs84","geocentricToGeodetic","destGridShiftResult","Number","attemptedGrids","outer","jj","subgrid","epsilon","minX","maxY","isNaN","$98d040a88dc0214f$var$applySubgridShift","pin","ct","val","tb","t","$98d040a88dc0214f$var$nadInterpolate","dif","inx","indx","floor","frct","f00","f10","f11","f01","m11","m10","m00","m01","$3a04bd721826a648$export$68c8d8590fbb24e4","$3a04bd721826a648$export$4a4ae2976f9a808a","$3a04bd721826a648$export$26210192c8922750","$3a04bd721826a648$export$d18952b9ecb47c8f","$3a04bd721826a648$export$2b744ad521e7ac0b","Rn","Sin_Lat","Cos_Lat","Longitude","Latitude","Height","Infinity","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau2","genau","X","Y","Z","atan2","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","x_tmp","y_tmp","z_tmp","$cedb7bb5617791b0$export$2e2bcd8739ae039","crs","denorm","xin","yin","zin","$01093474ae9bd8f6$export$2e2bcd8739ae039","array","$906e8b8bdc80d434$export$2e2bcd8739ae039","$906e8b8bdc80d434$var$checkCoord","num","TypeError","$d8ec3fc1ff061c76$export$2e2bcd8739ae039","$d8ec3fc1ff061c76$var$Point","fromMGRS","mgrsStr","toMGRS","$31ee54b8e1d1cd8f$export$2e2bcd8739ae039","$31ee54b8e1d1cd8f$export$174bb771924e7eb1","$31ee54b8e1d1cd8f$export$b63cca88ddc558a9","$31ee54b8e1d1cd8f$var$SET_ORIGIN_COLUMN_LETTERS","$31ee54b8e1d1cd8f$var$SET_ORIGIN_ROW_LETTERS","$31ee54b8e1d1cd8f$var$UTMtoLL","$31ee54b8e1d1cd8f$var$decode","left","bottom","right","top","utm","seasting","snorthing","easting","northing","zoneNumber","column","row","colOrigin","rowOrigin","colInt","rowInt","rollover","$31ee54b8e1d1cd8f$var$LLtoUTM","LetterDesignator","N","T","C","A","LongOriginRad","ZoneNumber","Lat","Long","LatRad","$31ee54b8e1d1cd8f$var$degToRad","LongRad","eccSquared","eccPrimeSquared","UTMEasting","UTMNorthing","M","zoneLetter","parm","$31ee54b8e1d1cd8f$var$get100kSetForZone","charCodeAt","deg","$31ee54b8e1d1cd8f$var$radToDeg","rad","N1","T1","C1","R1","D","mu","phi1Rad","e1","LongOrigin","topRight","setParm","mgrsString","testChar","accuracyBonus","hunK","sb","substring","east100k","$31ee54b8e1d1cd8f$var$getEastingFromChar","curCol","eastingValue","rewindMarker","north100k","$31ee54b8e1d1cd8f$var$getNorthingFromChar","curRow","northingValue","$31ee54b8e1d1cd8f$var$getMinNorthing","remainder","sep","sepEasting","sepNorthing","$de14c0a63cfa0e0d$export$2e2bcd8739ae039","$9t3dO","$9zr9G","$kAWkR","$5HQRm","$llHto","$4gjYM","$ejQ1Z","$iubsy","$h7o5G","$0599r","$deudM","$8mhgZ","$iSJfu","$6CTAc","$cEGTl","$2Lrqq","$6Eu1X","$fpjAW","$eA4Bc","$7uCfv","$hp0oy","$1W450","$i6dz6","$37G1n","$2XUb4","$byZja","$Fj8jS","$eJp9e","$jJ6PL","$cbANR","$gtZfx","$6e495242beb4668f$export$2e2bcd8739ae039","$gqKpL","$hpUQm","$jQUK6","en","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","ml","acos","tan_phi","d","ds","f","g","h","asin","$bf6313ff986be9ac$export$2e2bcd8739ae039","$bf6313ff986be9ac$var$C00","$bf6313ff986be9ac$var$C02","$bf6313ff986be9ac$var$C04","$bf6313ff986be9ac$var$C06","$bf6313ff986be9ac$var$C22","$bf6313ff986be9ac$var$C44","$bf6313ff986be9ac$var$C46","$bf6313ff986be9ac$var$C66","$cae0dd692f473684$export$2e2bcd8739ae039","sphi","cphi","$e73ee39023f9c198$export$2e2bcd8739ae039","arg","$6f7c72613b8aa92a$export$2e2bcd8739ae039","$zBlxr","$jU5gu","$cVtoA","$klaWo","$k0stT","$iKZ74","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","tmp","$06b03d370063c40e$export$2e2bcd8739ae039","$e7d754d244264a37$export$2e2bcd8739ae039","max","min","$96919c3c2b0cfee9$export$2e2bcd8739ae039","$g1hBf","$ba9a64430787103e$export$2e2bcd8739ae039","$ecee41736c9c0e4b$export$2e2bcd8739ae039","pp","B","cos_2B","h1","h2","$e909e682fc23c405$export$2e2bcd8739ae039","arg_r","hr","hr1","hr2","$da7beda932685c15$export$2e2bcd8739ae039","$cz4ED","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","$925c5d35b4e59088$export$2e2bcd8739ae039","$efe46ba059d82de2$export$2e2bcd8739ae039","$b4YJ1","dependsOn","$810f2c2910fd20b1$export$2e2bcd8739ae039","$4279f8b9d31284e6$export$2e2bcd8739ae039","$zGHAa","rc","sinc0","phic0","cosc0","R2","sinc","cosc","cosl","rho","$06b464b721451620$export$2e2bcd8739ae039","$82Tex","ratexp","K","$5db95ad4da70d3a6$export$2e2bcd8739ae039","esinp","ssfn_","$f8ad4802022ce868$export$2e2bcd8739ae039","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","$31a8278a941356d4$export$2e2bcd8739ae039","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","I","rotI","rotB","lambda","S","phy","prevPhy","iteration","$a6cb33582cb5910b$export$2e2bcd8739ae039","typeAProjections","projectionName","com","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","getNormalizedProjName","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","V","W","temp","u","Qp","Sp","Vp","Up","$d753eaf12887a276$export$2e2bcd8739ae039","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","$c765c705b741a192$export$2e2bcd8739ae039","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","$00f791059e8f61f5$export$2e2bcd8739ae039","$f3cKo","$bWC4D","$hU8aC","$i9r9A","$bM0eI","$3eeGT","$aDUFA","$cfNuL","e0","e3","lam","nl","tl","asq","cl","dd","ml1","nl1","rl1","tl1","dl","dsq","$af51062589eeb2ce$export$2e2bcd8739ae039","$8b22a51ec249391e$export$2e2bcd8739ae039","$d08e0117e308bb87$export$2e2bcd8739ae039","$d36e2161accfe0ec$export$2e2bcd8739ae039","$89245c5bc9a5a616$export$2e2bcd8739ae039","$259e1333723cc7cb$export$2e2bcd8739ae039","$7bf9815baea17aa9$export$2e2bcd8739ae039","$8ebd4771f70de1ee$export$2e2bcd8739ae039","S_POLE","N_POLE","EQUIT","OBLIQ","$9a24067d8ab69621$export$2e2bcd8739ae039","$874JP","APA","mode","qp","mmf","apa","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","beta","cCe","sCe","ab","cosz","sinz","$5e82a7153665d151$export$2e2bcd8739ae039","phi1z","$615dc6dbd83ac6d5$export$2e2bcd8739ae039","$ljPJJ","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","eccnts","$f8538120e633ea57$export$2e2bcd8739ae039","$dbf05e97c9232a2a$export$2e2bcd8739ae039","sin_p14","cos_p14","infinity_dist","coslon","$4d31684dfe594c29$export$2e2bcd8739ae039","$b4Ogv","$81070f0f2a61f650$export$2e2bcd8739ae039","$936a7dd52884a3fc$export$2e2bcd8739ae039","dlat","$20353e9e716518d0$export$2e2bcd8739ae039","el","bl","tanphi","mln","mlnp","ma","iterations","$4d7dc5ed367b221e$export$2e2bcd8739ae039","B_re","B_im","C_re","C_im","th_n_re1","th_n_im1","delta_lat","d_phi","d_phi_n","d_psi","th_re","th_n_re","th_n_im","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","th_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_lambda","d_psi_n","$b37863f65bf2a2a4$export$2e2bcd8739ae039","$a9d7febe7a8566f2$export$2e2bcd8739ae039","C_y","C_x","$57490138fba0a0b8$export$2e2bcd8739ae039","delta_theta","$cab513e7d920927e$export$2e2bcd8739ae039","ml2","$168e5f6524a6fc5f$export$2e2bcd8739ae039","sinth","costh","msq","gsq","xx","yy","xys","c1","c2","c3","a1","m1","th1","$d2d34f4dbda3af26$export$2e2bcd8739ae039","$acCYh","sin_p12","cos_p12","Geodesic","Mlp","Ml","kp","lon1","lon2","vars","azi1","Inverse","AZIMUTH","s12","Direct","STANDARD","geodesic","l","nC3x_","nC4x_","astroid","A1m1f_coeff","C1f_coeff","C1pf_coeff","A2m1f_coeff","C2f_coeff","A3_coeff","C3_coeff","C4_coeff","maxit2_","tol0_","tol1_","tol2_","xthresh_","transit","transitdirect","AreaReduceB","Constants","Accumulator","major","minor","patch","version_string","digits","degree","sq","hypot","cbrt","log1p","atanh","copysign","sum","up","vpp","polyval","AngRound","AngNormalize","LatFix","AngDiff","sincosd","sinx","cosx","sincosde","atan2d","ang","Set","constructor","_s","_t","Add","Sum","Negate","Remainder","GeodesicLine","PolygonArea","maxit1_","tiny_","MIN_VALUE","EPSILON","nC1_","nC1p_","nC2_","nC3_","nC4_","CAP_C1","CAP_C1p","CAP_C2","CAP_C3","CAP_C4","NONE","ARC","LATITUDE","LONGITUDE","DISTANCE","DISTANCE_IN","REDUCEDLENGTH","GEODESICSCALE","AREA","ALL","OUT_ALL","LONG_UNROLL","OUT_MASK","SinCosSeries","sinp","ar","y1","r2","r3","disc","T3","uv","w","A1m1f","nA1_","C1f","eps2","o","C1pf","A2m1f","nA2_","C2f","_f1","_e2","_ep2","_n","_b","_c2","_etol2","_A3x","_C3x","_C4x","A3coeff","C3coeff","C4coeff","nA3_","A3f","nA3x_","C3f","mult","C4f","Lengths","sig12","ssig1","csig1","dn1","ssig2","csig2","dn2","cbet1","cbet2","outmask","C1a","C2a","B1","csig12","vals","m0x","J12","A1","A2","s12b","m0","m12b","M12","M21","InverseStart","sbet1","sbet2","lam12","slam12","clam12","sbet12a","shortline","omg12","sbetm2","somg12","comg12","ssig12","lamscale","betscale","bet12a","nvals","omg12a","lam12x","sbet12","cbet12","dnm","salp1","calp1","salp2","calp2","Lambda12","slam120","clam120","diffp","C3a","salp0","calp0","somg1","comg1","somg2","comg2","B312","eta","domg12","dlam12","InverseInt","azi2","lon12","lon12s","lonsign","swapp","latsign","s12x","m12x","meridian","numit","salp1a","calp1a","salp1b","calp1b","tripn","tripb","dv","dalp1","sdalp1","cdalp1","nsalp1","lengthmask","alp12","A4","C4a","B41","dbet1","dbet2","salp12","calp12","sdomg12","cdomg12","a12","m12","S12","B42","GenDirect","arcmode","s12_a12","line","GenPosition","ArcDirect","Line","caps","DirectLine","GenDirectLine","ArcDirectLine","GenSetDistance","InverseLine","SetArc","Polygon","polyline","geod","_dn1","_salp0","_calp0","_ssig1","_somg1","_csig1","_comg1","_k2","_A1m1","_C1a","_B11","_stau1","_ctau1","_C1pa","_A2m1","_C2a","_B21","_C3a","_A3c","_B31","_C4a","_A4","_B41","a13","s13","B12","AB1","tau12","serr","B22","AB2","Position","ArcPosition","s13_a13","SetDistance","area0","crossings","reverse","sign","_geod","_area0","_mask","_areasum","_perimetersum","Clear","_crossings","_lat0","_lon0","AddPoint","AddEdge","azi","Compute","tempsum","perimeter","TestPoint","TestEdge","cb","geo","define","amd","window","$24629f153ebf2c1f$export$2e2bcd8739ae039","$228cab2632c5bcf7$export$2e2bcd8739ae039","$228cab2632c5bcf7$var$FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","$228cab2632c5bcf7$var$AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","$228cab2632c5bcf7$var$qsc_fwd_equat_face_theta","$228cab2632c5bcf7$var$qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","sinlon","xy","nu","cosmu","tannu","invert_sign","xa","lp","$86b26d30d3579075$export$2e2bcd8739ae039","$86b26d30d3579075$var$COEFS_X","$86b26d30d3579075$var$COEFS_Y","$86b26d30d3579075$var$C1","$86b26d30d3579075$var$RC1","$86b26d30d3579075$var$poly3_val","coefs","$86b26d30d3579075$var$NODES","$86b26d30d3579075$var$newton_rapshon","f_df","max_err","iters","upd","$07c2abe70612fbc5$export$2e2bcd8739ae039","$ab98c67e9f567a4b$export$2e2bcd8739ae039","$ab98c67e9f567a4b$var$mode","$ab98c67e9f567a4b$var$params","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","$e5c7855edcbcda04$export$2e2bcd8739ae039","flip_axis","sweep","radius_g_1","radius_g","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","$8df30f7b6f96e4d8$export$2e2bcd8739ae039","$8df30f7b6f96e4d8$var$M","paramLat","paramLatSq","paramLatPow6","$8df30f7b6f96e4d8$var$A1","$8df30f7b6f96e4d8$var$A2","$8df30f7b6f96e4d8$var$A3","$8df30f7b6f96e4d8$var$A4","fy","$bffedda91368999e$export$2e2bcd8739ae039","$bffedda91368999e$var$e_fwd","am1","$bffedda91368999e$var$e_inv","$bffedda91368999e$var$s_fwd","cphi1","$bffedda91368999e$var$s_inv"],"version":3,"file":"customProj.bede341a.js.map"}