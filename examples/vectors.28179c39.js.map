{"mappings":"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","sources":["<anon>","node_modules/ol/geom/Circle.js","examples/vectors.js","node_modules/ol/format/TopoJSON.js","node_modules/ol/format/KML.js","node_modules/ol/xml.js","node_modules/ol/format/XMLFeature.js","node_modules/ol/format/xsd.js","node_modules/ol/format/IGC.js","node_modules/ol/format/TextFeature.js","node_modules/ol/format/GPX.js","node_modules/ol/interaction/DragAndDrop.js"],"sourcesContent":["import \"./buildings.88bb1910.js\";\nimport \"./buildings.81d58ce4.js\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire73bb\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire73bb\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"l7VLp\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $f6170f1a08d72585$export$2e2bcd8739ae039);\n/**\n * @module ol/geom/Circle\n */ \nvar $9pD6L = parcelRequire(\"9pD6L\");\n\nvar $h7zsK = parcelRequire(\"h7zsK\");\n\nvar $9bJty = parcelRequire(\"9bJty\");\n\nvar $1MAUi = parcelRequire(\"1MAUi\");\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */ class $f6170f1a08d72585$var$Circle extends (0, $h7zsK.default) {\n    /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */ constructor(center, radius, layout){\n        super();\n        if (layout !== undefined && radius === undefined) this.setFlatCoordinates(layout, center);\n        else {\n            radius = radius ? radius : 0;\n            this.setCenterAndRadius(center, radius, layout);\n        }\n    }\n    /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */ clone() {\n        const circle = new $f6170f1a08d72585$var$Circle(this.flatCoordinates.slice(), undefined, this.layout);\n        circle.applyProperties(this);\n        return circle;\n    }\n    /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */ closestPointXY(x, y, closestPoint, minSquaredDistance) {\n        const flatCoordinates = this.flatCoordinates;\n        const dx = x - flatCoordinates[0];\n        const dy = y - flatCoordinates[1];\n        const squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) for(let i = 0; i < this.stride; ++i)closestPoint[i] = flatCoordinates[i];\n            else {\n                const delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for(let i = 2; i < this.stride; ++i)closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        return minSquaredDistance;\n    }\n    /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */ containsXY(x, y) {\n        const flatCoordinates = this.flatCoordinates;\n        const dx = x - flatCoordinates[0];\n        const dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    }\n    /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */ getCenter() {\n        return this.flatCoordinates.slice(0, this.stride);\n    }\n    /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */ computeExtent(extent) {\n        const flatCoordinates = this.flatCoordinates;\n        const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return (0, $9pD6L.createOrUpdate)(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    }\n    /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */ getRadius() {\n        return Math.sqrt(this.getRadiusSquared_());\n    }\n    /**\n   * @private\n   * @return {number} Radius squared.\n   */ getRadiusSquared_() {\n        const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    }\n    /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */ getType() {\n        return 'Circle';\n    }\n    /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */ intersectsExtent(extent) {\n        const circleExtent = this.getExtent();\n        if ((0, $9pD6L.intersects)(extent, circleExtent)) {\n            const center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) return true;\n            if (extent[1] <= center[1] && extent[3] >= center[1]) return true;\n            return (0, $9pD6L.forEachCorner)(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    }\n    /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */ setCenter(center) {\n        const stride = this.stride;\n        const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        const flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for(let i = 1; i < stride; ++i)flatCoordinates[stride + i] = center[i];\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    }\n    /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */ setCenterAndRadius(center, radius, layout) {\n        this.setLayout(layout, center, 0);\n        if (!this.flatCoordinates) this.flatCoordinates = [];\n        /** @type {Array<number>} */ const flatCoordinates = this.flatCoordinates;\n        let offset = (0, $9bJty.deflateCoordinate)(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for(let i = 1, ii = this.stride; i < ii; ++i)flatCoordinates[offset++] = flatCoordinates[i];\n        flatCoordinates.length = offset;\n        this.changed();\n    }\n    /**\n   * @override\n   */ getCoordinates() {\n        return null;\n    }\n    /**\n   * @override\n   */ setCoordinates(coordinates, layout) {}\n    /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */ setRadius(radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    }\n    /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */ rotate(angle, anchor) {\n        const center = this.getCenter();\n        const stride = this.getStride();\n        this.setCenter((0, $1MAUi.rotate)(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    }\n}\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */ $f6170f1a08d72585$var$Circle.prototype.transform;\nvar $f6170f1a08d72585$export$2e2bcd8739ae039 = $f6170f1a08d72585$var$Circle;\n\n});\n\n\nvar $cc3xD = parcelRequire(\"cc3xD\");\n\nvar $9DiKA = parcelRequire(\"9DiKA\");\n\nvar $f3WAG = parcelRequire(\"f3WAG\");\n\nvar $9jDAx = parcelRequire(\"9jDAx\");\n\nvar $4mWlF = parcelRequire(\"4mWlF\");\n\nvar $cJntk = parcelRequire(\"cJntk\");\n\nvar $bmHVE = parcelRequire(\"bmHVE\");\n\nvar $c3RIb = parcelRequire(\"c3RIb\");\n\nvar $9vPkX = parcelRequire(\"9vPkX\");\n\nvar $dIG9p = parcelRequire(\"dIG9p\");\n\nvar $lrKvI = parcelRequire(\"lrKvI\");\n\nvar $jzydl = parcelRequire(\"jzydl\");\n\nvar $inIMS = parcelRequire(\"inIMS\");\n\nvar $5DwXE = parcelRequire(\"5DwXE\");\n\nvar $l7VLp = parcelRequire(\"l7VLp\");\n/**\n * @module ol/format/TopoJSON\n */ \nvar $dIG9p = parcelRequire(\"dIG9p\");\n\nvar $3xcD3 = parcelRequire(\"3xcD3\");\n\nvar $fw94T = parcelRequire(\"fw94T\");\n\nvar $jKs1i = parcelRequire(\"jKs1i\");\n\nvar $le5ya = parcelRequire(\"le5ya\");\n\nvar $9vPkX = parcelRequire(\"9vPkX\");\n\nvar $5ydre = parcelRequire(\"5ydre\");\n\nvar $dpRHA = parcelRequire(\"dpRHA\");\n\nvar $kgouC = parcelRequire(\"kgouC\");\n\nvar $45uGP = parcelRequire(\"45uGP\");\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */ /**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */ /**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */ class $10d5bd550e039cbe$var$TopoJSON extends (0, $45uGP.default) {\n    /**\n   * @param {Options} [options] Options.\n   */ constructor(options){\n        super();\n        options = options ? options : {};\n        /**\n     * @private\n     * @type {string|undefined}\n     */ this.layerName_ = options.layerName;\n        /**\n     * @private\n     * @type {?Array<string>}\n     */ this.layers_ = options.layers ? options.layers : null;\n        /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */ this.dataProjection = (0, $dpRHA.get)(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n    }\n    /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */ readFeaturesFromObject(object, options) {\n        if (object.type == 'Topology') {\n            const topoJSONTopology = /** @type {TopoJSONTopology} */ object;\n            let transform, scale = null, translate = null;\n            if (topoJSONTopology['transform']) {\n                transform = topoJSONTopology['transform'];\n                scale = transform['scale'];\n                translate = transform['translate'];\n            }\n            const arcs = topoJSONTopology['arcs'];\n            if (transform) $10d5bd550e039cbe$var$transformArcs(arcs, scale, translate);\n            /** @type {Array<Feature>} */ const features = [];\n            const topoJSONFeatures = topoJSONTopology['objects'];\n            const property = this.layerName_;\n            let feature;\n            for(const objectName in topoJSONFeatures){\n                if (this.layers_ && !this.layers_.includes(objectName)) continue;\n                if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n                    feature = /** @type {TopoJSONGeometryCollection} */ topoJSONFeatures[objectName];\n                    features.push.apply(features, $10d5bd550e039cbe$var$readFeaturesFromGeometryCollection(feature, arcs, scale, translate, property, objectName, options));\n                } else {\n                    feature = /** @type {TopoJSONGeometry} */ topoJSONFeatures[objectName];\n                    features.push($10d5bd550e039cbe$var$readFeatureFromGeometry(feature, arcs, scale, translate, property, objectName, options));\n                }\n            }\n            return features;\n        }\n        return [];\n    }\n    /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */ readProjectionFromObject(object) {\n        return this.dataProjection;\n    }\n}\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */ const $10d5bd550e039cbe$var$GEOMETRY_READERS = {\n    'Point': $10d5bd550e039cbe$var$readPointGeometry,\n    'LineString': $10d5bd550e039cbe$var$readLineStringGeometry,\n    'Polygon': $10d5bd550e039cbe$var$readPolygonGeometry,\n    'MultiPoint': $10d5bd550e039cbe$var$readMultiPointGeometry,\n    'MultiLineString': $10d5bd550e039cbe$var$readMultiLineStringGeometry,\n    'MultiPolygon': $10d5bd550e039cbe$var$readMultiPolygonGeometry\n};\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */ function $10d5bd550e039cbe$var$concatenateArcs(indices, arcs) {\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ const coordinates = [];\n    let index;\n    for(let i = 0, ii = indices.length; i < ii; ++i){\n        index = indices[i];\n        if (i > 0) // splicing together arcs, discard last point\n        coordinates.pop();\n        if (index >= 0) {\n            // forward arc\n            const arc = arcs[index];\n            for(let j = 0, jj = arc.length; j < jj; ++j)coordinates.push(arc[j].slice(0));\n        } else {\n            // reverse arc\n            const arc = arcs[~index];\n            for(let j = arc.length - 1; j >= 0; --j)coordinates.push(arc[j].slice(0));\n        }\n    }\n    return coordinates;\n}\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */ function $10d5bd550e039cbe$var$readPointGeometry(object, scale, translate) {\n    const coordinates = object['coordinates'];\n    if (scale && translate) $10d5bd550e039cbe$var$transformVertex(coordinates, scale, translate);\n    return new (0, $9vPkX.default)(coordinates);\n}\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */ function $10d5bd550e039cbe$var$readMultiPointGeometry(object, scale, translate) {\n    const coordinates = object['coordinates'];\n    if (scale && translate) for(let i = 0, ii = coordinates.length; i < ii; ++i)$10d5bd550e039cbe$var$transformVertex(coordinates[i], scale, translate);\n    return new (0, $jKs1i.default)(coordinates);\n}\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */ function $10d5bd550e039cbe$var$readLineStringGeometry(object, arcs) {\n    const coordinates = $10d5bd550e039cbe$var$concatenateArcs(object['arcs'], arcs);\n    return new (0, $3xcD3.default)(coordinates);\n}\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */ function $10d5bd550e039cbe$var$readMultiLineStringGeometry(object, arcs) {\n    const coordinates = [];\n    for(let i = 0, ii = object['arcs'].length; i < ii; ++i)coordinates[i] = $10d5bd550e039cbe$var$concatenateArcs(object['arcs'][i], arcs);\n    return new (0, $fw94T.default)(coordinates);\n}\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */ function $10d5bd550e039cbe$var$readPolygonGeometry(object, arcs) {\n    const coordinates = [];\n    for(let i = 0, ii = object['arcs'].length; i < ii; ++i)coordinates[i] = $10d5bd550e039cbe$var$concatenateArcs(object['arcs'][i], arcs);\n    return new (0, $5ydre.default)(coordinates);\n}\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */ function $10d5bd550e039cbe$var$readMultiPolygonGeometry(object, arcs) {\n    const coordinates = [];\n    for(let i = 0, ii = object['arcs'].length; i < ii; ++i){\n        // for each polygon\n        const polyArray = object['arcs'][i];\n        const ringCoords = [];\n        for(let j = 0, jj = polyArray.length; j < jj; ++j)// for each ring\n        ringCoords[j] = $10d5bd550e039cbe$var$concatenateArcs(polyArray[j], arcs);\n        coordinates[i] = ringCoords;\n    }\n    return new (0, $le5ya.default)(coordinates);\n}\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */ function $10d5bd550e039cbe$var$readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, options) {\n    const geometries = collection['geometries'];\n    const features = [];\n    for(let i = 0, ii = geometries.length; i < ii; ++i)features[i] = $10d5bd550e039cbe$var$readFeatureFromGeometry(geometries[i], arcs, scale, translate, property, name, options);\n    return features;\n}\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */ function $10d5bd550e039cbe$var$readFeatureFromGeometry(object, arcs, scale, translate, property, name, options) {\n    let geometry = null;\n    const type = object.type;\n    if (type) {\n        const geometryReader = $10d5bd550e039cbe$var$GEOMETRY_READERS[type];\n        if (type === 'Point' || type === 'MultiPoint') geometry = geometryReader(object, scale, translate);\n        else geometry = geometryReader(object, arcs);\n        geometry = (0, $kgouC.transformGeometryWithOptions)(geometry, false, options);\n    }\n    const feature = new (0, $dIG9p.default)({\n        geometry: geometry\n    });\n    if (object.id !== undefined) feature.setId(object.id);\n    let properties = object.properties;\n    if (property) {\n        if (!properties) properties = {};\n        properties[property] = name;\n    }\n    if (properties) feature.setProperties(properties, true);\n    return feature;\n}\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */ function $10d5bd550e039cbe$var$transformArcs(arcs, scale, translate) {\n    for(let i = 0, ii = arcs.length; i < ii; ++i)$10d5bd550e039cbe$var$transformArc(arcs[i], scale, translate);\n}\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */ function $10d5bd550e039cbe$var$transformArc(arc, scale, translate) {\n    let x = 0;\n    let y = 0;\n    for(let i = 0, ii = arc.length; i < ii; ++i){\n        const vertex = arc[i];\n        x += vertex[0];\n        y += vertex[1];\n        vertex[0] = x;\n        vertex[1] = y;\n        $10d5bd550e039cbe$var$transformVertex(vertex, scale, translate);\n    }\n}\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */ function $10d5bd550e039cbe$var$transformVertex(vertex, scale, translate) {\n    vertex[0] = vertex[0] * scale[0] + translate[0];\n    vertex[1] = vertex[1] * scale[1] + translate[1];\n}\nvar $10d5bd550e039cbe$export$2e2bcd8739ae039 = $10d5bd550e039cbe$var$TopoJSON;\n\n\n\nvar $wnhPR = parcelRequire(\"wnhPR\");\n/**\n * @module ol/format/KML\n */ \nvar $dIG9p = parcelRequire(\"dIG9p\");\n\nvar $aSvtr = parcelRequire(\"aSvtr\");\n\nvar $fVVyM = parcelRequire(\"fVVyM\");\n\nvar $4iSHH = parcelRequire(\"4iSHH\");\n\nvar $1eatv = parcelRequire(\"1eatv\");\n\nvar $3xcD3 = parcelRequire(\"3xcD3\");\n\nvar $fw94T = parcelRequire(\"fw94T\");\n\nvar $jKs1i = parcelRequire(\"jKs1i\");\n\nvar $le5ya = parcelRequire(\"le5ya\");\n\nvar $9vPkX = parcelRequire(\"9vPkX\");\n\nvar $5ydre = parcelRequire(\"5ydre\");\n\nvar $9byFX = parcelRequire(\"9byFX\");\n\nvar $dpRHA = parcelRequire(\"dpRHA\");\n\nvar $inIMS = parcelRequire(\"inIMS\");\n\nvar $bmHVE = parcelRequire(\"bmHVE\");\n\nvar $lrKvI = parcelRequire(\"lrKvI\");\n\nvar $c3RIb = parcelRequire(\"c3RIb\");\n\nvar $cJntk = parcelRequire(\"cJntk\");\n/**\n * @module ol/xml\n */ \nvar $fVVyM = parcelRequire(\"fVVyM\");\nconst $a4f89edd2ef65182$export$be284679de3fbea8 = 'http://www.w3.org/2001/XMLSchema-instance';\nfunction $a4f89edd2ef65182$export$7094a064528c7fee(namespaceURI, qualifiedName) {\n    return $a4f89edd2ef65182$export$f65ca476c09acec0().createElementNS(namespaceURI, qualifiedName);\n}\nfunction $a4f89edd2ef65182$export$b089dda0fde13047(node, normalizeWhitespace) {\n    return $a4f89edd2ef65182$export$caa0047a9c11e135(node, normalizeWhitespace, []).join('');\n}\nfunction $a4f89edd2ef65182$export$caa0047a9c11e135(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE || node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        else accumulator.push(node.nodeValue);\n    } else {\n        let n;\n        for(n = node.firstChild; n; n = n.nextSibling)$a4f89edd2ef65182$export$caa0047a9c11e135(n, normalizeWhitespace, accumulator);\n    }\n    return accumulator;\n}\nfunction $a4f89edd2ef65182$export$62858bae88b53fd0(object) {\n    return 'documentElement' in object;\n}\nfunction $a4f89edd2ef65182$export$199b05d6829fbbad(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\nfunction $a4f89edd2ef65182$export$98e6a39c04603d36(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\nfunction $a4f89edd2ef65182$export$b2d5eb949eb55a2a(valueReader, thisArg) {\n    return(/**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */ function(node, objectStack) {\n        const value = valueReader.call(thisArg ?? this, node, objectStack);\n        if (value !== undefined) {\n            const array = /** @type {Array<*>} */ objectStack[objectStack.length - 1];\n            (0, $fVVyM.extend)(array, value);\n        }\n    });\n}\nfunction $a4f89edd2ef65182$export$18ed2f5932a1b385(valueReader, thisArg) {\n    return(/**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */ function(node, objectStack) {\n        const value = valueReader.call(thisArg ?? this, node, objectStack);\n        if (value !== undefined) {\n            const array = /** @type {Array<*>} */ objectStack[objectStack.length - 1];\n            array.push(value);\n        }\n    });\n}\nfunction $a4f89edd2ef65182$export$b1b80676c57c5713(valueReader, thisArg) {\n    return(/**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */ function(node, objectStack) {\n        const value = valueReader.call(thisArg ?? this, node, objectStack);\n        if (value !== undefined) objectStack[objectStack.length - 1] = value;\n    });\n}\nfunction $a4f89edd2ef65182$export$145ce5485ab74220(valueReader, property, thisArg) {\n    return(/**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */ function(node, objectStack) {\n        const value = valueReader.call(thisArg ?? this, node, objectStack);\n        if (value !== undefined) {\n            const object = /** @type {!Object} */ objectStack[objectStack.length - 1];\n            const name = property !== undefined ? property : node.localName;\n            let array;\n            if (name in object) array = object[name];\n            else {\n                array = [];\n                object[name] = array;\n            }\n            array.push(value);\n        }\n    });\n}\nfunction $a4f89edd2ef65182$export$b69a91976ee81208(valueReader, property, thisArg) {\n    return(/**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */ function(node, objectStack) {\n        const value = valueReader.call(thisArg ?? this, node, objectStack);\n        if (value !== undefined) {\n            const object = /** @type {!Object} */ objectStack[objectStack.length - 1];\n            const name = property !== undefined ? property : node.localName;\n            object[name] = value;\n        }\n    });\n}\nfunction $a4f89edd2ef65182$export$77b73fc7f982cc07(nodeWriter, thisArg) {\n    return(/**\n     * @param {Element} node Node.\n     * @param {*} value Value to be written.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */ function(node, value, objectStack) {\n        nodeWriter.call(thisArg ?? this, node, value, objectStack);\n        const parent = /** @type {NodeStackItem} */ objectStack[objectStack.length - 1];\n        const parentNode = parent.node;\n        parentNode.appendChild(node);\n    });\n}\nfunction $a4f89edd2ef65182$export$fa227189764d6986(nodeWriter, thisArg) {\n    let serializersNS, nodeFactory;\n    return function(node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            const serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = $a4f89edd2ef65182$export$7989129829daaabf(node.localName);\n        }\n        $a4f89edd2ef65182$export$dfdc1655ccc5b9cb(serializersNS, nodeFactory, value, objectStack);\n    };\n}\nfunction $a4f89edd2ef65182$export$7989129829daaabf(fixedNodeName, fixedNamespaceURI) {\n    return(/**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */ function(value, objectStack, newNodeName) {\n        const context = /** @type {NodeStackItem} */ objectStack[objectStack.length - 1];\n        const node = context.node;\n        let nodeName = fixedNodeName;\n        if (nodeName === undefined) nodeName = newNodeName;\n        const namespaceURI = fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n        return $a4f89edd2ef65182$export$7094a064528c7fee(namespaceURI, /** @type {string} */ nodeName);\n    });\n}\nconst $a4f89edd2ef65182$export$d91b08b611cef144 = $a4f89edd2ef65182$export$7989129829daaabf();\nfunction $a4f89edd2ef65182$export$939885a13683f4dc(object, orderedKeys) {\n    const length = orderedKeys.length;\n    const sequence = new Array(length);\n    for(let i = 0; i < length; ++i)sequence[i] = object[orderedKeys[i]];\n    return sequence;\n}\nfunction $a4f89edd2ef65182$export$c6eb0402f939765f(namespaceURIs, structure, structureNS) {\n    structureNS = structureNS !== undefined ? structureNS : {};\n    let i, ii;\n    for(i = 0, ii = namespaceURIs.length; i < ii; ++i)structureNS[namespaceURIs[i]] = structure;\n    return structureNS;\n}\nfunction $a4f89edd2ef65182$export$dc8ce45ce1679f4f(parsersNS, node, objectStack, thisArg) {\n    let n;\n    for(n = node.firstElementChild; n; n = n.nextElementSibling){\n        const parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            const parser = parsers[n.localName];\n            if (parser !== undefined) parser.call(thisArg, n, objectStack);\n        }\n    }\n}\nfunction $a4f89edd2ef65182$export$5c934df85741dbd1(object, parsersNS, node, objectStack, thisArg) {\n    objectStack.push(object);\n    $a4f89edd2ef65182$export$dc8ce45ce1679f4f(parsersNS, node, objectStack, thisArg);\n    return /** @type {T} */ objectStack.pop();\n}\nfunction $a4f89edd2ef65182$export$dfdc1655ccc5b9cb(serializersNS, nodeFactory, values, objectStack, keys, thisArg) {\n    const length = (keys !== undefined ? keys : values).length;\n    let value, node;\n    for(let i = 0; i < length; ++i){\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(thisArg, value, objectStack, keys !== undefined ? keys[i] : undefined);\n            if (node !== undefined) serializersNS[node.namespaceURI][node.localName].call(thisArg, node, value, objectStack);\n        }\n    }\n}\nfunction $a4f89edd2ef65182$export$a79a01f4edad8da8(object, serializersNS, nodeFactory, values, objectStack, keys, thisArg) {\n    objectStack.push(object);\n    $a4f89edd2ef65182$export$dfdc1655ccc5b9cb(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n    return /** @type {O|undefined} */ objectStack.pop();\n}\nlet $a4f89edd2ef65182$var$xmlSerializer_ = undefined;\nfunction $a4f89edd2ef65182$export$6d77e0eada4b836a(xmlSerializer) {\n    $a4f89edd2ef65182$var$xmlSerializer_ = xmlSerializer;\n}\nfunction $a4f89edd2ef65182$export$e087df39da12b01f() {\n    if ($a4f89edd2ef65182$var$xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') $a4f89edd2ef65182$var$xmlSerializer_ = new XMLSerializer();\n    return $a4f89edd2ef65182$var$xmlSerializer_;\n}\nlet $a4f89edd2ef65182$var$document_ = undefined;\nfunction $a4f89edd2ef65182$export$4bebdef07101fbd4(document1) {\n    $a4f89edd2ef65182$var$document_ = document1;\n}\nfunction $a4f89edd2ef65182$export$f65ca476c09acec0() {\n    if ($a4f89edd2ef65182$var$document_ === undefined && typeof document !== 'undefined') $a4f89edd2ef65182$var$document_ = document.implementation.createDocument('', '', null);\n    return $a4f89edd2ef65182$var$document_;\n}\n\n\n\nvar $kgouC = parcelRequire(\"kgouC\");\n/**\n * @module ol/format/XMLFeature\n */ \nvar $fVVyM = parcelRequire(\"fVVyM\");\n\nvar $kgouC = parcelRequire(\"kgouC\");\n\nvar $9iPUS = parcelRequire(\"9iPUS\");\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */ class $ce16c3ce3167dc37$var$XMLFeature extends (0, $kgouC.default) {\n    constructor(){\n        super();\n        /**\n     * @type {XMLSerializer}\n     * @private\n     */ this.xmlSerializer_ = (0, $a4f89edd2ef65182$export$e087df39da12b01f)();\n    }\n    /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */ getType() {\n        return 'xml';\n    }\n    /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */ readFeature(source, options) {\n        if (!source) return null;\n        if (typeof source === 'string') {\n            const doc = (0, $a4f89edd2ef65182$export$98e6a39c04603d36)(source);\n            return this.readFeatureFromDocument(doc, options);\n        }\n        if ((0, $a4f89edd2ef65182$export$62858bae88b53fd0)(source)) return this.readFeatureFromDocument(/** @type {Document} */ source, options);\n        return this.readFeatureFromNode(/** @type {Element} */ source, options);\n    }\n    /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */ readFeatureFromDocument(doc, options) {\n        const features = this.readFeaturesFromDocument(doc, options);\n        if (features.length > 0) return features[0];\n        return null;\n    }\n    /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */ readFeatureFromNode(node, options) {\n        return null; // not implemented\n    }\n    /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */ readFeatures(source, options) {\n        if (!source) return [];\n        if (typeof source === 'string') {\n            const doc = (0, $a4f89edd2ef65182$export$98e6a39c04603d36)(source);\n            return this.readFeaturesFromDocument(doc, options);\n        }\n        if ((0, $a4f89edd2ef65182$export$62858bae88b53fd0)(source)) return this.readFeaturesFromDocument(/** @type {Document} */ source, options);\n        return this.readFeaturesFromNode(/** @type {Element} */ source, options);\n    }\n    /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */ readFeaturesFromDocument(doc, options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */ const features = [];\n        for(let n = doc.firstChild; n; n = n.nextSibling)if (n.nodeType == Node.ELEMENT_NODE) (0, $fVVyM.extend)(features, this.readFeaturesFromNode(/** @type {Element} */ n, options));\n        return features;\n    }\n    /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */ readFeaturesFromNode(node, options) {\n        return (0, $9iPUS.abstract)();\n    }\n    /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */ readGeometry(source, options) {\n        if (!source) return null;\n        if (typeof source === 'string') {\n            const doc = (0, $a4f89edd2ef65182$export$98e6a39c04603d36)(source);\n            return this.readGeometryFromDocument(doc, options);\n        }\n        if ((0, $a4f89edd2ef65182$export$62858bae88b53fd0)(source)) return this.readGeometryFromDocument(/** @type {Document} */ source, options);\n        return this.readGeometryFromNode(/** @type {Element} */ source, options);\n    }\n    /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */ readGeometryFromDocument(doc, options) {\n        return null; // not implemented\n    }\n    /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */ readGeometryFromNode(node, options) {\n        return null; // not implemented\n    }\n    /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */ readProjection(source) {\n        if (!source) return null;\n        if (typeof source === 'string') {\n            const doc = (0, $a4f89edd2ef65182$export$98e6a39c04603d36)(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        if ((0, $a4f89edd2ef65182$export$62858bae88b53fd0)(source)) return this.readProjectionFromDocument(/** @type {Document} */ source);\n        return this.readProjectionFromNode(/** @type {Element} */ source);\n    }\n    /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */ readProjectionFromDocument(doc) {\n        return this.dataProjection;\n    }\n    /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */ readProjectionFromNode(node) {\n        return this.dataProjection;\n    }\n    /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @override\n   */ writeFeature(feature, options) {\n        const node = this.writeFeatureNode(feature, options);\n        return this.xmlSerializer_.serializeToString(node);\n    }\n    /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */ writeFeatureNode(feature, options) {\n        return null; // not implemented\n    }\n    /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   * @override\n   */ writeFeatures(features, options) {\n        const node = this.writeFeaturesNode(features, options);\n        return this.xmlSerializer_.serializeToString(node);\n    }\n    /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */ writeFeaturesNode(features, options) {\n        return null; // not implemented\n    }\n    /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @override\n   */ writeGeometry(geometry, options) {\n        const node = this.writeGeometryNode(geometry, options);\n        return this.xmlSerializer_.serializeToString(node);\n    }\n    /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */ writeGeometryNode(geometry, options) {\n        return null; // not implemented\n    }\n}\nvar $ce16c3ce3167dc37$export$2e2bcd8739ae039 = $ce16c3ce3167dc37$var$XMLFeature;\n\n\n/**\n * @module ol/format/xsd\n */ \nvar $lVIA6 = parcelRequire(\"lVIA6\");\n\nfunction $d5e0fde316cac971$export$f9a84177eae95ed5(node) {\n    const s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false);\n    return $d5e0fde316cac971$export$a8558234a836634(s);\n}\nfunction $d5e0fde316cac971$export$a8558234a836634(string) {\n    const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) return m[1] !== undefined || false;\n    return undefined;\n}\nfunction $d5e0fde316cac971$export$5079def2140fe6f2(node) {\n    const s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false);\n    const dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\nfunction $d5e0fde316cac971$export$5be9c99d34ad295b(node) {\n    const s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false);\n    return $d5e0fde316cac971$export$5a7483b211367c0c(s);\n}\nfunction $d5e0fde316cac971$export$5a7483b211367c0c(string) {\n    // FIXME check spec\n    const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) return parseFloat(m[1]);\n    return undefined;\n}\nfunction $d5e0fde316cac971$export$6161a72ab5b6b722(node) {\n    const s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false);\n    return $d5e0fde316cac971$export$1c8fe3e9d3126f53(s);\n}\nfunction $d5e0fde316cac971$export$1c8fe3e9d3126f53(string) {\n    const m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) return parseInt(m[1], 10);\n    return undefined;\n}\nfunction $d5e0fde316cac971$export$dda73877cb166cd3(node) {\n    return (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false).trim();\n}\nfunction $d5e0fde316cac971$export$9de8e8a584a450b7(node, bool) {\n    $d5e0fde316cac971$export$3255ca5635e70aed(node, bool ? '1' : '0');\n}\nfunction $d5e0fde316cac971$export$d6c624180454e8f9(node, string) {\n    node.appendChild((0, $a4f89edd2ef65182$export$f65ca476c09acec0)().createCDATASection(string));\n}\nfunction $d5e0fde316cac971$export$4e91791cb8677e27(node, dateTime) {\n    const date = new Date(dateTime * 1000);\n    const string = date.getUTCFullYear() + '-' + (0, $lVIA6.padNumber)(date.getUTCMonth() + 1, 2) + '-' + (0, $lVIA6.padNumber)(date.getUTCDate(), 2) + 'T' + (0, $lVIA6.padNumber)(date.getUTCHours(), 2) + ':' + (0, $lVIA6.padNumber)(date.getUTCMinutes(), 2) + ':' + (0, $lVIA6.padNumber)(date.getUTCSeconds(), 2) + 'Z';\n    node.appendChild((0, $a4f89edd2ef65182$export$f65ca476c09acec0)().createTextNode(string));\n}\nfunction $d5e0fde316cac971$export$f8009f9ca036d7d1(node, decimal) {\n    const string = decimal.toPrecision();\n    node.appendChild((0, $a4f89edd2ef65182$export$f65ca476c09acec0)().createTextNode(string));\n}\nfunction $d5e0fde316cac971$export$b6c828910b813a07(node, nonNegativeInteger) {\n    const string = nonNegativeInteger.toString();\n    node.appendChild((0, $a4f89edd2ef65182$export$f65ca476c09acec0)().createTextNode(string));\n}\nconst $d5e0fde316cac971$var$whiteSpaceStart = /^\\s/;\nconst $d5e0fde316cac971$var$whiteSpaceEnd = /\\s$/;\nconst $d5e0fde316cac971$var$cdataCharacters = /(\\n|\\t|\\r|<|&| {2})/;\nfunction $d5e0fde316cac971$export$3255ca5635e70aed(node, string) {\n    if (typeof string === 'string' && ($d5e0fde316cac971$var$whiteSpaceStart.test(string) || $d5e0fde316cac971$var$whiteSpaceEnd.test(string) || $d5e0fde316cac971$var$cdataCharacters.test(string))) string.split(']]>').forEach((part, i, a)=>{\n        if (i < a.length - 1) part += ']]';\n        if (i > 0) part = '>' + part;\n        $d5e0fde316cac971$export$d6c624180454e8f9(node, part);\n    });\n    else node.appendChild((0, $a4f89edd2ef65182$export$f65ca476c09acec0)().createTextNode(string));\n}\n\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */ /**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */ /**\n * @const\n * @type {Array<string>}\n */ const $1140dfbeee585f32$var$GX_NAMESPACE_URIS = [\n    'http://www.google.com/kml/ext/2.2'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */ const $1140dfbeee585f32$var$NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2'\n];\n/**\n * @const\n * @type {string}\n */ const $1140dfbeee585f32$var$SCHEMA_LOCATION = \"http://www.opengis.net/kml/2.2 https://developers.google.com/kml/schema/kml22gx.xsd\";\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */ const $1140dfbeee585f32$var$ICON_ANCHOR_UNITS_MAP = {\n    'fraction': 'fraction',\n    'pixels': 'pixels',\n    'insetPixels': 'pixels'\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$PLACEMARK_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'ExtendedData': $1140dfbeee585f32$var$extendedDataParser,\n    'Region': $1140dfbeee585f32$var$regionParser,\n    'MultiGeometry': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readMultiGeometry, 'geometry'),\n    'LineString': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readLineString, 'geometry'),\n    'LinearRing': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readLinearRing, 'geometry'),\n    'Point': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readPoint, 'geometry'),\n    'Polygon': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readPolygon, 'geometry'),\n    'Style': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readStyle),\n    'StyleMap': $1140dfbeee585f32$var$placemarkStyleMapParser,\n    'address': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'description': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'name': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'open': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$f9a84177eae95ed5)),\n    'phoneNumber': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'styleUrl': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readStyleURL),\n    'visibility': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$f9a84177eae95ed5))\n}, (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$GX_NAMESPACE_URIS, {\n    'MultiTrack': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readGxMultiTrack, 'geometry'),\n    'Track': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$NETWORK_LINK_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'ExtendedData': $1140dfbeee585f32$var$extendedDataParser,\n    'Region': $1140dfbeee585f32$var$regionParser,\n    'Link': $1140dfbeee585f32$var$linkParser,\n    'address': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'description': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'name': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'open': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$f9a84177eae95ed5)),\n    'phoneNumber': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'visibility': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$f9a84177eae95ed5))\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$LINK_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'href': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$CAMERA_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    Altitude: (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    Longitude: (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    Latitude: (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    Tilt: (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    AltitudeMode: (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    Heading: (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    Roll: (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b))\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$REGION_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'LatLonAltBox': $1140dfbeee585f32$var$latLonAltBoxParser,\n    'Lod': $1140dfbeee585f32$var$lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$KML_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, [\n    'Document',\n    'Placemark'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$KML_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'Document': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeDocument),\n    'Placemark': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */ let $1140dfbeee585f32$var$DEFAULT_COLOR;\n/**\n * @type {Fill|null}\n */ let $1140dfbeee585f32$var$DEFAULT_FILL_STYLE = null;\nfunction $1140dfbeee585f32$export$21e811a557b26b54() {\n    return $1140dfbeee585f32$var$DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */ let $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */ let $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */ let $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */ let $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */ let $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */ let $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE = null;\nfunction $1140dfbeee585f32$export$a17963acbf6c1558() {\n    return $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */ let $1140dfbeee585f32$var$DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke|null}\n */ let $1140dfbeee585f32$var$DEFAULT_STROKE_STYLE = null;\nfunction $1140dfbeee585f32$export$3207aea01810180d() {\n    return $1140dfbeee585f32$var$DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */ let $1140dfbeee585f32$var$DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text|null}\n */ let $1140dfbeee585f32$var$DEFAULT_TEXT_STYLE = null;\nfunction $1140dfbeee585f32$export$58459f1e3c16c230() {\n    return $1140dfbeee585f32$var$DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style|null}\n */ let $1140dfbeee585f32$var$DEFAULT_STYLE = null;\nfunction $1140dfbeee585f32$export$26ecbb5c9753d95f() {\n    return $1140dfbeee585f32$var$DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>|null}\n */ let $1140dfbeee585f32$var$DEFAULT_STYLE_ARRAY = null;\nfunction $1140dfbeee585f32$export$f1c529e822ec2fdc() {\n    return $1140dfbeee585f32$var$DEFAULT_STYLE_ARRAY;\n}\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */ function $1140dfbeee585f32$var$scaleForSize(size) {\n    return 32 / Math.min(size[0], size[1]);\n}\nfunction $1140dfbeee585f32$var$createStyleDefaults() {\n    $1140dfbeee585f32$var$DEFAULT_COLOR = [\n        255,\n        255,\n        255,\n        1\n    ];\n    $1140dfbeee585f32$var$DEFAULT_FILL_STYLE = new (0, $inIMS.default)({\n        color: $1140dfbeee585f32$var$DEFAULT_COLOR\n    });\n    $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR = [\n        20,\n        2\n    ];\n    $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n    $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n    $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SIZE = [\n        64,\n        64\n    ];\n    $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SRC = 'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE = new (0, $bmHVE.default)({\n        anchor: $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: 'bottom-left',\n        anchorXUnits: $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: $1140dfbeee585f32$var$scaleForSize($1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SIZE),\n        size: $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SIZE,\n        src: $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SRC\n    });\n    $1140dfbeee585f32$var$DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    $1140dfbeee585f32$var$DEFAULT_STROKE_STYLE = new (0, $lrKvI.default)({\n        color: $1140dfbeee585f32$var$DEFAULT_COLOR,\n        width: 1\n    });\n    $1140dfbeee585f32$var$DEFAULT_TEXT_STROKE_STYLE = new (0, $lrKvI.default)({\n        color: [\n            51,\n            51,\n            51,\n            1\n        ],\n        width: 2\n    });\n    $1140dfbeee585f32$var$DEFAULT_TEXT_STYLE = new (0, $cJntk.default)({\n        font: 'bold 16px Helvetica',\n        fill: $1140dfbeee585f32$var$DEFAULT_FILL_STYLE,\n        stroke: $1140dfbeee585f32$var$DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8\n    });\n    $1140dfbeee585f32$var$DEFAULT_STYLE = new (0, $c3RIb.default)({\n        fill: $1140dfbeee585f32$var$DEFAULT_FILL_STYLE,\n        image: $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE,\n        text: $1140dfbeee585f32$var$DEFAULT_TEXT_STYLE,\n        stroke: $1140dfbeee585f32$var$DEFAULT_STROKE_STYLE,\n        zIndex: 0\n    });\n    $1140dfbeee585f32$var$DEFAULT_STYLE_ARRAY = [\n        $1140dfbeee585f32$var$DEFAULT_STYLE\n    ];\n}\n/**\n * @type {HTMLTextAreaElement}\n */ let $1140dfbeee585f32$var$TEXTAREA;\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */ /**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */ function $1140dfbeee585f32$var$defaultIconUrlFunction(href) {\n    return href;\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */ /**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */ class $1140dfbeee585f32$var$KML extends (0, $ce16c3ce3167dc37$export$2e2bcd8739ae039) {\n    /**\n   * @param {Options} [options] Options.\n   */ constructor(options){\n        super();\n        options = options ? options : {};\n        if (!$1140dfbeee585f32$var$DEFAULT_STYLE_ARRAY) $1140dfbeee585f32$var$createStyleDefaults();\n        /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */ this.dataProjection = (0, $dpRHA.get)('EPSG:4326');\n        /**\n     * @private\n     * @type {Array<Style>}\n     */ this.defaultStyle_ = options.defaultStyle ? options.defaultStyle : $1140dfbeee585f32$var$DEFAULT_STYLE_ARRAY;\n        /**\n     * @private\n     * @type {boolean}\n     */ this.extractStyles_ = options.extractStyles !== undefined ? options.extractStyles : true;\n        /**\n     * @type {boolean}\n     */ this.writeStyles_ = options.writeStyles !== undefined ? options.writeStyles : true;\n        /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */ this.sharedStyles_ = {};\n        /**\n     * @private\n     * @type {boolean}\n     */ this.showPointNames_ = options.showPointNames !== undefined ? options.showPointNames : true;\n        /**\n     * @type {null|string}\n     */ this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        /**\n     * @type {IconUrlFunction}\n     */ this.iconUrlFunction_ = options.iconUrlFunction ? options.iconUrlFunction : $1140dfbeee585f32$var$defaultIconUrlFunction;\n        this.supportedMediaTypes = [\n            'application/vnd.google-earth.kml+xml'\n        ];\n    }\n    /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */ readDocumentOrFolder_(node, objectStack) {\n        // FIXME use scope somehow\n        const parsersNS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n            'Document': (0, $a4f89edd2ef65182$export$b2d5eb949eb55a2a)(this.readDocumentOrFolder_, this),\n            'Folder': (0, $a4f89edd2ef65182$export$b2d5eb949eb55a2a)(this.readDocumentOrFolder_, this),\n            'Placemark': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this)\n        });\n        /** @type {Array<Feature>} */ // @ts-ignore\n        const features = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)([], parsersNS, node, objectStack, this);\n        if (features) return features;\n        return undefined;\n    }\n    /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */ readPlacemark_(node, objectStack) {\n        const object = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({\n            'geometry': null\n        }, $1140dfbeee585f32$var$PLACEMARK_PARSERS, node, objectStack, this);\n        if (!object) return undefined;\n        const feature = new (0, $dIG9p.default)();\n        const id = node.getAttribute('id');\n        if (id !== null) feature.setId(id);\n        const options = /** @type {import(\"./Feature.js\").ReadOptions} */ objectStack[0];\n        const geometry = object['geometry'];\n        if (geometry) (0, $kgouC.transformGeometryWithOptions)(geometry, false, options);\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            const style = object['Style'];\n            const styleUrl = object['styleUrl'];\n            const styleFunction = $1140dfbeee585f32$var$createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    }\n    /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */ readSharedStyle_(node, objectStack) {\n        const id = node.getAttribute('id');\n        if (id !== null) {\n            const style = $1140dfbeee585f32$var$readStyle.call(this, node, objectStack);\n            if (style) {\n                let styleUri;\n                let baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') baseURI = window.location.href;\n                if (baseURI) {\n                    const url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                } else styleUri = '#' + id;\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    }\n    /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */ readSharedStyleMap_(node, objectStack) {\n        const id = node.getAttribute('id');\n        if (id === null) return;\n        const styleMapValue = $1140dfbeee585f32$var$readStyleMapValue.call(this, node, objectStack);\n        if (!styleMapValue) return;\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') baseURI = window.location.href;\n        if (baseURI) {\n            const url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        } else styleUri = '#' + id;\n        this.sharedStyles_[styleUri] = styleMapValue;\n    }\n    /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */ readFeatureFromNode(node, options) {\n        if (!$1140dfbeee585f32$var$NAMESPACE_URIS.includes(node.namespaceURI)) return null;\n        const feature = this.readPlacemark_(node, [\n            this.getReadOptions(node, options)\n        ]);\n        if (feature) return feature;\n        return null;\n    }\n    /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */ readFeaturesFromNode(node, options) {\n        if (!$1140dfbeee585f32$var$NAMESPACE_URIS.includes(node.namespaceURI)) return [];\n        let features;\n        const localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [\n                this.getReadOptions(node, options)\n            ]);\n            if (features) return features;\n            return [];\n        }\n        if (localName == 'Placemark') {\n            const feature = this.readPlacemark_(node, [\n                this.getReadOptions(node, options)\n            ]);\n            if (feature) return [\n                feature\n            ];\n            return [];\n        }\n        if (localName == 'kml') {\n            features = [];\n            for(let n = node.firstElementChild; n; n = n.nextElementSibling){\n                const fs = this.readFeaturesFromNode(n, options);\n                if (fs) (0, $fVVyM.extend)(features, fs);\n            }\n            return features;\n        }\n        return [];\n    }\n    /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */ readName(source) {\n        if (!source) return undefined;\n        if (typeof source === 'string') {\n            const doc = (0, $a4f89edd2ef65182$export$98e6a39c04603d36)(source);\n            return this.readNameFromDocument(doc);\n        }\n        if ((0, $a4f89edd2ef65182$export$62858bae88b53fd0)(source)) return this.readNameFromDocument(/** @type {Document} */ source);\n        return this.readNameFromNode(/** @type {Element} */ source);\n    }\n    /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */ readNameFromDocument(doc) {\n        for(let n = /** @type {Node} */ doc.firstChild; n; n = n.nextSibling)if (n.nodeType == Node.ELEMENT_NODE) {\n            const name = this.readNameFromNode(/** @type {Element} */ n);\n            if (name) return name;\n        }\n        return undefined;\n    }\n    /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */ readNameFromNode(node) {\n        for(let n = node.firstElementChild; n; n = n.nextElementSibling){\n            if ($1140dfbeee585f32$var$NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') return (0, $d5e0fde316cac971$export$dda73877cb166cd3)(n);\n        }\n        for(let n = node.firstElementChild; n; n = n.nextElementSibling){\n            const localName = n.localName;\n            if ($1140dfbeee585f32$var$NAMESPACE_URIS.includes(n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'Placemark' || localName == 'kml')) {\n                const name = this.readNameFromNode(n);\n                if (name) return name;\n            }\n        }\n        return undefined;\n    }\n    /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */ readNetworkLinks(source) {\n        const networkLinks = [];\n        if (typeof source === 'string') {\n            const doc = (0, $a4f89edd2ef65182$export$98e6a39c04603d36)(source);\n            (0, $fVVyM.extend)(networkLinks, this.readNetworkLinksFromDocument(doc));\n        } else if ((0, $a4f89edd2ef65182$export$62858bae88b53fd0)(source)) (0, $fVVyM.extend)(networkLinks, this.readNetworkLinksFromDocument(/** @type {Document} */ source));\n        else (0, $fVVyM.extend)(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ source));\n        return networkLinks;\n    }\n    /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */ readNetworkLinksFromDocument(doc) {\n        const networkLinks = [];\n        for(let n = /** @type {Node} */ doc.firstChild; n; n = n.nextSibling)if (n.nodeType == Node.ELEMENT_NODE) (0, $fVVyM.extend)(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ n));\n        return networkLinks;\n    }\n    /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */ readNetworkLinksFromNode(node) {\n        const networkLinks = [];\n        for(let n = node.firstElementChild; n; n = n.nextElementSibling)if ($1140dfbeee585f32$var$NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'NetworkLink') {\n            const obj = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$NETWORK_LINK_PARSERS, n, []);\n            networkLinks.push(obj);\n        }\n        for(let n = node.firstElementChild; n; n = n.nextElementSibling){\n            const localName = n.localName;\n            if ($1140dfbeee585f32$var$NAMESPACE_URIS.includes(n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) (0, $fVVyM.extend)(networkLinks, this.readNetworkLinksFromNode(n));\n        }\n        return networkLinks;\n    }\n    /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */ readRegion(source) {\n        const regions = [];\n        if (typeof source === 'string') {\n            const doc = (0, $a4f89edd2ef65182$export$98e6a39c04603d36)(source);\n            (0, $fVVyM.extend)(regions, this.readRegionFromDocument(doc));\n        } else if ((0, $a4f89edd2ef65182$export$62858bae88b53fd0)(source)) (0, $fVVyM.extend)(regions, this.readRegionFromDocument(/** @type {Document} */ source));\n        else (0, $fVVyM.extend)(regions, this.readRegionFromNode(/** @type {Element} */ source));\n        return regions;\n    }\n    /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */ readRegionFromDocument(doc) {\n        const regions = [];\n        for(let n = /** @type {Node} */ doc.firstChild; n; n = n.nextSibling)if (n.nodeType == Node.ELEMENT_NODE) (0, $fVVyM.extend)(regions, this.readRegionFromNode(/** @type {Element} */ n));\n        return regions;\n    }\n    /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */ readRegionFromNode(node) {\n        const regions = [];\n        for(let n = node.firstElementChild; n; n = n.nextElementSibling)if ($1140dfbeee585f32$var$NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n            const obj = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$REGION_PARSERS, n, []);\n            regions.push(obj);\n        }\n        for(let n = node.firstElementChild; n; n = n.nextElementSibling){\n            const localName = n.localName;\n            if ($1140dfbeee585f32$var$NAMESPACE_URIS.includes(n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) (0, $fVVyM.extend)(regions, this.readRegionFromNode(n));\n        }\n        return regions;\n    }\n    /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */ /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */ readCamera(source) {\n        const cameras = [];\n        if (typeof source === 'string') {\n            const doc = (0, $a4f89edd2ef65182$export$98e6a39c04603d36)(source);\n            (0, $fVVyM.extend)(cameras, this.readCameraFromDocument(doc));\n        } else if ((0, $a4f89edd2ef65182$export$62858bae88b53fd0)(source)) (0, $fVVyM.extend)(cameras, this.readCameraFromDocument(/** @type {Document} */ source));\n        else (0, $fVVyM.extend)(cameras, this.readCameraFromNode(/** @type {Element} */ source));\n        return cameras;\n    }\n    /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */ readCameraFromDocument(doc) {\n        const cameras = [];\n        for(let n = /** @type {Node} */ doc.firstChild; n; n = n.nextSibling)if (n.nodeType === Node.ELEMENT_NODE) (0, $fVVyM.extend)(cameras, this.readCameraFromNode(/** @type {Element} */ n));\n        return cameras;\n    }\n    /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */ readCameraFromNode(node) {\n        const cameras = [];\n        for(let n = node.firstElementChild; n; n = n.nextElementSibling)if ($1140dfbeee585f32$var$NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n            const obj = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$CAMERA_PARSERS, n, []);\n            cameras.push(obj);\n        }\n        for(let n = node.firstElementChild; n; n = n.nextElementSibling){\n            const localName = n.localName;\n            if ($1140dfbeee585f32$var$NAMESPACE_URIS.includes(n.namespaceURI) && (localName === 'Document' || localName === 'Folder' || localName === 'Placemark' || localName === 'kml')) (0, $fVVyM.extend)(cameras, this.readCameraFromNode(n));\n        }\n        return cameras;\n    }\n    /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */ writeFeaturesNode(features, options) {\n        options = this.adaptOptions(options);\n        const kml = (0, $a4f89edd2ef65182$export$7094a064528c7fee)($1140dfbeee585f32$var$NAMESPACE_URIS[4], 'kml');\n        const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', $1140dfbeee585f32$var$GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', (0, $a4f89edd2ef65182$export$be284679de3fbea8));\n        kml.setAttributeNS((0, $a4f89edd2ef65182$export$be284679de3fbea8), 'xsi:schemaLocation', $1140dfbeee585f32$var$SCHEMA_LOCATION);\n        const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n            node: kml\n        };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */ const properties = {};\n        if (features.length > 1) properties['Document'] = features;\n        else if (features.length == 1) properties['Placemark'] = features[0];\n        const orderedKeys = $1140dfbeee585f32$var$KML_SEQUENCE[kml.namespaceURI];\n        const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n        (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$KML_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, [\n            options\n        ], orderedKeys, this);\n        return kml;\n    }\n}\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */ function $1140dfbeee585f32$var$createNameStyleFunction(foundStyle, name) {\n    const textOffset = [\n        0,\n        0\n    ];\n    /** @type {CanvasTextAlign} */ let textAlign = 'start';\n    const imageStyle = foundStyle.getImage();\n    if (imageStyle) {\n        const imageSize = imageStyle.getSize();\n        if (imageSize && imageSize.length == 2) {\n            const imageScale = imageStyle.getScaleArray();\n            const anchor = imageStyle.getAnchor();\n            // Offset the label to be centered to the right of the icon,\n            // if there is one.\n            textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n            textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n            textAlign = 'left';\n        }\n    }\n    let textStyle = foundStyle.getText();\n    if (textStyle) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        textStyle = textStyle.clone();\n        textStyle.setFont(textStyle.getFont() || $1140dfbeee585f32$var$DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(textStyle.getScale() || $1140dfbeee585f32$var$DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(textStyle.getFill() || $1140dfbeee585f32$var$DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(textStyle.getStroke() || $1140dfbeee585f32$var$DEFAULT_TEXT_STROKE_STYLE);\n    } else textStyle = $1140dfbeee585f32$var$DEFAULT_TEXT_STYLE.clone();\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    const nameStyle = new (0, $c3RIb.default)({\n        image: imageStyle,\n        text: textStyle\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */ function $1140dfbeee585f32$var$createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return(/**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */ function(feature, resolution) {\n        let drawName = showPointNames;\n        let name = '';\n        let multiGeometryPoints = [];\n        if (drawName) {\n            const geometry = feature.getGeometry();\n            if (geometry) {\n                if (geometry instanceof (0, $1eatv.default)) {\n                    multiGeometryPoints = geometry.getGeometriesArrayRecursive().filter(function(geometry) {\n                        const type = geometry.getType();\n                        return type === 'Point' || type === 'MultiPoint';\n                    });\n                    drawName = multiGeometryPoints.length > 0;\n                } else {\n                    const type = geometry.getType();\n                    drawName = type === 'Point' || type === 'MultiPoint';\n                }\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ feature.get('name');\n            drawName = drawName && !!name;\n            // convert any html character codes\n            if (drawName && /&[^&]+;/.test(name)) {\n                if (!$1140dfbeee585f32$var$TEXTAREA) $1140dfbeee585f32$var$TEXTAREA = document.createElement('textarea');\n                $1140dfbeee585f32$var$TEXTAREA.innerHTML = name;\n                name = $1140dfbeee585f32$var$TEXTAREA.value;\n            }\n        }\n        let featureStyle = defaultStyle;\n        if (style) featureStyle = style;\n        else if (styleUrl) featureStyle = $1140dfbeee585f32$var$findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n            const nameStyle = $1140dfbeee585f32$var$createNameStyleFunction(featureStyle[0], name);\n            if (multiGeometryPoints.length > 0) {\n                // in multigeometries restrict the name style to points and create a\n                // style without image or text for geometries requiring fill or stroke\n                // including any polygon specific style if there is one\n                nameStyle.setGeometry(new (0, $1eatv.default)(multiGeometryPoints));\n                const baseStyle = new (0, $c3RIb.default)({\n                    geometry: featureStyle[0].getGeometry(),\n                    image: null,\n                    fill: featureStyle[0].getFill(),\n                    stroke: featureStyle[0].getStroke(),\n                    text: null\n                });\n                return [\n                    nameStyle,\n                    baseStyle\n                ].concat(featureStyle.slice(1));\n            }\n            return nameStyle;\n        }\n        return featureStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */ function $1140dfbeee585f32$var$findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) return styleValue;\n    if (typeof styleValue === 'string') return $1140dfbeee585f32$var$findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    return defaultStyle;\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */ function $1140dfbeee585f32$var$readColor(node) {\n    const s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        const hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255\n        ];\n    }\n    return undefined;\n}\nfunction $1140dfbeee585f32$export$b231062f8c36cd1(node) {\n    let s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false);\n    const flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    s = s.replace(/\\s*,\\s*/g, ',');\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n    let m;\n    while(m = re.exec(s)){\n        const x = parseFloat(m[1]);\n        const y = parseFloat(m[2]);\n        const z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') return undefined;\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */ function $1140dfbeee585f32$var$readURI(node) {\n    const s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false).trim();\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') baseURI = window.location.href;\n    if (baseURI) {\n        const url = new URL(s, baseURI);\n        return url.href;\n    }\n    return s;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */ function $1140dfbeee585f32$var$readStyleURL(node) {\n    // KML files in the wild occasionally forget the leading\n    // `#` on styleUrlsdefined in the same document.\n    const s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false).trim().replace(/^(?!.*#)/, '#');\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') baseURI = window.location.href;\n    if (baseURI) {\n        const url = new URL(s, baseURI);\n        return url.href;\n    }\n    return s;\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */ function $1140dfbeee585f32$var$readVec2(node) {\n    const xunits = node.getAttribute('xunits');\n    const yunits = node.getAttribute('yunits');\n    /** @type {import('../style/Icon.js').IconOrigin} */ let origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') origin = 'bottom-left';\n        else origin = 'top-left';\n    } else if (yunits !== 'insetPixels') origin = 'bottom-right';\n    else origin = 'top-right';\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: $1140dfbeee585f32$var$ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: $1140dfbeee585f32$var$ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */ function $1140dfbeee585f32$var$readScale(node) {\n    return (0, $d5e0fde316cac971$export$5be9c99d34ad295b)(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$STYLE_MAP_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'Pair': $1140dfbeee585f32$var$pairDataParser\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */ function $1140dfbeee585f32$var$readStyleMapValue(node, objectStack) {\n    return (0, $a4f89edd2ef65182$export$5c934df85741dbd1)(undefined, $1140dfbeee585f32$var$STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$ICON_STYLE_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'Icon': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readIcon),\n    'color': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readColor),\n    'heading': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'hotSpot': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readVec2),\n    'scale': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readScale)\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    const object = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) return;\n    const styleObject = /** @type {Object} */ objectStack[objectStack.length - 1];\n    const IconObject = 'Icon' in object ? object['Icon'] : {};\n    const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n    let src;\n    const href = /** @type {string|undefined} */ IconObject['href'];\n    if (href) src = href;\n    else if (drawIcon) src = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SRC;\n    let anchor, anchorXUnits, anchorYUnits;\n    /** @type {import('../style/Icon.js').IconOrigin|undefined} */ let anchorOrigin = 'bottom-left';\n    const hotSpot = /** @type {Vec2|undefined} */ object['hotSpot'];\n    if (hotSpot) {\n        anchor = [\n            hotSpot.x,\n            hotSpot.y\n        ];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n        if (src.includes('pushpin')) {\n            anchor = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR;\n            anchorXUnits = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        } else if (src.includes('arrow-reverse')) {\n            anchor = [\n                54,\n                42\n            ];\n            anchorXUnits = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        } else if (src.includes('paddle')) {\n            anchor = [\n                32,\n                1\n            ];\n            anchorXUnits = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n    }\n    let offset;\n    const x = /** @type {number|undefined} */ IconObject['x'];\n    const y = /** @type {number|undefined} */ IconObject['y'];\n    if (x !== undefined && y !== undefined) offset = [\n        x,\n        y\n    ];\n    let size;\n    const w = /** @type {number|undefined} */ IconObject['w'];\n    const h = /** @type {number|undefined} */ IconObject['h'];\n    if (w !== undefined && h !== undefined) size = [\n        w,\n        h\n    ];\n    let rotation;\n    const heading = /** @type {number} */ object['heading'];\n    if (heading !== undefined) rotation = (0, $9byFX.toRadians)(heading);\n    const scale = /** @type {number|undefined} */ object['scale'];\n    const color = /** @type {Array<number>|undefined} */ object['color'];\n    if (drawIcon) {\n        if (src == $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SRC) size = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SIZE;\n        const imageStyle = new (0, $bmHVE.default)({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: this.crossOrigin_,\n            offset: offset,\n            offsetOrigin: 'bottom-left',\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: this.iconUrlFunction_(src),\n            color: color\n        });\n        const imageScale = imageStyle.getScaleArray()[0];\n        const imageSize = imageStyle.getSize();\n        if (imageSize === null) {\n            const imageState = imageStyle.getImageState();\n            if (imageState === (0, $aSvtr.default).IDLE || imageState === (0, $aSvtr.default).LOADING) {\n                const listener = function() {\n                    const imageState = imageStyle.getImageState();\n                    if (!(imageState === (0, $aSvtr.default).IDLE || imageState === (0, $aSvtr.default).LOADING)) {\n                        const imageSize = imageStyle.getSize();\n                        if (imageSize && imageSize.length == 2) {\n                            const resizeScale = $1140dfbeee585f32$var$scaleForSize(imageSize);\n                            imageStyle.setScale(imageScale * resizeScale);\n                        }\n                        imageStyle.unlistenImageChange(listener);\n                    }\n                };\n                imageStyle.listenImageChange(listener);\n                if (imageState === (0, $aSvtr.default).IDLE) imageStyle.load();\n            }\n        } else if (imageSize.length == 2) {\n            const resizeScale = $1140dfbeee585f32$var$scaleForSize(imageSize);\n            imageStyle.setScale(imageScale * resizeScale);\n        }\n        styleObject['imageStyle'] = imageStyle;\n    } else // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = $1140dfbeee585f32$var$DEFAULT_NO_IMAGE_STYLE;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$LABEL_STYLE_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'color': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readColor),\n    'scale': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    const object = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) return;\n    const styleObject = objectStack[objectStack.length - 1];\n    const textStyle = new (0, $cJntk.default)({\n        fill: new (0, $inIMS.default)({\n            color: /** @type {import(\"../color.js\").Color} */ 'color' in object ? object['color'] : $1140dfbeee585f32$var$DEFAULT_COLOR\n        }),\n        scale: /** @type {number|undefined} */ object['scale']\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$LINE_STYLE_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'color': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readColor),\n    'width': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b))\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    const object = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) return;\n    const styleObject = objectStack[objectStack.length - 1];\n    const strokeStyle = new (0, $lrKvI.default)({\n        color: /** @type {import(\"../color.js\").Color} */ 'color' in object ? object['color'] : $1140dfbeee585f32$var$DEFAULT_COLOR,\n        width: /** @type {number} */ 'width' in object ? object['width'] : 1\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$POLY_STYLE_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'color': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readColor),\n    'fill': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$f9a84177eae95ed5)),\n    'outline': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$f9a84177eae95ed5))\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    const object = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) return;\n    const styleObject = objectStack[objectStack.length - 1];\n    const fillStyle = new (0, $inIMS.default)({\n        color: /** @type {import(\"../color.js\").Color} */ 'color' in object ? object['color'] : $1140dfbeee585f32$var$DEFAULT_COLOR\n    });\n    styleObject['fillStyle'] = fillStyle;\n    const fill = /** @type {boolean|undefined} */ object['fill'];\n    if (fill !== undefined) styleObject['fill'] = fill;\n    const outline = /** @type {boolean|undefined} */ object['outline'];\n    if (outline !== undefined) styleObject['outline'] = outline;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$FLAT_LINEAR_RING_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'coordinates': (0, $a4f89edd2ef65182$export$b1b80676c57c5713)($1140dfbeee585f32$export$b231062f8c36cd1)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */ function $1140dfbeee585f32$var$readFlatLinearRing(node, objectStack) {\n    return (0, $a4f89edd2ef65182$export$5c934df85741dbd1)(null, $1140dfbeee585f32$var$FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$gxCoordParser(node, objectStack) {\n    const gxTrackObject = /** @type {GxTrackObject} */ objectStack[objectStack.length - 1];\n    const coordinates = gxTrackObject.coordinates;\n    const s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false);\n    const re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    const m = re.exec(s);\n    if (m) {\n        const x = parseFloat(m[1]);\n        const y = parseFloat(m[2]);\n        const z = parseFloat(m[3]);\n        coordinates.push([\n            x,\n            y,\n            z\n        ]);\n    } else coordinates.push([]);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$GX_MULTITRACK_GEOMETRY_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$GX_NAMESPACE_URIS, {\n    'Track': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($1140dfbeee585f32$var$readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */ function $1140dfbeee585f32$var$readGxMultiTrack(node, objectStack) {\n    const lineStrings = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)([], $1140dfbeee585f32$var$GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) return undefined;\n    return new (0, $fw94T.default)(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$GX_TRACK_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'when': $1140dfbeee585f32$var$whenParser\n}, (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$GX_NAMESPACE_URIS, {\n    'coord': $1140dfbeee585f32$var$gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */ function $1140dfbeee585f32$var$readGxTrack(node, objectStack) {\n    const gxTrackObject = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)(/** @type {GxTrackObject} */ {\n        coordinates: [],\n        whens: []\n    }, $1140dfbeee585f32$var$GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) return undefined;\n    const flatCoordinates = [];\n    const coordinates = gxTrackObject.coordinates;\n    const whens = gxTrackObject.whens;\n    for(let i = 0, ii = Math.min(coordinates.length, whens.length); i < ii; ++i)if (coordinates[i].length == 3) flatCoordinates.push(coordinates[i][0], coordinates[i][1], coordinates[i][2], whens[i]);\n    return new (0, $3xcD3.default)(flatCoordinates, 'XYZM');\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$ICON_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'href': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readURI)\n}, (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$GX_NAMESPACE_URIS, {\n    'x': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'y': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'w': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'h': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b))\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */ function $1140dfbeee585f32$var$readIcon(node, objectStack) {\n    const iconObject = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$ICON_PARSERS, node, objectStack);\n    if (iconObject) return iconObject;\n    return null;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$GEOMETRY_FLAT_COORDINATES_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'coordinates': (0, $a4f89edd2ef65182$export$b1b80676c57c5713)($1140dfbeee585f32$export$b231062f8c36cd1)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */ function $1140dfbeee585f32$var$readFlatCoordinatesFromNode(node, objectStack) {\n    return (0, $a4f89edd2ef65182$export$5c934df85741dbd1)(null, $1140dfbeee585f32$var$GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'extrude': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$f9a84177eae95ed5)),\n    'tessellate': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$f9a84177eae95ed5)),\n    'altitudeMode': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3))\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */ function $1140dfbeee585f32$var$readLineString(node, objectStack) {\n    const properties = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    const flatCoordinates = $1140dfbeee585f32$var$readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        const lineString = new (0, $3xcD3.default)(flatCoordinates, 'XYZ');\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */ function $1140dfbeee585f32$var$readLinearRing(node, objectStack) {\n    const properties = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    const flatCoordinates = $1140dfbeee585f32$var$readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        const polygon = new (0, $5ydre.default)(flatCoordinates, 'XYZ', [\n            flatCoordinates.length\n        ]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    return undefined;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$MULTI_GEOMETRY_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'LineString': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($1140dfbeee585f32$var$readLineString),\n    'LinearRing': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($1140dfbeee585f32$var$readLinearRing),\n    'MultiGeometry': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($1140dfbeee585f32$var$readMultiGeometry),\n    'Point': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($1140dfbeee585f32$var$readPoint),\n    'Polygon': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($1140dfbeee585f32$var$readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */ function $1140dfbeee585f32$var$readMultiGeometry(node, objectStack) {\n    const geometries = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)([], $1140dfbeee585f32$var$MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) return null;\n    if (geometries.length === 0) return new (0, $1eatv.default)(geometries);\n    let multiGeometry;\n    let homogeneous = true;\n    const type = geometries[0].getType();\n    let geometry;\n    for(let i = 1, ii = geometries.length; i < ii; ++i){\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        let layout;\n        let flatCoordinates;\n        if (type == 'Point') {\n            const point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for(let i = 1, ii = geometries.length; i < ii; ++i){\n                geometry = geometries[i];\n                (0, $fVVyM.extend)(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new (0, $jKs1i.default)(flatCoordinates, layout);\n            $1140dfbeee585f32$var$setCommonGeometryProperties(multiGeometry, geometries);\n        } else if (type == 'LineString') {\n            multiGeometry = new (0, $fw94T.default)(geometries);\n            $1140dfbeee585f32$var$setCommonGeometryProperties(multiGeometry, geometries);\n        } else if (type == 'Polygon') {\n            multiGeometry = new (0, $le5ya.default)(geometries);\n            $1140dfbeee585f32$var$setCommonGeometryProperties(multiGeometry, geometries);\n        } else if (type == 'GeometryCollection' || type.startsWith('Multi')) multiGeometry = new (0, $1eatv.default)(geometries);\n        else throw new Error('Unknown geometry type found');\n    } else multiGeometry = new (0, $1eatv.default)(geometries);\n    return /** @type {import(\"../geom/Geometry.js\").default} */ multiGeometry;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */ function $1140dfbeee585f32$var$readPoint(node, objectStack) {\n    const properties = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    const flatCoordinates = $1140dfbeee585f32$var$readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        const point = new (0, $9vPkX.default)(flatCoordinates, 'XYZ');\n        point.setProperties(properties, true);\n        return point;\n    }\n    return undefined;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$FLAT_LINEAR_RINGS_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'innerBoundaryIs': $1140dfbeee585f32$var$innerBoundaryIsParser,\n    'outerBoundaryIs': $1140dfbeee585f32$var$outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */ function $1140dfbeee585f32$var$readPolygon(node, objectStack) {\n    const properties = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)(/** @type {Object<string,*>} */ {}, $1140dfbeee585f32$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    const flatLinearRings = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)([\n        null\n    ], $1140dfbeee585f32$var$FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        const flatCoordinates = flatLinearRings[0];\n        const ends = [\n            flatCoordinates.length\n        ];\n        for(let i = 1, ii = flatLinearRings.length; i < ii; ++i){\n            (0, $fVVyM.extend)(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        const polygon = new (0, $5ydre.default)(flatCoordinates, 'XYZ', ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    return undefined;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$STYLE_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'IconStyle': $1140dfbeee585f32$var$iconStyleParser,\n    'LabelStyle': $1140dfbeee585f32$var$labelStyleParser,\n    'LineStyle': $1140dfbeee585f32$var$lineStyleParser,\n    'PolyStyle': $1140dfbeee585f32$var$polyStyleParser\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */ function $1140dfbeee585f32$var$readStyle(node, objectStack) {\n    const styleObject = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$STYLE_PARSERS, node, objectStack, this);\n    if (!styleObject) return null;\n    let fillStyle = /** @type {Fill} */ 'fillStyle' in styleObject ? styleObject['fillStyle'] : $1140dfbeee585f32$var$DEFAULT_FILL_STYLE;\n    const fill = /** @type {boolean|undefined} */ styleObject['fill'];\n    if (fill !== undefined && !fill) fillStyle = null;\n    let imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != $1140dfbeee585f32$var$DEFAULT_NO_IMAGE_STYLE) imageStyle = /** @type {import(\"../style/Image.js\").default} */ styleObject['imageStyle'];\n    } else imageStyle = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE;\n    const textStyle = /** @type {Text} */ 'textStyle' in styleObject ? styleObject['textStyle'] : $1140dfbeee585f32$var$DEFAULT_TEXT_STYLE;\n    const strokeStyle = /** @type {Stroke} */ 'strokeStyle' in styleObject ? styleObject['strokeStyle'] : $1140dfbeee585f32$var$DEFAULT_STROKE_STYLE;\n    const outline = /** @type {boolean|undefined} */ styleObject['outline'];\n    if (outline !== undefined && !outline) // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n        new (0, $c3RIb.default)({\n            geometry: function(feature) {\n                const geometry = feature.getGeometry();\n                const type = geometry.getType();\n                if (type === 'GeometryCollection') {\n                    const collection = /** @type {import(\"../geom/GeometryCollection\").default} */ geometry;\n                    return new (0, $1eatv.default)(collection.getGeometriesArrayRecursive().filter(function(geometry) {\n                        const type = geometry.getType();\n                        return type !== 'Polygon' && type !== 'MultiPolygon';\n                    }));\n                }\n                if (type !== 'Polygon' && type !== 'MultiPolygon') return geometry;\n            },\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined\n        }),\n        new (0, $c3RIb.default)({\n            geometry: function(feature) {\n                const geometry = feature.getGeometry();\n                const type = geometry.getType();\n                if (type === 'GeometryCollection') {\n                    const collection = /** @type {import(\"../geom/GeometryCollection\").default} */ geometry;\n                    return new (0, $1eatv.default)(collection.getGeometriesArrayRecursive().filter(function(geometry) {\n                        const type = geometry.getType();\n                        return type === 'Polygon' || type === 'MultiPolygon';\n                    }));\n                }\n                if (type === 'Polygon' || type === 'MultiPolygon') return geometry;\n            },\n            fill: fillStyle,\n            stroke: null,\n            zIndex: undefined\n        })\n    ];\n    return [\n        new (0, $c3RIb.default)({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined\n        })\n    ];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */ function $1140dfbeee585f32$var$setCommonGeometryProperties(multiGeometry, geometries) {\n    const ii = geometries.length;\n    const extrudes = new Array(geometries.length);\n    const tessellates = new Array(geometries.length);\n    const altitudeModes = new Array(geometries.length);\n    let hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = false;\n    hasTessellate = false;\n    hasAltitudeMode = false;\n    for(let i = 0; i < ii; ++i){\n        const geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) multiGeometry.set('extrude', extrudes);\n    if (hasTessellate) multiGeometry.set('tessellate', tessellates);\n    if (hasAltitudeMode) multiGeometry.set('altitudeMode', altitudeModes);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$DATA_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'displayName': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'value': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3))\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$dataParser(node, objectStack) {\n    const name = node.getAttribute('name');\n    (0, $a4f89edd2ef65182$export$dc8ce45ce1679f4f)($1140dfbeee585f32$var$DATA_PARSERS, node, objectStack);\n    const featureObject = /** @type {Object} */ objectStack[objectStack.length - 1];\n    if (name && featureObject.displayName) featureObject[name] = {\n        value: featureObject.value,\n        displayName: featureObject.displayName,\n        toString: function() {\n            return featureObject.value;\n        }\n    };\n    else if (name !== null) featureObject[name] = featureObject.value;\n    else if (featureObject.displayName !== null) featureObject[featureObject.displayName] = featureObject.value;\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$EXTENDED_DATA_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'Data': $1140dfbeee585f32$var$dataParser,\n    'SchemaData': $1140dfbeee585f32$var$schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$extendedDataParser(node, objectStack) {\n    (0, $a4f89edd2ef65182$export$dc8ce45ce1679f4f)($1140dfbeee585f32$var$EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$regionParser(node, objectStack) {\n    (0, $a4f89edd2ef65182$export$dc8ce45ce1679f4f)($1140dfbeee585f32$var$REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$PAIR_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'Style': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readStyle),\n    'key': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'styleUrl': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($1140dfbeee585f32$var$readStyleURL)\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$pairDataParser(node, objectStack) {\n    const pairObject = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$PAIR_PARSERS, node, objectStack, this);\n    if (!pairObject) return;\n    const key = /** @type {string|undefined} */ pairObject['key'];\n    if (key && key == 'normal') {\n        const styleUrl = /** @type {string|undefined} */ pairObject['styleUrl'];\n        if (styleUrl) objectStack[objectStack.length - 1] = styleUrl;\n        const style = /** @type {Style} */ pairObject['Style'];\n        if (style) objectStack[objectStack.length - 1] = style;\n    }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$placemarkStyleMapParser(node, objectStack) {\n    const styleMapValue = $1140dfbeee585f32$var$readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) return;\n    const placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) placemarkObject['Style'] = styleMapValue;\n    else if (typeof styleMapValue === 'string') placemarkObject['styleUrl'] = styleMapValue;\n    else throw new Error('`styleMapValue` has an unknown type');\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$SCHEMA_DATA_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'SimpleData': $1140dfbeee585f32$var$simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$schemaDataParser(node, objectStack) {\n    (0, $a4f89edd2ef65182$export$dc8ce45ce1679f4f)($1140dfbeee585f32$var$SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$simpleDataParser(node, objectStack) {\n    const name = node.getAttribute('name');\n    if (name !== null) {\n        const data = (0, $d5e0fde316cac971$export$dda73877cb166cd3)(node);\n        const featureObject = /** @type {Object} */ objectStack[objectStack.length - 1];\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$LAT_LON_ALT_BOX_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'altitudeMode': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'minAltitude': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'maxAltitude': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'north': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'south': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'east': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'west': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b))\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$latLonAltBoxParser(node, objectStack) {\n    const object = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) return;\n    const regionObject = /** @type {Object} */ objectStack[objectStack.length - 1];\n    const extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north'])\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$LOD_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'minLodPixels': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'maxLodPixels': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'minFadeExtent': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'maxFadeExtent': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b))\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$lodParser(node, objectStack) {\n    const object = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $1140dfbeee585f32$var$LOD_PARSERS, node, objectStack);\n    if (!object) return;\n    const lodObject = /** @type {Object} */ objectStack[objectStack.length - 1];\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$INNER_BOUNDARY_IS_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n    // allows multiple, so we parse multiple here too.\n    'LinearRing': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($1140dfbeee585f32$var$readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$innerBoundaryIsParser(node, objectStack) {\n    const innerBoundaryFlatLinearRings = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)(/** @type {Array<Array<number>>} */ [], $1140dfbeee585f32$var$INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (innerBoundaryFlatLinearRings.length > 0) {\n        const flatLinearRings = /** @type {Array<Array<number>>} */ objectStack[objectStack.length - 1];\n        flatLinearRings.push(...innerBoundaryFlatLinearRings);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$OUTER_BOUNDARY_IS_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'LinearRing': (0, $a4f89edd2ef65182$export$b1b80676c57c5713)($1140dfbeee585f32$var$readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */ const flatLinearRing = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)(undefined, $1140dfbeee585f32$var$OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        const flatLinearRings = /** @type {Array<Array<number>>} */ objectStack[objectStack.length - 1];\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$linkParser(node, objectStack) {\n    (0, $a4f89edd2ef65182$export$dc8ce45ce1679f4f)($1140dfbeee585f32$var$LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$whenParser(node, objectStack) {\n    const gxTrackObject = /** @type {GxTrackObject} */ objectStack[objectStack.length - 1];\n    const whens = gxTrackObject.whens;\n    const s = (0, $a4f89edd2ef65182$export$b089dda0fde13047)(node, false);\n    const when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */ function $1140dfbeee585f32$var$writeColorTextNode(node, color) {\n    const rgba = (0, $4iSHH.asArray)(color);\n    const opacity = rgba.length == 4 ? rgba[3] : 1;\n    /** @type {Array<string|number>} */ const abgr = [\n        opacity * 255,\n        rgba[2],\n        rgba[1],\n        rgba[0]\n    ];\n    for(let i = 0; i < 4; ++i){\n        const hex = Math.floor(/** @type {number} */ abgr[i]).toString(16);\n        abgr[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n    (0, $d5e0fde316cac971$export$3255ca5635e70aed)(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeCoordinatesTextNode(node, coordinates, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const layout = context['layout'];\n    const stride = context['stride'];\n    let dimension;\n    if (layout == 'XY' || layout == 'XYM') dimension = 2;\n    else if (layout == 'XYZ' || layout == 'XYZM') dimension = 3;\n    else throw new Error('Invalid geometry layout');\n    const ii = coordinates.length;\n    let text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for(let d = 1; d < dimension; ++d)text += ',' + coordinates[d];\n        for(let i = stride; i < ii; i += stride){\n            text += ' ' + coordinates[i];\n            for(let d = 1; d < dimension; ++d)text += ',' + coordinates[i + d];\n        }\n    }\n    (0, $d5e0fde316cac971$export$3255ca5635e70aed)(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$EXTENDEDDATA_NODE_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'Data': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeDataNode),\n    'value': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeDataNodeValue),\n    'displayName': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    const value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$EXTENDEDDATA_NODE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), [\n            value.displayName\n        ], objectStack, [\n            'displayName'\n        ]);\n        if (value !== null && value.value) (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$EXTENDEDDATA_NODE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), [\n            value.value\n        ], objectStack, [\n            'value'\n        ]);\n    } else (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$EXTENDEDDATA_NODE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), [\n        value\n    ], objectStack, [\n        'value'\n    ]);\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */ function $1140dfbeee585f32$var$writeDataNodeName(node, name) {\n    (0, $d5e0fde316cac971$export$3255ca5635e70aed)(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */ function $1140dfbeee585f32$var$writeDataNodeValue(node, value) {\n    (0, $d5e0fde316cac971$export$3255ca5635e70aed)(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$DOCUMENT_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'Placemark': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */ const $1140dfbeee585f32$var$DOCUMENT_NODE_FACTORY = function(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return (0, $a4f89edd2ef65182$export$7094a064528c7fee)(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */ function $1140dfbeee585f32$var$writeDocument(node, features, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$DOCUMENT_SERIALIZERS, $1140dfbeee585f32$var$DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */ const $1140dfbeee585f32$var$DATA_NODE_FACTORY = (0, $a4f89edd2ef65182$export$7989129829daaabf)('Data');\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeExtendedData(node, namesAndValues, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    const names = namesAndValues.names;\n    const values = namesAndValues.values;\n    const length = names.length;\n    for(let i = 0; i < length; i++)(0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$EXTENDEDDATA_NODE_SERIALIZERS, $1140dfbeee585f32$var$DATA_NODE_FACTORY, [\n        {\n            name: names[i],\n            value: values[i]\n        }\n    ], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$ICON_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, [\n    'href'\n], (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$GX_NAMESPACE_URIS, [\n    'x',\n    'y',\n    'w',\n    'h'\n]));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$ICON_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'href': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed))\n}, (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$GX_NAMESPACE_URIS, {\n    'x': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'y': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'w': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'h': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1))\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */ const $1140dfbeee585f32$var$GX_NODE_FACTORY = function(value, objectStack, nodeName) {\n    return (0, $a4f89edd2ef65182$export$7094a064528c7fee)($1140dfbeee585f32$var$GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeIcon(node, icon, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    const parentNode = objectStack[objectStack.length - 1].node;\n    let orderedKeys = $1140dfbeee585f32$var$ICON_SEQUENCE[parentNode.namespaceURI];\n    let values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(icon, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$ICON_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n    orderedKeys = $1140dfbeee585f32$var$ICON_SEQUENCE[$1140dfbeee585f32$var$GX_NAMESPACE_URIS[0]];\n    values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(icon, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$ICON_SERIALIZERS, $1140dfbeee585f32$var$GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$ICON_STYLE_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, [\n    'scale',\n    'heading',\n    'Icon',\n    'color',\n    'hotSpot'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$ICON_STYLE_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'Icon': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeIcon),\n    'color': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeColorTextNode),\n    'heading': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'hotSpot': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeVec2),\n    'scale': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeScaleTextNode)\n});\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeIconStyle(node, style, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    const /** @type {Object<string, any>} */ properties = {};\n    const src = style.getSrc();\n    const size = style.getSize();\n    const iconImageSize = style.getImageSize();\n    const iconProperties = {\n        'href': src\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        const anchor = style.getAnchor(); // top-left\n        const origin = style.getOrigin(); // top-left\n        if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n            iconProperties['x'] = origin[0];\n            iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            const /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: 'pixels',\n                y: size[1] - anchor[1],\n                yunits: 'pixels'\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    let scale = style.getScaleArray()[0];\n    let imageSize = size;\n    if (imageSize === null) imageSize = $1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SIZE;\n    if (imageSize.length == 2) {\n        const resizeScale = $1140dfbeee585f32$var$scaleForSize(imageSize);\n        scale = scale / resizeScale;\n    }\n    if (scale !== 1) properties['scale'] = scale;\n    const rotation = style.getRotation();\n    if (rotation !== 0) properties['heading'] = rotation; // 0-360\n    const color = style.getColor();\n    if (color) properties['color'] = color;\n    const parentNode = objectStack[objectStack.length - 1].node;\n    const orderedKeys = $1140dfbeee585f32$var$ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$ICON_STYLE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$LABEL_STYLE_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, [\n    'color',\n    'scale'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$LABEL_STYLE_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'color': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeColorTextNode),\n    'scale': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeScaleTextNode)\n});\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeLabelStyle(node, style, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    const properties = {};\n    const fill = style.getFill();\n    if (fill) properties['color'] = fill.getColor();\n    const scale = style.getScale();\n    if (scale && scale !== 1) properties['scale'] = scale;\n    const parentNode = objectStack[objectStack.length - 1].node;\n    const orderedKeys = $1140dfbeee585f32$var$LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$LABEL_STYLE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$LINE_STYLE_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, [\n    'color',\n    'width'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$LINE_STYLE_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'color': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeColorTextNode),\n    'width': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1))\n});\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeLineStyle(node, style, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    const properties = {\n        'color': style.getColor(),\n        'width': Number(style.getWidth()) || 1\n    };\n    const parentNode = objectStack[objectStack.length - 1].node;\n    const orderedKeys = $1140dfbeee585f32$var$LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$LINE_STYLE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */ const $1140dfbeee585f32$var$GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */ const $1140dfbeee585f32$var$GEOMETRY_NODE_FACTORY = function(value, objectStack, nodeName) {\n    if (value) {\n        const parentNode = objectStack[objectStack.length - 1].node;\n        return (0, $a4f89edd2ef65182$export$7094a064528c7fee)(parentNode.namespaceURI, $1140dfbeee585f32$var$GEOMETRY_TYPE_TO_NODENAME[/** @type {import(\"../geom/Geometry.js\").default} */ value.getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */ const $1140dfbeee585f32$var$POINT_NODE_FACTORY = (0, $a4f89edd2ef65182$export$7989129829daaabf)('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */ const $1140dfbeee585f32$var$LINE_STRING_NODE_FACTORY = (0, $a4f89edd2ef65182$export$7989129829daaabf)('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */ const $1140dfbeee585f32$var$LINEAR_RING_NODE_FACTORY = (0, $a4f89edd2ef65182$export$7989129829daaabf)('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */ const $1140dfbeee585f32$var$POLYGON_NODE_FACTORY = (0, $a4f89edd2ef65182$export$7989129829daaabf)('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$MULTI_GEOMETRY_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'LineString': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePrimitiveGeometry),\n    'Point': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePrimitiveGeometry),\n    'Polygon': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePolygon),\n    'GeometryCollection': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeMultiGeometry)\n});\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */ const context = {\n        node: node\n    };\n    const type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */ let geometries = [];\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */ let factory;\n    if (type === 'GeometryCollection') {\n        /** @type {GeometryCollection} */ geometry.getGeometriesArrayRecursive().forEach(function(geometry) {\n            const type = geometry.getType();\n            if (type === 'MultiPoint') geometries = geometries.concat(/** @type {MultiPoint} */ geometry.getPoints());\n            else if (type === 'MultiLineString') geometries = geometries.concat(/** @type {MultiLineString} */ geometry.getLineStrings());\n            else if (type === 'MultiPolygon') geometries = geometries.concat(/** @type {MultiPolygon} */ geometry.getPolygons());\n            else if (type === 'Point' || type === 'LineString' || type === 'Polygon') geometries.push(geometry);\n            else throw new Error('Unknown geometry type');\n        });\n        factory = $1140dfbeee585f32$var$GEOMETRY_NODE_FACTORY;\n    } else if (type === 'MultiPoint') {\n        geometries = /** @type {MultiPoint} */ geometry.getPoints();\n        factory = $1140dfbeee585f32$var$POINT_NODE_FACTORY;\n    } else if (type === 'MultiLineString') {\n        geometries = /** @type {MultiLineString} */ geometry.getLineStrings();\n        factory = $1140dfbeee585f32$var$LINE_STRING_NODE_FACTORY;\n    } else if (type === 'MultiPolygon') {\n        geometries = /** @type {MultiPolygon} */ geometry.getPolygons();\n        factory = $1140dfbeee585f32$var$POLYGON_NODE_FACTORY;\n    } else throw new Error('Unknown geometry type');\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$BOUNDARY_IS_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'LinearRing': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePrimitiveGeometry)\n});\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeBoundaryIs(node, linearRing, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$BOUNDARY_IS_SERIALIZERS, $1140dfbeee585f32$var$LINEAR_RING_NODE_FACTORY, [\n        linearRing\n    ], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$PLACEMARK_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'ExtendedData': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeExtendedData),\n    'MultiGeometry': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeMultiGeometry),\n    'LineString': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePrimitiveGeometry),\n    'LinearRing': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePrimitiveGeometry),\n    'Point': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePrimitiveGeometry),\n    'Polygon': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePolygon),\n    'Style': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeStyle),\n    'address': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'description': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'name': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'open': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$9de8e8a584a450b7)),\n    'phoneNumber': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'styleUrl': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'visibility': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$9de8e8a584a450b7))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$PLACEMARK_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, [\n    'name',\n    'open',\n    'visibility',\n    'address',\n    'phoneNumber',\n    'description',\n    'styleUrl',\n    'Style'\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */ const $1140dfbeee585f32$var$EXTENDEDDATA_NODE_FACTORY = (0, $a4f89edd2ef65182$export$7989129829daaabf)('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */ function $1140dfbeee585f32$var$writePlacemark(node, feature, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    // set id\n    if (feature.getId()) node.setAttribute('id', /** @type {string} */ feature.getId());\n    // serialize properties (properties unknown to KML are not serialized)\n    const properties = feature.getProperties();\n    // don't export these to ExtendedData\n    const filter = {\n        'address': 1,\n        'description': 1,\n        'name': 1,\n        'open': 1,\n        'phoneNumber': 1,\n        'styleUrl': 1,\n        'visibility': 1\n    };\n    filter[feature.getGeometryName()] = 1;\n    const keys = Object.keys(properties || {}).sort().filter(function(v) {\n        return !filter[v];\n    });\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        const styles = styleFunction(feature, 0);\n        if (styles) {\n            const styleArray = Array.isArray(styles) ? styles : [\n                styles\n            ];\n            let pointStyles = styleArray;\n            if (feature.getGeometry()) {\n                pointStyles = styleArray.filter(function(style) {\n                    const geometry = style.getGeometryFunction()(feature);\n                    if (geometry) {\n                        const type = geometry.getType();\n                        if (type === 'GeometryCollection') return /** @type {GeometryCollection} */ geometry.getGeometriesArrayRecursive().filter(function(geometry) {\n                            const type = geometry.getType();\n                            return type === 'Point' || type === 'MultiPoint';\n                        }).length;\n                        return type === 'Point' || type === 'MultiPoint';\n                    }\n                });\n                'Point';\n            }\n            if (this.writeStyles_) {\n                let lineStyles = styleArray;\n                let polyStyles = styleArray;\n                if (feature.getGeometry()) {\n                    lineStyles = styleArray.filter(function(style) {\n                        const geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            const type = geometry.getType();\n                            if (type === 'GeometryCollection') return /** @type {GeometryCollection} */ geometry.getGeometriesArrayRecursive().filter(function(geometry) {\n                                const type = geometry.getType();\n                                return type === 'LineString' || type === 'MultiLineString';\n                            }).length;\n                            return type === 'LineString' || type === 'MultiLineString';\n                        }\n                    });\n                    polyStyles = styleArray.filter(function(style) {\n                        const geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            const type = geometry.getType();\n                            if (type === 'GeometryCollection') return /** @type {GeometryCollection} */ geometry.getGeometriesArrayRecursive().filter(function(geometry) {\n                                const type = geometry.getType();\n                                return type === 'Polygon' || type === 'MultiPolygon';\n                            }).length;\n                            return type === 'Polygon' || type === 'MultiPolygon';\n                        }\n                    });\n                }\n                properties['Style'] = {\n                    pointStyles: pointStyles,\n                    lineStyles: lineStyles,\n                    polyStyles: polyStyles\n                };\n            }\n            if (pointStyles.length && properties['name'] === undefined) {\n                const textStyle = pointStyles[0].getText();\n                if (textStyle) properties['name'] = textStyle.getText();\n            }\n        }\n    }\n    const parentNode = objectStack[objectStack.length - 1].node;\n    const orderedKeys = $1140dfbeee585f32$var$PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$PLACEMARK_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        const sequence = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, keys);\n        const namesAndValues = {\n            names: keys,\n            values: sequence\n        };\n        (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$PLACEMARK_SERIALIZERS, $1140dfbeee585f32$var$EXTENDEDDATA_NODE_FACTORY, [\n            namesAndValues\n        ], objectStack);\n    }\n    // serialize geometry\n    const options = /** @type {import(\"./Feature.js\").WriteOptions} */ objectStack[0];\n    let geometry = feature.getGeometry();\n    if (geometry) geometry = (0, $kgouC.transformGeometryWithOptions)(geometry, true, options);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$PLACEMARK_SERIALIZERS, $1140dfbeee585f32$var$GEOMETRY_NODE_FACTORY, [\n        geometry\n    ], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$PRIMITIVE_GEOMETRY_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, [\n    'extrude',\n    'tessellate',\n    'altitudeMode',\n    'coordinates'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$PRIMITIVE_GEOMETRY_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'extrude': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$9de8e8a584a450b7)),\n    'tessellate': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$9de8e8a584a450b7)),\n    'altitudeMode': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'coordinates': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeCoordinatesTextNode)\n});\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writePrimitiveGeometry(node, geometry, objectStack) {\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    const properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    const parentNode = objectStack[objectStack.length - 1].node;\n    const orderedKeys = $1140dfbeee585f32$var$PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$PRIMITIVE_GEOMETRY_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$POLY_STYLE_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, [\n    'color',\n    'fill',\n    'outline'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$POLYGON_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'outerBoundaryIs': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeBoundaryIs),\n    'innerBoundaryIs': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */ const $1140dfbeee585f32$var$INNER_BOUNDARY_NODE_FACTORY = (0, $a4f89edd2ef65182$export$7989129829daaabf)('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */ const $1140dfbeee585f32$var$OUTER_BOUNDARY_NODE_FACTORY = (0, $a4f89edd2ef65182$export$7989129829daaabf)('outerBoundaryIs');\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writePolygon(node, polygon, objectStack) {\n    const linearRings = polygon.getLinearRings();\n    const outerRing = linearRings.shift();\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    // inner rings\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$POLYGON_SERIALIZERS, $1140dfbeee585f32$var$INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$POLYGON_SERIALIZERS, $1140dfbeee585f32$var$OUTER_BOUNDARY_NODE_FACTORY, [\n        outerRing\n    ], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$POLY_STYLE_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'color': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeColorTextNode),\n    'fill': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$9de8e8a584a450b7)),\n    'outline': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$9de8e8a584a450b7))\n});\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writePolyStyle(node, style, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    const fill = style.getFill();\n    const stroke = style.getStroke();\n    const properties = {\n        'color': fill ? fill.getColor() : undefined,\n        'fill': fill ? undefined : false,\n        'outline': stroke ? undefined : false\n    };\n    const parentNode = objectStack[objectStack.length - 1].node;\n    const orderedKeys = $1140dfbeee585f32$var$POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$POLY_STYLE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */ function $1140dfbeee585f32$var$writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    (0, $d5e0fde316cac971$export$f8009f9ca036d7d1)(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$STYLE_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, [\n    'IconStyle',\n    'LabelStyle',\n    'LineStyle',\n    'PolyStyle'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $1140dfbeee585f32$var$STYLE_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($1140dfbeee585f32$var$NAMESPACE_URIS, {\n    'IconStyle': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeIconStyle),\n    'LabelStyle': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeLabelStyle),\n    'LineStyle': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writeLineStyle),\n    'PolyStyle': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($1140dfbeee585f32$var$writePolyStyle)\n});\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */ function $1140dfbeee585f32$var$writeStyle(node, styles, objectStack) {\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: node\n    };\n    const properties = {};\n    if (styles.pointStyles.length) {\n        const textStyle = styles.pointStyles[0].getText();\n        if (textStyle) properties['LabelStyle'] = textStyle;\n        const imageStyle = styles.pointStyles[0].getImage();\n        if (imageStyle && typeof /** @type {?} */ imageStyle.getSrc === 'function') properties['IconStyle'] = imageStyle;\n    }\n    if (styles.lineStyles.length) {\n        const strokeStyle = styles.lineStyles[0].getStroke();\n        if (strokeStyle) properties['LineStyle'] = strokeStyle;\n    }\n    if (styles.polyStyles.length) {\n        const strokeStyle = styles.polyStyles[0].getStroke();\n        if (strokeStyle && !properties['LineStyle']) properties['LineStyle'] = strokeStyle;\n        properties['PolyStyle'] = styles.polyStyles[0];\n    }\n    const parentNode = objectStack[objectStack.length - 1].node;\n    const orderedKeys = $1140dfbeee585f32$var$STYLE_SEQUENCE[parentNode.namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $1140dfbeee585f32$var$STYLE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */ function $1140dfbeee585f32$var$writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nvar $1140dfbeee585f32$export$2e2bcd8739ae039 = $1140dfbeee585f32$var$KML;\n\n\n\nvar $bnthu = parcelRequire(\"bnthu\");\n/**\n * @module ol/format/IGC\n */ \nvar $dIG9p = parcelRequire(\"dIG9p\");\n\nvar $3xcD3 = parcelRequire(\"3xcD3\");\n\nvar $dpRHA = parcelRequire(\"dpRHA\");\n\nvar $kgouC = parcelRequire(\"kgouC\");\n/**\n * @module ol/format/TextFeature\n */ \nvar $kgouC = parcelRequire(\"kgouC\");\n\nvar $9iPUS = parcelRequire(\"9iPUS\");\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */ class $2e03ce1a961db7fd$var$TextFeature extends (0, $kgouC.default) {\n    constructor(){\n        super();\n    }\n    /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */ getType() {\n        return 'text';\n    }\n    /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */ readFeature(source, options) {\n        return this.readFeatureFromText($2e03ce1a961db7fd$var$getText(source), this.adaptOptions(options));\n    }\n    /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */ readFeatureFromText(text, options) {\n        return (0, $9iPUS.abstract)();\n    }\n    /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */ readFeatures(source, options) {\n        return this.readFeaturesFromText($2e03ce1a961db7fd$var$getText(source), this.adaptOptions(options));\n    }\n    /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */ readFeaturesFromText(text, options) {\n        return (0, $9iPUS.abstract)();\n    }\n    /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */ readGeometry(source, options) {\n        return this.readGeometryFromText($2e03ce1a961db7fd$var$getText(source), this.adaptOptions(options));\n    }\n    /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */ readGeometryFromText(text, options) {\n        return (0, $9iPUS.abstract)();\n    }\n    /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   * @override\n   */ readProjection(source) {\n        return this.readProjectionFromText($2e03ce1a961db7fd$var$getText(source));\n    }\n    /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */ readProjectionFromText(text) {\n        return this.dataProjection;\n    }\n    /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */ writeFeature(feature, options) {\n        return this.writeFeatureText(feature, this.adaptOptions(options));\n    }\n    /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */ writeFeatureText(feature, options) {\n        return (0, $9iPUS.abstract)();\n    }\n    /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */ writeFeatures(features, options) {\n        return this.writeFeaturesText(features, this.adaptOptions(options));\n    }\n    /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */ writeFeaturesText(features, options) {\n        return (0, $9iPUS.abstract)();\n    }\n    /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   * @override\n   */ writeGeometry(geometry, options) {\n        return this.writeGeometryText(geometry, this.adaptOptions(options));\n    }\n    /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */ writeGeometryText(geometry, options) {\n        return (0, $9iPUS.abstract)();\n    }\n}\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */ function $2e03ce1a961db7fd$var$getText(source) {\n    if (typeof source === 'string') return source;\n    return '';\n}\nvar $2e03ce1a961db7fd$export$2e2bcd8739ae039 = $2e03ce1a961db7fd$var$TextFeature;\n\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */ /**\n * @const\n * @type {RegExp}\n */ const $a3eff48c5fdb69ef$var$B_RECORD_RE = /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n/**\n * @const\n * @type {RegExp}\n */ const $a3eff48c5fdb69ef$var$H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n/**\n * @const\n * @type {RegExp}\n */ const $a3eff48c5fdb69ef$var$HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n/**\n * @const\n * @type {RegExp}\n */ const $a3eff48c5fdb69ef$var$HFDTEDATE_RECORD_RE = /^HFDTEDATE:(\\d{2})(\\d{2})(\\d{2}),(\\d{2})/;\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */ const $a3eff48c5fdb69ef$var$NEWLINE_RE = /\\r\\n|\\r|\\n/;\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */ /**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */ class $a3eff48c5fdb69ef$var$IGC extends (0, $2e03ce1a961db7fd$export$2e2bcd8739ae039) {\n    /**\n   * @param {Options} [options] Options.\n   */ constructor(options){\n        super();\n        options = options ? options : {};\n        /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */ this.dataProjection = (0, $dpRHA.get)('EPSG:4326');\n        /**\n     * @private\n     * @type {IGCZ}\n     */ this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n        /**\n     * @private\n     * @type {boolean}\n     */ this.lad_ = false;\n        /**\n     * @private\n     * @type {boolean}\n     */ this.lod_ = false;\n        /**\n     * @private\n     * @type {number}\n     */ this.ladStart_ = 0;\n        /**\n     * @private\n     * @type {number}\n     */ this.ladStop_ = 0;\n        /**\n     * @private\n     * @type {number}\n     */ this.lodStart_ = 0;\n        /**\n     * @private\n     * @type {number}\n     */ this.lodStop_ = 0;\n    }\n    /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */ readFeatureFromText(text, options) {\n        const altitudeMode = this.altitudeMode_;\n        const lines = text.split($a3eff48c5fdb69ef$var$NEWLINE_RE);\n        /** @type {Object<string, string>} */ const properties = {};\n        const flatCoordinates = [];\n        let year = 2000;\n        let month = 0;\n        let day = 1;\n        let lastDateTime = -1;\n        let i, ii;\n        for(i = 0, ii = lines.length; i < ii; ++i){\n            const line = lines[i];\n            let m;\n            if (line.charAt(0) == 'B') {\n                m = $a3eff48c5fdb69ef$var$B_RECORD_RE.exec(line);\n                if (m) {\n                    const hour = parseInt(m[1], 10);\n                    const minute = parseInt(m[2], 10);\n                    const second = parseInt(m[3], 10);\n                    let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n                    if (this.lad_) y += parseInt(line.slice(this.ladStart_, this.ladStop_), 10) / 60000 / 10 ** (this.ladStop_ - this.ladStart_);\n                    if (m[6] == 'S') y = -y;\n                    let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n                    if (this.lod_) x += parseInt(line.slice(this.lodStart_, this.lodStop_), 10) / 60000 / 10 ** (this.lodStop_ - this.lodStart_);\n                    if (m[9] == 'W') x = -x;\n                    flatCoordinates.push(x, y);\n                    if (altitudeMode != 'none') {\n                        let z;\n                        if (altitudeMode == 'gps') z = parseInt(m[11], 10);\n                        else if (altitudeMode == 'barometric') z = parseInt(m[12], 10);\n                        else z = 0;\n                        flatCoordinates.push(z);\n                    }\n                    let dateTime = Date.UTC(year, month, day, hour, minute, second);\n                    // Detect UTC midnight wrap around.\n                    if (dateTime < lastDateTime) dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n                    flatCoordinates.push(dateTime / 1000);\n                    lastDateTime = dateTime;\n                }\n            } else if (line.charAt(0) == 'H') {\n                m = $a3eff48c5fdb69ef$var$HFDTEDATE_RECORD_RE.exec(line);\n                if (m) {\n                    day = parseInt(m[1], 10);\n                    month = parseInt(m[2], 10) - 1;\n                    year = 2000 + parseInt(m[3], 10);\n                } else {\n                    m = $a3eff48c5fdb69ef$var$HFDTE_RECORD_RE.exec(line);\n                    if (m) {\n                        day = parseInt(m[1], 10);\n                        month = parseInt(m[2], 10) - 1;\n                        year = 2000 + parseInt(m[3], 10);\n                    } else {\n                        m = $a3eff48c5fdb69ef$var$H_RECORD_RE.exec(line);\n                        if (m) properties[m[1]] = m[2].trim();\n                    }\n                }\n            } else if (line.charAt(0) == 'I') {\n                const numberAdds = parseInt(line.slice(1, 3), 10);\n                for(let i = 0; i < numberAdds; i++){\n                    const addCode = line.slice(7 + i * 7, 10 + i * 7);\n                    if (addCode === 'LAD' || addCode === 'LOD') {\n                        // in IGC format, columns are numbered from 1\n                        const addStart = parseInt(line.slice(3 + i * 7, 5 + i * 7), 10) - 1;\n                        const addStop = parseInt(line.slice(5 + i * 7, 7 + i * 7), 10);\n                        if (addCode === 'LAD') {\n                            this.lad_ = true;\n                            this.ladStart_ = addStart;\n                            this.ladStop_ = addStop;\n                        } else if (addCode === 'LOD') {\n                            this.lod_ = true;\n                            this.lodStart_ = addStart;\n                            this.lodStop_ = addStop;\n                        }\n                    }\n                }\n            }\n        }\n        if (flatCoordinates.length === 0) return null;\n        const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n        const lineString = new (0, $3xcD3.default)(flatCoordinates, layout);\n        const feature = new (0, $dIG9p.default)((0, $kgouC.transformGeometryWithOptions)(lineString, false, options));\n        feature.setProperties(properties, true);\n        return feature;\n    }\n    /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */ readFeaturesFromText(text, options) {\n        const feature = this.readFeatureFromText(text, options);\n        if (feature) return [\n            feature\n        ];\n        return [];\n    }\n}\nvar $a3eff48c5fdb69ef$export$2e2bcd8739ae039 = $a3eff48c5fdb69ef$var$IGC;\n\n\n\nvar $l7vEP = parcelRequire(\"l7vEP\");\n/**\n * @module ol/format/GPX\n */ \nvar $dIG9p = parcelRequire(\"dIG9p\");\n\nvar $3xcD3 = parcelRequire(\"3xcD3\");\n\nvar $fw94T = parcelRequire(\"fw94T\");\n\nvar $9vPkX = parcelRequire(\"9vPkX\");\n\nvar $dpRHA = parcelRequire(\"dpRHA\");\n\n\nvar $kgouC = parcelRequire(\"kgouC\");\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */ const $c7152e7ae8968a6e$var$NAMESPACE_URIS = [\n    null,\n    'http://www.topografix.com/GPX/1/0',\n    'http://www.topografix.com/GPX/1/1'\n];\n/**\n * @const\n * @type {string}\n */ const $c7152e7ae8968a6e$var$SCHEMA_LOCATION = \"http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd\";\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */ const $c7152e7ae8968a6e$var$FEATURE_READER = {\n    'rte': $c7152e7ae8968a6e$var$readRte,\n    'trk': $c7152e7ae8968a6e$var$readTrk,\n    'wpt': $c7152e7ae8968a6e$var$readWpt\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$GPX_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'rte': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($c7152e7ae8968a6e$var$readRte),\n    'trk': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($c7152e7ae8968a6e$var$readTrk),\n    'wpt': (0, $a4f89edd2ef65182$export$18ed2f5932a1b385)($c7152e7ae8968a6e$var$readWpt)\n});\n/**\n * @typedef {Object} GPXLink\n * @property {string} [text] text\n * @property {string} [type] type\n */ /**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$LINK_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'text': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3), 'linkText'),\n    'type': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3), 'linkType')\n});\n/**\n * @typedef {Object} GPXAuthor\n * @property {string} [name] name\n * @property {string} [email] email\n * @property {GPXLink} [link] link\n */ /**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$AUTHOR_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'name': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'email': $c7152e7ae8968a6e$var$parseEmail,\n    'link': $c7152e7ae8968a6e$var$parseLink\n});\n/**\n * @typedef {Object} GPXMetadata\n * @property {string} [name] name\n * @property {string} [desc] desc\n * @property {GPXAuthor} [author] author\n * @property {GPXLink} [link] link\n * @property {number} [time] time\n * @property {string} [keywords] keywords\n * @property {Array<number>} [bounds] bounds\n * @property {Object} [extensions] extensions\n *\n */ /**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$METADATA_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'name': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'desc': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'author': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($c7152e7ae8968a6e$var$readAuthor),\n    'copyright': (0, $a4f89edd2ef65182$export$b69a91976ee81208)($c7152e7ae8968a6e$var$readCopyright),\n    'link': $c7152e7ae8968a6e$var$parseLink,\n    'time': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5079def2140fe6f2)),\n    'keywords': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'bounds': $c7152e7ae8968a6e$var$parseBounds,\n    'extensions': $c7152e7ae8968a6e$var$parseExtensions\n});\n/**\n * @typedef {Object} GPXCopyright\n * @property {string} [author] author\n * @property {number} [year] year\n * @property {string} [license] license\n */ /**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$COPYRIGHT_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'year': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$6161a72ab5b6b722)),\n    'license': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3))\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$GPX_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'rte': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($c7152e7ae8968a6e$var$writeRte),\n    'trk': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($c7152e7ae8968a6e$var$writeTrk),\n    'wpt': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($c7152e7ae8968a6e$var$writeWpt)\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */ /**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */ /**\n * @typedef {function(Feature, Node): void} ReadExtensions\n */ /**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */ class $c7152e7ae8968a6e$var$GPX extends (0, $ce16c3ce3167dc37$export$2e2bcd8739ae039) {\n    /**\n   * @param {Options} [options] Options.\n   */ constructor(options){\n        super();\n        options = options ? options : {};\n        /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */ this.dataProjection = (0, $dpRHA.get)('EPSG:4326');\n        /**\n     * @type {ReadExtensions|undefined}\n     * @private\n     */ this.readExtensions_ = options.readExtensions;\n    }\n    /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */ handleReadExtensions_(features) {\n        if (!features) features = [];\n        for(let i = 0, ii = features.length; i < ii; ++i){\n            const feature = features[i];\n            if (this.readExtensions_) {\n                const extensionsNode = feature.get('extensionsNode_') || null;\n                this.readExtensions_(feature, extensionsNode);\n            }\n            feature.set('extensionsNode_', undefined);\n        }\n    }\n    /**\n   * Reads a GPX file's metadata tag, reading among other things:\n   *   - the name and description of this GPX\n   *   - its author\n   *   - the copyright associated with this GPX file\n   *\n   * Will return null if no metadata tag is present (or no valid source is given).\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {GPXMetadata | null} Metadata\n   * @api\n   */ readMetadata(source) {\n        if (!source) return null;\n        if (typeof source === 'string') return this.readMetadataFromDocument((0, $a4f89edd2ef65182$export$98e6a39c04603d36)(source));\n        if ((0, $a4f89edd2ef65182$export$62858bae88b53fd0)(source)) return this.readMetadataFromDocument(/** @type {Document} */ source);\n        return this.readMetadataFromNode(source);\n    }\n    /**\n   * @param {Document} doc Document.\n   * @return {GPXMetadata | null} Metadata\n   */ readMetadataFromDocument(doc) {\n        for(let n = /** @type {Node} */ doc.firstChild; n; n = n.nextSibling)if (n.nodeType === Node.ELEMENT_NODE) {\n            const metadata = this.readMetadataFromNode(/** @type {Element} */ n);\n            if (metadata) return metadata;\n        }\n        return null;\n    }\n    /**\n   * @param {Element} node Node.\n   * @return {Object} Metadata\n   */ readMetadataFromNode(node) {\n        if (!$c7152e7ae8968a6e$var$NAMESPACE_URIS.includes(node.namespaceURI)) return null;\n        for(let n = node.firstElementChild; n; n = n.nextElementSibling){\n            if ($c7152e7ae8968a6e$var$NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'metadata') return (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $c7152e7ae8968a6e$var$METADATA_PARSERS, n, []);\n        }\n        return null;\n    }\n    /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */ readFeatureFromNode(node, options) {\n        if (!$c7152e7ae8968a6e$var$NAMESPACE_URIS.includes(node.namespaceURI)) return null;\n        const featureReader = $c7152e7ae8968a6e$var$FEATURE_READER[node.localName];\n        if (!featureReader) return null;\n        const feature = featureReader(node, [\n            this.getReadOptions(node, options)\n        ]);\n        if (!feature) return null;\n        this.handleReadExtensions_([\n            feature\n        ]);\n        return feature;\n    }\n    /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */ readFeaturesFromNode(node, options) {\n        if (!$c7152e7ae8968a6e$var$NAMESPACE_URIS.includes(node.namespaceURI)) return [];\n        if (node.localName == 'gpx') {\n            /** @type {Array<Feature>} */ const features = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)([], $c7152e7ae8968a6e$var$GPX_PARSERS, node, [\n                this.getReadOptions(node, options)\n            ]);\n            if (features) {\n                this.handleReadExtensions_(features);\n                return features;\n            }\n            return [];\n        }\n        return [];\n    }\n    /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */ writeFeaturesNode(features, options) {\n        options = this.adaptOptions(options);\n        //FIXME Serialize metadata\n        const gpx = (0, $a4f89edd2ef65182$export$7094a064528c7fee)('http://www.topografix.com/GPX/1/1', 'gpx');\n        const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', (0, $a4f89edd2ef65182$export$be284679de3fbea8));\n        gpx.setAttributeNS((0, $a4f89edd2ef65182$export$be284679de3fbea8), 'xsi:schemaLocation', $c7152e7ae8968a6e$var$SCHEMA_LOCATION);\n        gpx.setAttribute('version', '1.1');\n        gpx.setAttribute('creator', 'OpenLayers');\n        (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(/** @type {import(\"../xml.js\").NodeStackItem} */ {\n            node: gpx\n        }, $c7152e7ae8968a6e$var$GPX_SERIALIZERS, $c7152e7ae8968a6e$var$GPX_NODE_FACTORY, features, [\n            options\n        ]);\n        return gpx;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$RTE_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'name': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'cmt': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'desc': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'src': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'link': $c7152e7ae8968a6e$var$parseLink,\n    'number': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$6161a72ab5b6b722)),\n    'extensions': $c7152e7ae8968a6e$var$parseExtensions,\n    'type': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'rtept': $c7152e7ae8968a6e$var$parseRtePt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$RTEPT_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'ele': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'time': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5079def2140fe6f2))\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$TRK_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'name': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'cmt': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'desc': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'src': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'link': $c7152e7ae8968a6e$var$parseLink,\n    'number': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$6161a72ab5b6b722)),\n    'type': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'extensions': $c7152e7ae8968a6e$var$parseExtensions,\n    'trkseg': $c7152e7ae8968a6e$var$parseTrkSeg\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$TRKSEG_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'trkpt': $c7152e7ae8968a6e$var$parseTrkPt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$TRKPT_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'ele': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'time': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5079def2140fe6f2))\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$WPT_PARSERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'ele': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'time': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5079def2140fe6f2)),\n    'magvar': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'geoidheight': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'name': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'cmt': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'desc': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'src': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'link': $c7152e7ae8968a6e$var$parseLink,\n    'sym': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'type': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'fix': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$dda73877cb166cd3)),\n    'sat': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$6161a72ab5b6b722)),\n    'hdop': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'vdop': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'pdop': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'ageofdgpsdata': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$5be9c99d34ad295b)),\n    'dgpsid': (0, $a4f89edd2ef65182$export$b69a91976ee81208)((0, $d5e0fde316cac971$export$6161a72ab5b6b722)),\n    'extensions': $c7152e7ae8968a6e$var$parseExtensions\n});\n/**\n * @const\n * @type {Array<string>}\n */ const $c7152e7ae8968a6e$var$LINK_SEQUENCE = [\n    'text',\n    'type'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$LINK_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'text': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'type': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$RTE_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, [\n    'name',\n    'cmt',\n    'desc',\n    'src',\n    'link',\n    'number',\n    'type',\n    'rtept'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$RTE_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'name': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'cmt': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'desc': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'src': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'link': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($c7152e7ae8968a6e$var$writeLink),\n    'number': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$b6c828910b813a07)),\n    'type': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'rtept': (0, $a4f89edd2ef65182$export$fa227189764d6986)((0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($c7152e7ae8968a6e$var$writeWptType))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$RTEPT_TYPE_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, [\n    'ele',\n    'time'\n]);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$TRK_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, [\n    'name',\n    'cmt',\n    'desc',\n    'src',\n    'link',\n    'number',\n    'type',\n    'trkseg'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$TRK_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'name': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'cmt': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'desc': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'src': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'link': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($c7152e7ae8968a6e$var$writeLink),\n    'number': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$b6c828910b813a07)),\n    'type': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'trkseg': (0, $a4f89edd2ef65182$export$fa227189764d6986)((0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($c7152e7ae8968a6e$var$writeTrkSeg))\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */ const $c7152e7ae8968a6e$var$TRKSEG_NODE_FACTORY = (0, $a4f89edd2ef65182$export$7989129829daaabf)('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$TRKSEG_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'trkpt': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($c7152e7ae8968a6e$var$writeWptType)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$WPT_TYPE_SEQUENCE = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, [\n    'ele',\n    'time',\n    'magvar',\n    'geoidheight',\n    'name',\n    'cmt',\n    'desc',\n    'src',\n    'link',\n    'sym',\n    'type',\n    'fix',\n    'sat',\n    'hdop',\n    'vdop',\n    'pdop',\n    'ageofdgpsdata',\n    'dgpsid'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */ // @ts-ignore\nconst $c7152e7ae8968a6e$var$WPT_TYPE_SERIALIZERS = (0, $a4f89edd2ef65182$export$c6eb0402f939765f)($c7152e7ae8968a6e$var$NAMESPACE_URIS, {\n    'ele': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'time': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$4e91791cb8677e27)),\n    'magvar': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'geoidheight': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'name': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'cmt': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'desc': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'src': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'link': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)($c7152e7ae8968a6e$var$writeLink),\n    'sym': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'type': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'fix': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$3255ca5635e70aed)),\n    'sat': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$b6c828910b813a07)),\n    'hdop': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'vdop': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'pdop': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'ageofdgpsdata': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$f8009f9ca036d7d1)),\n    'dgpsid': (0, $a4f89edd2ef65182$export$77b73fc7f982cc07)((0, $d5e0fde316cac971$export$b6c828910b813a07))\n});\n/**\n * @const\n * @type {Object<string, string>}\n */ const $c7152e7ae8968a6e$var$GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'wpt',\n    'LineString': 'rte',\n    'MultiLineString': 'trk'\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */ function $c7152e7ae8968a6e$var$GPX_NODE_FACTORY(value, objectStack, nodeName) {\n    const geometry = /** @type {Feature} */ value.getGeometry();\n    if (geometry) {\n        const nodeName = $c7152e7ae8968a6e$var$GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n        if (nodeName) {\n            const parentNode = objectStack[objectStack.length - 1].node;\n            return (0, $a4f89edd2ef65182$export$7094a064528c7fee)(parentNode.namespaceURI, nodeName);\n        }\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */ function $c7152e7ae8968a6e$var$appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n    flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n    if ('ele' in values) {\n        flatCoordinates.push(/** @type {number} */ values['ele']);\n        delete values['ele'];\n        layoutOptions.hasZ = true;\n    } else flatCoordinates.push(0);\n    if ('time' in values) {\n        flatCoordinates.push(/** @type {number} */ values['time']);\n        delete values['time'];\n        layoutOptions.hasM = true;\n    } else flatCoordinates.push(0);\n    return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */ function $c7152e7ae8968a6e$var$applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n    /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */ let layout = 'XY';\n    let stride = 2;\n    if (layoutOptions.hasZ && layoutOptions.hasM) {\n        layout = 'XYZM';\n        stride = 4;\n    } else if (layoutOptions.hasZ) {\n        layout = 'XYZ';\n        stride = 3;\n    } else if (layoutOptions.hasM) {\n        layout = 'XYM';\n        stride = 3;\n    }\n    if (stride !== 4) {\n        for(let i = 0, ii = flatCoordinates.length / 4; i < ii; i++){\n            flatCoordinates[i * stride] = flatCoordinates[i * 4];\n            flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n            if (layoutOptions.hasZ) flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n            if (layoutOptions.hasM) flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n        }\n        flatCoordinates.length = flatCoordinates.length / 4 * stride;\n        if (ends) for(let i = 0, ii = ends.length; i < ii; i++)ends[i] = ends[i] / 4 * stride;\n    }\n    return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXAuthor | undefined} Person object.\n */ function $c7152e7ae8968a6e$var$readAuthor(node, objectStack) {\n    const values = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $c7152e7ae8968a6e$var$AUTHOR_PARSERS, node, objectStack);\n    if (values) return values;\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXCopyright | undefined} Person object.\n */ function $c7152e7ae8968a6e$var$readCopyright(node, objectStack) {\n    const values = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $c7152e7ae8968a6e$var$COPYRIGHT_PARSERS, node, objectStack);\n    if (values) {\n        const author = node.getAttribute('author');\n        if (author !== null) values['author'] = author;\n        return values;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$parseBounds(node, objectStack) {\n    const values = /** @type {Object} */ objectStack[objectStack.length - 1];\n    const minlat = node.getAttribute('minlat');\n    const minlon = node.getAttribute('minlon');\n    const maxlat = node.getAttribute('maxlat');\n    const maxlon = node.getAttribute('maxlon');\n    if (minlon !== null && minlat !== null && maxlon !== null && maxlat !== null) values['bounds'] = [\n        [\n            parseFloat(minlon),\n            parseFloat(minlat)\n        ],\n        [\n            parseFloat(maxlon),\n            parseFloat(maxlat)\n        ]\n    ];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$parseEmail(node, objectStack) {\n    const values = /** @type {Object} */ objectStack[objectStack.length - 1];\n    const id = node.getAttribute('id');\n    const domain = node.getAttribute('domain');\n    if (id !== null && domain !== null) values['email'] = `${id}@${domain}`;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$parseLink(node, objectStack) {\n    const values = /** @type {Object} */ objectStack[objectStack.length - 1];\n    const href = node.getAttribute('href');\n    if (href !== null) values['link'] = href;\n    (0, $a4f89edd2ef65182$export$dc8ce45ce1679f4f)($c7152e7ae8968a6e$var$LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$parseExtensions(node, objectStack) {\n    const values = /** @type {Object} */ objectStack[objectStack.length - 1];\n    values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$parseRtePt(node, objectStack) {\n    const values = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $c7152e7ae8968a6e$var$RTEPT_PARSERS, node, objectStack);\n    if (values) {\n        const rteValues = /** @type {!Object} */ objectStack[objectStack.length - 1];\n        const flatCoordinates = /** @type {Array<number>} */ rteValues['flatCoordinates'];\n        const layoutOptions = /** @type {LayoutOptions} */ rteValues['layoutOptions'];\n        $c7152e7ae8968a6e$var$appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$parseTrkPt(node, objectStack) {\n    const values = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $c7152e7ae8968a6e$var$TRKPT_PARSERS, node, objectStack);\n    if (values) {\n        const trkValues = /** @type {!Object} */ objectStack[objectStack.length - 1];\n        const flatCoordinates = /** @type {Array<number>} */ trkValues['flatCoordinates'];\n        const layoutOptions = /** @type {LayoutOptions} */ trkValues['layoutOptions'];\n        $c7152e7ae8968a6e$var$appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$parseTrkSeg(node, objectStack) {\n    const values = /** @type {Object} */ objectStack[objectStack.length - 1];\n    (0, $a4f89edd2ef65182$export$dc8ce45ce1679f4f)($c7152e7ae8968a6e$var$TRKSEG_PARSERS, node, objectStack);\n    const flatCoordinates = /** @type {Array<number>} */ values['flatCoordinates'];\n    const ends = /** @type {Array<number>} */ values['ends'];\n    ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */ function $c7152e7ae8968a6e$var$readRte(node, objectStack) {\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ objectStack[0];\n    const values = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({\n        'flatCoordinates': [],\n        'layoutOptions': {}\n    }, $c7152e7ae8968a6e$var$RTE_PARSERS, node, objectStack);\n    if (!values) return undefined;\n    const flatCoordinates = /** @type {Array<number>} */ values['flatCoordinates'];\n    delete values['flatCoordinates'];\n    const layoutOptions = /** @type {LayoutOptions} */ values['layoutOptions'];\n    delete values['layoutOptions'];\n    const layout = $c7152e7ae8968a6e$var$applyLayoutOptions(layoutOptions, flatCoordinates);\n    const geometry = new (0, $3xcD3.default)(flatCoordinates, layout);\n    (0, $kgouC.transformGeometryWithOptions)(geometry, false, options);\n    const feature = new (0, $dIG9p.default)(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */ function $c7152e7ae8968a6e$var$readTrk(node, objectStack) {\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ objectStack[0];\n    const values = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({\n        'flatCoordinates': [],\n        'ends': [],\n        'layoutOptions': {}\n    }, $c7152e7ae8968a6e$var$TRK_PARSERS, node, objectStack);\n    if (!values) return undefined;\n    const flatCoordinates = /** @type {Array<number>} */ values['flatCoordinates'];\n    delete values['flatCoordinates'];\n    const ends = /** @type {Array<number>} */ values['ends'];\n    delete values['ends'];\n    const layoutOptions = /** @type {LayoutOptions} */ values['layoutOptions'];\n    delete values['layoutOptions'];\n    const layout = $c7152e7ae8968a6e$var$applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n    const geometry = new (0, $fw94T.default)(flatCoordinates, layout, ends);\n    (0, $kgouC.transformGeometryWithOptions)(geometry, false, options);\n    const feature = new (0, $dIG9p.default)(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */ function $c7152e7ae8968a6e$var$readWpt(node, objectStack) {\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ objectStack[0];\n    const values = (0, $a4f89edd2ef65182$export$5c934df85741dbd1)({}, $c7152e7ae8968a6e$var$WPT_PARSERS, node, objectStack);\n    if (!values) return undefined;\n    const layoutOptions = /** @type {LayoutOptions} */ {};\n    const coordinates = $c7152e7ae8968a6e$var$appendCoordinate([], layoutOptions, node, values);\n    const layout = $c7152e7ae8968a6e$var$applyLayoutOptions(layoutOptions, coordinates);\n    const geometry = new (0, $9vPkX.default)(coordinates, layout);\n    (0, $kgouC.transformGeometryWithOptions)(geometry, false, options);\n    const feature = new (0, $dIG9p.default)(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */ function $c7152e7ae8968a6e$var$writeLink(node, value, objectStack) {\n    node.setAttribute('href', value);\n    const context = objectStack[objectStack.length - 1];\n    const properties = context['properties'];\n    const link = [\n        properties['linkText'],\n        properties['linkType']\n    ];\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(/** @type {import(\"../xml.js\").NodeStackItem} */ {\n        node: node\n    }, $c7152e7ae8968a6e$var$LINK_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), link, objectStack, $c7152e7ae8968a6e$var$LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$writeWptType(node, coordinate, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const namespaceURI = parentNode.namespaceURI;\n    const properties = context['properties'];\n    //FIXME Projection handling\n    node.setAttributeNS(null, 'lat', String(coordinate[1]));\n    node.setAttributeNS(null, 'lon', String(coordinate[0]));\n    const geometryLayout = context['geometryLayout'];\n    switch(geometryLayout){\n        case 'XYZM':\n            if (coordinate[3] !== 0) properties['time'] = coordinate[3];\n        // fall through\n        case 'XYZ':\n            if (coordinate[2] !== 0) properties['ele'] = coordinate[2];\n            break;\n        case 'XYM':\n            if (coordinate[2] !== 0) properties['time'] = coordinate[2];\n            break;\n        default:\n    }\n    const orderedKeys = node.nodeName == 'rtept' ? $c7152e7ae8968a6e$var$RTEPT_TYPE_SEQUENCE[namespaceURI] : $c7152e7ae8968a6e$var$WPT_TYPE_SEQUENCE[namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(/** @type {import(\"../xml.js\").NodeStackItem} */ {\n        node: node,\n        'properties': properties\n    }, $c7152e7ae8968a6e$var$WPT_TYPE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$writeRte(node, feature, objectStack) {\n    const options = /** @type {import(\"./Feature.js\").WriteOptions} */ objectStack[0];\n    const properties = feature.getProperties();\n    const context = {\n        node: node\n    };\n    context['properties'] = properties;\n    const geometry = feature.getGeometry();\n    if (geometry.getType() == 'LineString') {\n        const lineString = /** @type {LineString} */ (0, $kgouC.transformGeometryWithOptions)(geometry, true, options);\n        context['geometryLayout'] = lineString.getLayout();\n        properties['rtept'] = lineString.getCoordinates();\n    }\n    const parentNode = objectStack[objectStack.length - 1].node;\n    const orderedKeys = $c7152e7ae8968a6e$var$RTE_SEQUENCE[parentNode.namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $c7152e7ae8968a6e$var$RTE_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$writeTrk(node, feature, objectStack) {\n    const options = /** @type {import(\"./Feature.js\").WriteOptions} */ objectStack[0];\n    const properties = feature.getProperties();\n    /** @type {import(\"../xml.js\").NodeStackItem} */ const context = {\n        node: node\n    };\n    context['properties'] = properties;\n    const geometry = feature.getGeometry();\n    if (geometry.getType() == 'MultiLineString') {\n        const multiLineString = /** @type {MultiLineString} */ (0, $kgouC.transformGeometryWithOptions)(geometry, true, options);\n        properties['trkseg'] = multiLineString.getLineStrings();\n    }\n    const parentNode = objectStack[objectStack.length - 1].node;\n    const orderedKeys = $c7152e7ae8968a6e$var$TRK_SEQUENCE[parentNode.namespaceURI];\n    const values = (0, $a4f89edd2ef65182$export$939885a13683f4dc)(properties, orderedKeys);\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $c7152e7ae8968a6e$var$TRK_SERIALIZERS, (0, $a4f89edd2ef65182$export$d91b08b611cef144), values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$writeTrkSeg(node, lineString, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */ const context = {\n        node: node\n    };\n    context['geometryLayout'] = lineString.getLayout();\n    context['properties'] = {};\n    (0, $a4f89edd2ef65182$export$a79a01f4edad8da8)(context, $c7152e7ae8968a6e$var$TRKSEG_SERIALIZERS, $c7152e7ae8968a6e$var$TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */ function $c7152e7ae8968a6e$var$writeWpt(node, feature, objectStack) {\n    const options = /** @type {import(\"./Feature.js\").WriteOptions} */ objectStack[0];\n    const context = objectStack[objectStack.length - 1];\n    context['properties'] = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry.getType() == 'Point') {\n        const point = /** @type {Point} */ (0, $kgouC.transformGeometryWithOptions)(geometry, true, options);\n        context['geometryLayout'] = point.getLayout();\n        $c7152e7ae8968a6e$var$writeWptType(node, point.getCoordinates(), objectStack);\n    }\n}\nvar $c7152e7ae8968a6e$export$2e2bcd8739ae039 = $c7152e7ae8968a6e$var$GPX;\n\n\n\nvar $5ydre = parcelRequire(\"5ydre\");\n/**\n * @module ol/interaction/DragAndDrop\n */ // FIXME should handle all geo-referenced data, not just vector data\n\nvar $f18Q2 = parcelRequire(\"f18Q2\");\n\nvar $3xzSb = parcelRequire(\"3xzSb\");\n\nvar $ilM9F = parcelRequire(\"ilM9F\");\n\nvar $6wUzV = parcelRequire(\"6wUzV\");\n\nvar $dpRHA = parcelRequire(\"dpRHA\");\n\nvar $4U60I = parcelRequire(\"4U60I\");\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */ /**\n * @enum {string}\n */ const $9b46bac5c293ebb3$var$DragAndDropEventType = {\n    /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */ ADD_FEATURES: 'addfeatures'\n};\nclass $9b46bac5c293ebb3$export$5ac429618e6d21e6 extends (0, $f18Q2.default) {\n    /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */ constructor(type, file, features, projection){\n        super(type);\n        /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */ this.features = features;\n        /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */ this.file = file;\n        /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */ this.projection = projection;\n    }\n}\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */ /**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */ class $9b46bac5c293ebb3$var$DragAndDrop extends (0, $4U60I.default) {\n    /**\n   * @param {Options} [options] Options.\n   */ constructor(options){\n        options = options ? options : {};\n        super({\n            handleEvent: (0, $6wUzV.TRUE)\n        });\n        /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */ this.on;\n        /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */ this.once;\n        /***\n     * @type {DragAndDropOnSignature<void>}\n     */ this.un;\n        /**\n     * @private\n     * @type {boolean}\n     */ this.readAsBuffer_ = false;\n        /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */ this.formats_ = [];\n        const formatConstructors = options.formatConstructors ? options.formatConstructors : [];\n        for(let i = 0, ii = formatConstructors.length; i < ii; ++i){\n            let format = formatConstructors[i];\n            if (typeof format === 'function') format = new format();\n            this.formats_.push(format);\n            this.readAsBuffer_ = this.readAsBuffer_ || format.getType() === 'arraybuffer';\n        }\n        /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */ this.projection_ = options.projection ? (0, $dpRHA.get)(options.projection) : null;\n        /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */ this.dropListenKeys_ = null;\n        /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */ this.source_ = options.source || null;\n        /**\n     * @private\n     * @type {HTMLElement|null}\n     */ this.target = options.target ? options.target : null;\n    }\n    /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */ handleResult_(file, event) {\n        const result = event.target.result;\n        const map = this.getMap();\n        let projection = this.projection_;\n        if (!projection) {\n            projection = (0, $dpRHA.getUserProjection)();\n            if (!projection) {\n                const view = map.getView();\n                projection = view.getProjection();\n            }\n        }\n        let text;\n        const formats = this.formats_;\n        for(let i = 0, ii = formats.length; i < ii; ++i){\n            const format = formats[i];\n            let input = result;\n            if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n                if (text === undefined) text = new TextDecoder().decode(result);\n                input = text;\n            }\n            const features = this.tryReadFeatures_(format, input, {\n                featureProjection: projection\n            });\n            if (features && features.length > 0) {\n                if (this.source_) {\n                    this.source_.clear();\n                    this.source_.addFeatures(features);\n                }\n                this.dispatchEvent(new $9b46bac5c293ebb3$export$5ac429618e6d21e6($9b46bac5c293ebb3$var$DragAndDropEventType.ADD_FEATURES, file, features, projection));\n                break;\n            }\n        }\n    }\n    /**\n   * @private\n   */ registerListeners_() {\n        const map = this.getMap();\n        if (map) {\n            const dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                (0, $ilM9F.listen)(dropArea, (0, $3xzSb.default).DROP, this.handleDrop, this),\n                (0, $ilM9F.listen)(dropArea, (0, $3xzSb.default).DRAGENTER, this.handleStop, this),\n                (0, $ilM9F.listen)(dropArea, (0, $3xzSb.default).DRAGOVER, this.handleStop, this),\n                (0, $ilM9F.listen)(dropArea, (0, $3xzSb.default).DROP, this.handleStop, this)\n            ];\n        }\n    }\n    /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */ setActive(active) {\n        if (!this.getActive() && active) this.registerListeners_();\n        if (this.getActive() && !active) this.unregisterListeners_();\n        super.setActive(active);\n    }\n    /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */ setMap(map) {\n        this.unregisterListeners_();\n        super.setMap(map);\n        if (this.getActive()) this.registerListeners_();\n    }\n    /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */ tryReadFeatures_(format, text, options) {\n        try {\n            return /** @type {Array<import(\"../Feature.js\").default>} */ format.readFeatures(text, options);\n        } catch  {\n            return null;\n        }\n    }\n    /**\n   * @private\n   */ unregisterListeners_() {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach((0, $ilM9F.unlistenByKey));\n            this.dropListenKeys_ = null;\n        }\n    }\n    /**\n   * @param {DragEvent} event Event.\n   */ handleDrop(event) {\n        const files = event.dataTransfer.files;\n        for(let i = 0, ii = files.length; i < ii; ++i){\n            const file = files.item(i);\n            const reader = new FileReader();\n            reader.addEventListener((0, $3xzSb.default).LOAD, this.handleResult_.bind(this, file));\n            if (this.readAsBuffer_) reader.readAsArrayBuffer(file);\n            else reader.readAsText(file);\n        }\n    }\n    /**\n   * @param {DragEvent} event Event.\n   */ handleStop(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n    }\n}\nvar $9b46bac5c293ebb3$export$2e2bcd8739ae039 = $9b46bac5c293ebb3$var$DragAndDrop;\n\n\n\nvar $le5ya = parcelRequire(\"le5ya\");\n\nvar $bdrRp = parcelRequire(\"bdrRp\");\n\nvar $dpRHA = parcelRequire(\"dpRHA\");\n\nvar $5gNCk = parcelRequire(\"5gNCk\");\nconst $927f48c83533ce78$var$iconFeature = new (0, $dIG9p.default)({\n    geometry: new (0, $9vPkX.default)([\n        700000,\n        200000,\n        100000\n    ])\n});\nconst $927f48c83533ce78$var$textFeature = new (0, $dIG9p.default)({\n    geometry: new (0, $9vPkX.default)([\n        1000000,\n        3000000,\n        500000\n    ])\n});\nconst $927f48c83533ce78$var$cervinFeature = new (0, $dIG9p.default)({\n    geometry: new (0, $9vPkX.default)([\n        852541,\n        5776649\n    ])\n});\n$927f48c83533ce78$var$cervinFeature.getGeometry().set('altitudeMode', 'clampToGround');\nconst $927f48c83533ce78$var$modelFeatures = [\n    -1,\n    -0.5,\n    0,\n    0.5,\n    1,\n    1.5\n].map((factor)=>new (0, $dIG9p.default)({\n        geometry: new (0, $9vPkX.default)([\n            852641,\n            5776749,\n            4500\n        ]),\n        'rotation': factor * Math.PI\n    }));\nconst $927f48c83533ce78$var$iconStyle = new (0, $c3RIb.default)({\n    image: new (0, $bmHVE.default)(/** @type {olx.style.IconOptions} */ {\n        anchor: [\n            0.5,\n            46\n        ],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'pixels',\n        opacity: 0.75,\n        src: 'data/icon.png',\n        crossOrigin: 'anonymous'\n    }),\n    text: new (0, $cJntk.default)({\n        text: 'Some text',\n        textAlign: 'center',\n        textBaseline: 'middle',\n        stroke: new (0, $lrKvI.default)({\n            color: 'magenta',\n            width: 3\n        }),\n        fill: new (0, $inIMS.default)({\n            color: 'rgba(0, 0, 155, 0.3)'\n        })\n    })\n});\nconst $927f48c83533ce78$var$textStyle = [\n    new (0, $c3RIb.default)({\n        text: new (0, $cJntk.default)({\n            text: 'Only text',\n            textAlign: 'center',\n            textBaseline: 'middle',\n            stroke: new (0, $lrKvI.default)({\n                color: 'red',\n                width: 3\n            }),\n            fill: new (0, $inIMS.default)({\n                color: 'rgba(0, 0, 155, 0.3)'\n            })\n        })\n    }),\n    new (0, $c3RIb.default)({\n        geometry: new (0, $l7VLp.default)([\n            1000000,\n            3000000,\n            10000\n        ], 2e6),\n        stroke: new (0, $lrKvI.default)({\n            color: 'blue',\n            width: 2\n        }),\n        fill: new (0, $inIMS.default)({\n            color: 'rgba(0, 0, 255, 0.2)'\n        })\n    })\n];\n$927f48c83533ce78$var$iconFeature.setStyle($927f48c83533ce78$var$iconStyle);\n$927f48c83533ce78$var$textFeature.setStyle($927f48c83533ce78$var$textStyle);\n$927f48c83533ce78$var$cervinFeature.setStyle($927f48c83533ce78$var$iconStyle);\nlet $927f48c83533ce78$var$iCase = 0;\n$927f48c83533ce78$var$modelFeatures.forEach((feature)=>{\n    ++$927f48c83533ce78$var$iCase;\n    const modelStyle = new (0, $c3RIb.default)({\n        image: new (0, $bmHVE.default)(/** @type {olx.style.IconOptions} */ {\n            anchor: [\n                0.5,\n                46\n            ],\n            anchorXUnits: 'fraction',\n            anchorYUnits: 'pixels',\n            opacity: 0.75,\n            src: 'data/icon.png',\n            crossOrigin: 'anonymous'\n        })\n    });\n    const olcsModelFunction = ()=>{\n        const coordinates = feature.getGeometry().getCoordinates();\n        const center = (0, $dpRHA.transform)(coordinates, 'EPSG:3857', 'EPSG:4326');\n        const rotation = /** @type {number} */ feature.get('rotation');\n        return {\n            cesiumOptions: {\n                url: './data/Box.gltf',\n                modelMatrix: (0, $cc3xD.createMatrixAtCoordinates)(center, rotation),\n                // eslint-disable-next-line no-use-before-define\n                heightReference: $927f48c83533ce78$var$Cesium.HeightReference.CLAMP_TO_GROUND,\n                minimumPixelSize: 64\n            }\n        };\n    };\n    let host = feature;\n    switch($927f48c83533ce78$var$iCase % 3){\n        case 0:\n            host = feature.getGeometry();\n            break;\n        case 1:\n            modelStyle.setGeometry(feature.getGeometry().clone());\n            host = modelStyle.getGeometry();\n            break;\n        default:\n            host = feature;\n    }\n    host.set('olcs_model', olcsModelFunction);\n    feature.setStyle(modelStyle);\n});\nconst $927f48c83533ce78$var$image = new (0, $wnhPR.default)({\n    radius: 5,\n    fill: null,\n    stroke: new (0, $lrKvI.default)({\n        color: 'red',\n        width: 1\n    })\n});\nconst $927f48c83533ce78$var$styles = {\n    'Point': [\n        new (0, $c3RIb.default)({\n            image: $927f48c83533ce78$var$image\n        })\n    ],\n    'LineString': [\n        new (0, $c3RIb.default)({\n            stroke: new (0, $lrKvI.default)({\n                color: 'green',\n                lineDash: [\n                    12\n                ],\n                width: 10\n            })\n        })\n    ],\n    'MultiLineString': [\n        new (0, $c3RIb.default)({\n            stroke: new (0, $lrKvI.default)({\n                color: 'green',\n                width: 10\n            })\n        })\n    ],\n    'MultiPoint': [\n        new (0, $c3RIb.default)({\n            image: $927f48c83533ce78$var$image,\n            text: new (0, $cJntk.default)({\n                text: 'MP',\n                stroke: new (0, $lrKvI.default)({\n                    color: 'purple'\n                })\n            })\n        })\n    ],\n    'MultiPolygon': [\n        new (0, $c3RIb.default)({\n            stroke: new (0, $lrKvI.default)({\n                color: 'yellow',\n                width: 1\n            }),\n            fill: new (0, $inIMS.default)({\n                color: 'rgba(255, 255, 0, 0.1)'\n            })\n        })\n    ],\n    'Polygon': [\n        new (0, $c3RIb.default)({\n            stroke: new (0, $lrKvI.default)({\n                color: 'blue',\n                lineDash: [\n                    4\n                ],\n                width: 3\n            }),\n            fill: new (0, $inIMS.default)({\n                color: 'rgba(0, 0, 255, 0.1)'\n            })\n        })\n    ],\n    'GeometryCollection': [\n        new (0, $c3RIb.default)({\n            stroke: new (0, $lrKvI.default)({\n                color: 'magenta',\n                width: 2\n            }),\n            fill: new (0, $inIMS.default)({\n                color: 'magenta'\n            }),\n            image: new (0, $wnhPR.default)({\n                radius: 10,\n                fill: null,\n                stroke: new (0, $lrKvI.default)({\n                    color: 'magenta'\n                })\n            })\n        })\n    ],\n    'Circle': [\n        new (0, $c3RIb.default)({\n            stroke: new (0, $lrKvI.default)({\n                color: 'red',\n                width: 2\n            }),\n            fill: new (0, $inIMS.default)({\n                color: 'rgba(255,0,0,0.2)'\n            })\n        })\n    ]\n};\nconst $927f48c83533ce78$var$styleFunction = function(feature, resolution) {\n    const geo = feature.getGeometry();\n    // always assign a style to prevent feature skipping\n    return geo ? $927f48c83533ce78$var$styles[geo.getType()] : $927f48c83533ce78$var$styles['Point'];\n};\nconst $927f48c83533ce78$var$vectorSource = new (0, $bnthu.default)({\n    format: new (0, $l7vEP.default)(),\n    url: 'data/geojson/vector_data.geojson',\n    crossOrigin: 'anonymous'\n});\nconst $927f48c83533ce78$var$theCircle = new (0, $dIG9p.default)(new (0, $l7VLp.default)([\n    5e6,\n    7e6,\n    5e5\n], 1e6));\n// Add a Cesium rectangle, via setting the property olcs.polygon_kind\nconst $927f48c83533ce78$var$cartographicRectangleStyle = new (0, $c3RIb.default)({\n    fill: new (0, $inIMS.default)({\n        color: 'rgba(255, 69, 0, 0.7)'\n    }),\n    stroke: new (0, $lrKvI.default)({\n        color: 'rgba(255, 69, 0, 0.9)',\n        width: 1\n    })\n});\nconst $927f48c83533ce78$var$cartographicRectangleGeometry = new (0, $5ydre.default)([\n    [\n        [\n            -5000000,\n            11e6\n        ],\n        [\n            4e6,\n            11e6\n        ],\n        [\n            4e6,\n            10.5e6\n        ],\n        [\n            -5000000,\n            10.5e6\n        ],\n        [\n            -5000000,\n            11e6\n        ]\n    ]\n]);\n$927f48c83533ce78$var$cartographicRectangleGeometry.set('olcs_polygon_kind', 'rectangle');\nconst $927f48c83533ce78$var$cartographicRectangle = new (0, $dIG9p.default)({\n    geometry: $927f48c83533ce78$var$cartographicRectangleGeometry\n});\n$927f48c83533ce78$var$cartographicRectangle.setStyle($927f48c83533ce78$var$cartographicRectangleStyle);\n// Add two Cesium rectangles with height and the property olcs.polygon_kind\nconst $927f48c83533ce78$var$cartographicRectangleGeometry2 = new (0, $le5ya.default)([\n    [\n        [\n            [\n                -5000000,\n                12e6,\n                0\n            ],\n            [\n                4e6,\n                12e6,\n                0\n            ],\n            [\n                4e6,\n                11.5e6,\n                0\n            ],\n            [\n                -5000000,\n                11.5e6,\n                0\n            ],\n            [\n                -5000000,\n                12e6,\n                0\n            ]\n        ]\n    ],\n    [\n        [\n            [\n                -5000000,\n                11.5e6,\n                1e6\n            ],\n            [\n                4e6,\n                11.5e6,\n                1e6\n            ],\n            [\n                4e6,\n                11e6,\n                1e6\n            ],\n            [\n                -5000000,\n                11e6,\n                1e6\n            ],\n            [\n                -5000000,\n                11.5e6,\n                1e6\n            ]\n        ]\n    ]\n]);\n$927f48c83533ce78$var$cartographicRectangleGeometry2.set('olcs_polygon_kind', 'rectangle');\nconst $927f48c83533ce78$var$cartographicRectangle2 = new (0, $dIG9p.default)({\n    geometry: $927f48c83533ce78$var$cartographicRectangleGeometry2\n});\n$927f48c83533ce78$var$cartographicRectangle2.setStyle($927f48c83533ce78$var$cartographicRectangleStyle);\nconst $927f48c83533ce78$var$vectorLayer = new (0, $bdrRp.default)({\n    style: $927f48c83533ce78$var$styleFunction,\n    source: $927f48c83533ce78$var$vectorSource\n});\nconst $927f48c83533ce78$var$vectorSource2 = new (0, $bnthu.default)({\n    features: [\n        $927f48c83533ce78$var$iconFeature,\n        $927f48c83533ce78$var$textFeature,\n        $927f48c83533ce78$var$cervinFeature,\n        ...$927f48c83533ce78$var$modelFeatures,\n        $927f48c83533ce78$var$cartographicRectangle,\n        $927f48c83533ce78$var$cartographicRectangle2\n    ]\n});\nconst $927f48c83533ce78$var$vectorLayer2 = new (0, $bdrRp.default)({\n    source: $927f48c83533ce78$var$vectorSource2\n});\nconst $927f48c83533ce78$var$dragAndDropInteraction = new (0, $9b46bac5c293ebb3$export$2e2bcd8739ae039)({\n    formatConstructors: [\n        (0, $c7152e7ae8968a6e$export$2e2bcd8739ae039),\n        (0, $l7vEP.default),\n        (0, $a3eff48c5fdb69ef$export$2e2bcd8739ae039),\n        (0, $1140dfbeee585f32$export$2e2bcd8739ae039),\n        (0, $10d5bd550e039cbe$export$2e2bcd8739ae039)\n    ]\n});\nconst $927f48c83533ce78$var$map = new (0, $5DwXE.default)({\n    interactions: (0, $jzydl.defaults)().extend([\n        $927f48c83533ce78$var$dragAndDropInteraction\n    ]),\n    layers: [\n        new (0, $4mWlF.default)({\n            source: new (0, $9jDAx.default)()\n        }),\n        $927f48c83533ce78$var$vectorLayer,\n        $927f48c83533ce78$var$vectorLayer2\n    ],\n    target: 'map2d',\n    controls: (0, $f3WAG.defaults)({\n        attributionOptions: {\n            collapsible: false\n        }\n    }),\n    view: new (0, $9DiKA.default)({\n        center: [\n            0,\n            0\n        ],\n        zoom: 2\n    })\n});\n$927f48c83533ce78$var$dragAndDropInteraction.on('addfeatures', (event)=>{\n    const vectorSource = new (0, $bnthu.default)({\n        features: event.features,\n        projection: event.projection\n    });\n    $927f48c83533ce78$var$map.getLayers().push(new (0, $bdrRp.default)({\n        source: vectorSource,\n        style: $927f48c83533ce78$var$styleFunction\n    }));\n    const view = $927f48c83533ce78$var$map.getView();\n    view.fitExtent(vectorSource.getExtent(), /** @type {ol.Size} */ $927f48c83533ce78$var$map.getSize());\n});\nconst $927f48c83533ce78$var$Cesium = window.Cesium;\nconst $927f48c83533ce78$var$ol3d = new (0, $cc3xD.default)({\n    map: $927f48c83533ce78$var$map,\n    target: 'mapCesium'\n});\nconst $927f48c83533ce78$var$scene = $927f48c83533ce78$var$ol3d.getCesiumScene();\n$927f48c83533ce78$var$ol3d.setEnabled(true);\nconst $927f48c83533ce78$var$csLabels = new $927f48c83533ce78$var$Cesium.LabelCollection();\n$927f48c83533ce78$var$csLabels.add({\n    position: $927f48c83533ce78$var$Cesium.Cartesian3.fromRadians(20, 20, 0),\n    text: 'Pre-existing primitive'\n});\n$927f48c83533ce78$var$scene.primitives.add($927f48c83533ce78$var$csLabels);\n// Adding a feature after the layer has been synchronized.\n$927f48c83533ce78$var$vectorSource.addFeature($927f48c83533ce78$var$theCircle);\nlet $927f48c83533ce78$var$hasTheVectorLayer = true;\nwindow['addOrRemoveOneVectorLayer'] = function() {\n    if ($927f48c83533ce78$var$hasTheVectorLayer) $927f48c83533ce78$var$map.getLayers().remove($927f48c83533ce78$var$vectorLayer);\n    else $927f48c83533ce78$var$map.getLayers().insertAt(1, $927f48c83533ce78$var$vectorLayer);\n    $927f48c83533ce78$var$hasTheVectorLayer = !$927f48c83533ce78$var$hasTheVectorLayer;\n};\nwindow['addOrRemoveOneFeature'] = function() {\n    const found = $927f48c83533ce78$var$vectorSource2.getFeatures().indexOf($927f48c83533ce78$var$iconFeature);\n    if (found === -1) $927f48c83533ce78$var$vectorSource2.addFeature($927f48c83533ce78$var$iconFeature);\n    else $927f48c83533ce78$var$vectorSource2.removeFeature($927f48c83533ce78$var$iconFeature);\n};\nlet $927f48c83533ce78$var$oldStyle = new (0, $c3RIb.default)({\n    stroke: new (0, $lrKvI.default)({\n        color: 'blue',\n        width: 2\n    }),\n    fill: new (0, $inIMS.default)({\n        color: 'green'\n    })\n});\nwindow['toggleStyle'] = function() {\n    const swap = $927f48c83533ce78$var$theCircle.getStyle();\n    $927f48c83533ce78$var$theCircle.setStyle($927f48c83533ce78$var$oldStyle);\n    $927f48c83533ce78$var$oldStyle = swap;\n};\nwindow['toggleClampToGround'] = function() {\n    let altitudeMode;\n    if (!$927f48c83533ce78$var$vectorLayer.get('altitudeMode')) altitudeMode = 'clampToGround';\n    $927f48c83533ce78$var$vectorLayer.set('altitudeMode', altitudeMode);\n    $927f48c83533ce78$var$vectorLayer2.set('altitudeMode', altitudeMode);\n    $927f48c83533ce78$var$map.removeLayer($927f48c83533ce78$var$vectorLayer);\n    $927f48c83533ce78$var$map.removeLayer($927f48c83533ce78$var$vectorLayer2);\n    $927f48c83533ce78$var$map.addLayer($927f48c83533ce78$var$vectorLayer);\n    $927f48c83533ce78$var$map.addLayer($927f48c83533ce78$var$vectorLayer2);\n};\nwindow['setTargetFrameRate'] = function() {\n    let fps;\n    const fpsEl = document.querySelector('#framerate');\n    if (fpsEl) {\n        fps = Number(fpsEl.value);\n        $927f48c83533ce78$var$ol3d.setTargetFrameRate(fps);\n    }\n};\nwindow['ol3d'] = $927f48c83533ce78$var$ol3d;\nwindow['scene'] = $927f48c83533ce78$var$scene;\ndocument.getElementById('enable').addEventListener('click', ()=>$927f48c83533ce78$var$ol3d.setEnabled(!$927f48c83533ce78$var$ol3d.getEnabled()));\n$927f48c83533ce78$var$ol3d.enableAutoRenderLoop();\n(0, $5gNCk.initCodeSandbox)('rawjs/vectors.js', 'data/geojson/vector_data.geojson', 'data/Box.gltf', 'data/icon.png');\n\n\n//# sourceMappingURL=vectors.28179c39.js.map\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","import OLCesium, {createMatrixAtCoordinates} from 'olcs';\nimport olView from 'ol/View.js';\nimport {defaults as olControlDefaults} from 'ol/control.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport {defaults as interactionDefaults} from 'ol/interaction.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olMap from 'ol/Map.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olFormatTopoJSON from 'ol/format/TopoJSON.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olFormatIGC from 'ol/format/IGC.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDragAndDrop from 'ol/interaction/DragAndDrop.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport {transform} from 'ol/proj.js';\n\n\nconst iconFeature = new olFeature({\n  geometry: new olGeomPoint([700000, 200000, 100000])\n});\n\nconst textFeature = new olFeature({\n  geometry: new olGeomPoint([1000000, 3000000, 500000])\n});\n\nconst cervinFeature = new olFeature({\n  geometry: new olGeomPoint([852541, 5776649])\n});\ncervinFeature.getGeometry().set('altitudeMode', 'clampToGround');\n\nconst modelFeatures = [-1, -1 / 2, 0, 1 / 2, 1, 3 / 2].map(\n    factor => new olFeature({\n      geometry: new olGeomPoint([852641, 5776749, 4500]),\n      'rotation': factor * Math.PI\n    })\n);\n\nconst iconStyle = new olStyleStyle({\n  image: new olStyleIcon(/** @type {olx.style.IconOptions} */ ({\n    anchor: [0.5, 46],\n    anchorXUnits: 'fraction',\n    anchorYUnits: 'pixels',\n    opacity: 0.75,\n    src: 'data/icon.png',\n    crossOrigin: 'anonymous'\n  })),\n  text: new olStyleText({\n    text: 'Some text',\n    textAlign: 'center',\n    textBaseline: 'middle',\n    stroke: new olStyleStroke({\n      color: 'magenta',\n      width: 3\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(0, 0, 155, 0.3)'\n    })\n  })\n});\n\nconst textStyle = [new olStyleStyle({\n  text: new olStyleText({\n    text: 'Only text',\n    textAlign: 'center',\n    textBaseline: 'middle',\n    stroke: new olStyleStroke({\n      color: 'red',\n      width: 3\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(0, 0, 155, 0.3)'\n    })\n  })\n}), new olStyleStyle({\n  geometry: new olGeomCircle([1000000, 3000000, 10000], 2e6),\n  stroke: new olStyleStroke({\n    color: 'blue',\n    width: 2\n  }),\n  fill: new olStyleFill({\n    color: 'rgba(0, 0, 255, 0.2)'\n  })\n})];\n\niconFeature.setStyle(iconStyle);\n\ntextFeature.setStyle(textStyle);\n\ncervinFeature.setStyle(iconStyle);\nlet iCase = 0;\nmodelFeatures.forEach((feature) => {\n  ++iCase;\n  const modelStyle = new olStyleStyle({\n    image: new olStyleIcon(/** @type {olx.style.IconOptions} */ ({\n      anchor: [0.5, 46],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'pixels',\n      opacity: 0.75,\n      src: 'data/icon.png',\n      crossOrigin: 'anonymous'\n    }))\n  });\n  const olcsModelFunction = () => {\n    const coordinates = feature.getGeometry().getCoordinates();\n    const center = transform(coordinates, 'EPSG:3857', 'EPSG:4326');\n    const rotation = /** @type {number} */ (feature.get('rotation'));\n    return {\n      cesiumOptions: {\n        url: './data/Box.gltf',\n        modelMatrix: createMatrixAtCoordinates(center, rotation),\n        // eslint-disable-next-line no-use-before-define\n        heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n        minimumPixelSize: 64\n      }\n    };\n  };\n  let host = feature;\n  switch (iCase % 3) {\n    case 0:\n      host = feature.getGeometry();\n      break;\n    case 1:\n      modelStyle.setGeometry(feature.getGeometry().clone());\n      host = modelStyle.getGeometry();\n      break;\n    default:\n      host = feature;\n  }\n  host.set('olcs_model', olcsModelFunction);\n  feature.setStyle(modelStyle);\n});\n\n\nconst image = new olStyleCircle({\n  radius: 5,\n  fill: null,\n  stroke: new olStyleStroke({color: 'red', width: 1})\n});\n\nconst styles = {\n  'Point': [new olStyleStyle({\n    image\n  })],\n  'LineString': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'green',\n      lineDash: [12],\n      width: 10\n    })\n  })],\n  'MultiLineString': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'green',\n      width: 10\n    })\n  })],\n  'MultiPoint': [new olStyleStyle({\n    image,\n    text: new olStyleText({\n      text: 'MP',\n      stroke: new olStyleStroke({\n        color: 'purple'\n      })\n    })\n  })],\n  'MultiPolygon': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'yellow',\n      width: 1\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 0, 0.1)'\n    })\n  })],\n  'Polygon': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'blue',\n      lineDash: [4],\n      width: 3\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  })],\n  'GeometryCollection': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'magenta',\n      width: 2\n    }),\n    fill: new olStyleFill({\n      color: 'magenta'\n    }),\n    image: new olStyleCircle({\n      radius: 10, // pixels\n      fill: null,\n      stroke: new olStyleStroke({\n        color: 'magenta'\n      })\n    })\n  })],\n  'Circle': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'red',\n      width: 2\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(255,0,0,0.2)'\n    })\n  })]\n};\n\nconst styleFunction = function(feature, resolution) {\n  const geo = feature.getGeometry();\n  // always assign a style to prevent feature skipping\n  return geo ? styles[geo.getType()] : styles['Point'];\n};\n\nconst vectorSource = new olSourceVector({\n  format: new olFormatGeoJSON(),\n  url: 'data/geojson/vector_data.geojson',\n  crossOrigin: 'anonymous'\n});\n\nconst theCircle = new olFeature(new olGeomCircle([5e6, 7e6, 5e5], 1e6));\n\n// Add a Cesium rectangle, via setting the property olcs.polygon_kind\nconst cartographicRectangleStyle = new olStyleStyle({\n  fill: new olStyleFill({\n    color: 'rgba(255, 69, 0, 0.7)'\n  }),\n  stroke: new olStyleStroke({\n    color: 'rgba(255, 69, 0, 0.9)',\n    width: 1\n  })\n});\nconst cartographicRectangleGeometry = new olGeomPolygon([[[-5e6, 11e6],\n  [4e6, 11e6], [4e6, 10.5e6], [-5e6, 10.5e6], [-5e6, 11e6]]]);\ncartographicRectangleGeometry.set('olcs_polygon_kind', 'rectangle');\nconst cartographicRectangle = new olFeature({\n  geometry: cartographicRectangleGeometry\n});\ncartographicRectangle.setStyle(cartographicRectangleStyle);\n\n// Add two Cesium rectangles with height and the property olcs.polygon_kind\nconst cartographicRectangleGeometry2 = new olGeomMultiPolygon([\n  [[\n    [-5e6, 12e6, 0], [4e6, 12e6, 0], [4e6, 11.5e6, 0], [-5e6, 11.5e6, 0],\n    [-5e6, 12e6, 0]\n  ]],\n  [[\n    [-5e6, 11.5e6, 1e6], [4e6, 11.5e6, 1e6], [4e6, 11e6, 1e6],\n    [-5e6, 11e6, 1e6], [-5e6, 11.5e6, 1e6]\n  ]]\n]);\ncartographicRectangleGeometry2.set('olcs_polygon_kind', 'rectangle');\nconst cartographicRectangle2 = new olFeature({\n  geometry: cartographicRectangleGeometry2\n});\ncartographicRectangle2.setStyle(cartographicRectangleStyle);\n\nconst vectorLayer = new olLayerVector({\n  style: styleFunction,\n  source: vectorSource\n});\n\nconst vectorSource2 = new olSourceVector({\n  features: [iconFeature, textFeature, cervinFeature, ...modelFeatures, cartographicRectangle,\n    cartographicRectangle2]\n});\nconst vectorLayer2 = new olLayerVector({\n  source: vectorSource2\n});\n\nconst dragAndDropInteraction = new olInteractionDragAndDrop({\n  formatConstructors: [\n    olFormatGPX,\n    olFormatGeoJSON,\n    olFormatIGC,\n    olFormatKML,\n    olFormatTopoJSON\n  ]\n});\n\nconst map = new olMap({\n  interactions: interactionDefaults().extend([dragAndDropInteraction]),\n  layers: [\n    new olLayerTile({\n      source: new olSourceOSM()\n    }),\n    vectorLayer,\n    vectorLayer2\n  ],\n  target: 'map2d',\n  controls: olControlDefaults({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: new olView({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndragAndDropInteraction.on('addfeatures', (event) => {\n  const vectorSource = new olSourceVector({\n    features: event.features,\n    projection: event.projection\n  });\n  map.getLayers().push(new olLayerVector({\n    source: vectorSource,\n    style: styleFunction\n  }));\n  const view = map.getView();\n  view.fitExtent(\n      vectorSource.getExtent(), /** @type {ol.Size} */ (map.getSize()));\n});\n\nconst Cesium = window.Cesium;\n\nconst ol3d = new OLCesium({map, target: 'mapCesium'});\nconst scene = ol3d.getCesiumScene();\nol3d.setEnabled(true);\n\nconst csLabels = new Cesium.LabelCollection();\ncsLabels.add({\n  position: Cesium.Cartesian3.fromRadians(20, 20, 0),\n  text: 'Pre-existing primitive'\n});\nscene.primitives.add(csLabels);\n\n// Adding a feature after the layer has been synchronized.\nvectorSource.addFeature(theCircle);\n\nlet hasTheVectorLayer = true;\nwindow['addOrRemoveOneVectorLayer'] = function() {\n  if (hasTheVectorLayer) {\n    map.getLayers().remove(vectorLayer);\n  } else {\n    map.getLayers().insertAt(1, vectorLayer);\n  }\n  hasTheVectorLayer = !hasTheVectorLayer;\n};\n\nwindow['addOrRemoveOneFeature'] = function() {\n  const found = vectorSource2.getFeatures().indexOf(iconFeature);\n  if (found === -1) {\n    vectorSource2.addFeature(iconFeature);\n  } else {\n    vectorSource2.removeFeature(iconFeature);\n  }\n};\n\nlet oldStyle = new olStyleStyle({\n  stroke: new olStyleStroke({\n    color: 'blue',\n    width: 2\n  }),\n  fill: new olStyleFill({\n    color: 'green'\n  })\n});\n\nwindow['toggleStyle'] = function() {\n  const swap = theCircle.getStyle();\n  theCircle.setStyle(oldStyle);\n  oldStyle = swap;\n};\n\nwindow['toggleClampToGround'] = function() {\n  let altitudeMode;\n  if (!vectorLayer.get('altitudeMode')) {\n    altitudeMode = 'clampToGround';\n  }\n  vectorLayer.set('altitudeMode', altitudeMode);\n  vectorLayer2.set('altitudeMode', altitudeMode);\n  map.removeLayer(vectorLayer);\n  map.removeLayer(vectorLayer2);\n  map.addLayer(vectorLayer);\n  map.addLayer(vectorLayer2);\n};\n\nwindow['setTargetFrameRate'] = function() {\n  let fps;\n  const fpsEl = document.querySelector('#framerate');\n  if (fpsEl) {\n    fps = Number(fpsEl.value);\n    ol3d.setTargetFrameRate(fps);\n  }\n};\n\nwindow['ol3d'] = ol3d;\nwindow['scene'] = scene;\ndocument.getElementById('enable').addEventListener('click', () => ol3d.setEnabled(!ol3d.getEnabled()));\n\nol3d.enableAutoRenderLoop();\n\n//##REMOVE## Keep this tag, split code here for code sandbox\n\nimport {initCodeSandbox} from './_code-sandbox.js';\ninitCodeSandbox('rawjs/vectors.js', 'data/geojson/vector_data.geojson', 'data/Box.gltf', 'data/icon.png');\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options,\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport ImageState from '../ImageState.js';\nimport {extend} from '../array.js';\nimport {asArray} from '../color.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_,\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source)),\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n)),\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this,\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames,\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i],\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection' || type.startsWith('Multi')) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this,\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                }),\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                }),\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName'],\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value'],\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value'],\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeStringTextNode(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this,\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  }),\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ],\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints(),\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings(),\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons(),\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack,\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack,\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {*} value Value to be written.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, value, objectStack) {\n      nodeWriter.call(thisArg ?? this, node, value, objectStack);\n      const parent = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const parentNode = parent.node;\n      parentNode.appendChild(node);\n    }\n  );\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options),\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @override\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {padNumber} from '../string.js';\nimport {getAllTextContent, getDocument} from '../xml.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\nconst whiteSpaceStart = /^\\s/;\nconst whiteSpaceEnd = /\\s$/;\nconst cdataCharacters = /(\\n|\\t|\\r|<|&| {2})/;\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  if (\n    typeof string === 'string' &&\n    (whiteSpaceStart.test(string) ||\n      whiteSpaceEnd.test(string) ||\n      cdataCharacters.test(string))\n  ) {\n    string.split(']]>').forEach((part, i, a) => {\n      if (i < a.length - 1) {\n        part += ']]';\n      }\n      if (i > 0) {\n        part = '>' + part;\n      }\n      writeCDATASection(node, part);\n    });\n  } else {\n    node.appendChild(getDocument().createTextNode(string));\n  }\n}\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTEDATE_RECORD_RE = /^HFDTEDATE:(\\d{2})(\\d{2})(\\d{2}),(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lad_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lod_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStop_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStop_ = 0;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (this.lad_) {\n            y +=\n              parseInt(line.slice(this.ladStart_, this.ladStop_), 10) /\n              60000 /\n              10 ** (this.ladStop_ - this.ladStart_);\n          }\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (this.lod_) {\n            x +=\n              parseInt(line.slice(this.lodStart_, this.lodStop_), 10) /\n              60000 /\n              10 ** (this.lodStop_ - this.lodStart_);\n          }\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTEDATE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = HFDTE_RECORD_RE.exec(line);\n          if (m) {\n            day = parseInt(m[1], 10);\n            month = parseInt(m[2], 10) - 1;\n            year = 2000 + parseInt(m[3], 10);\n          } else {\n            m = H_RECORD_RE.exec(line);\n            if (m) {\n              properties[m[1]] = m[2].trim();\n            }\n          }\n        }\n      } else if (line.charAt(0) == 'I') {\n        const numberAdds = parseInt(line.slice(1, 3), 10);\n        for (let i = 0; i < numberAdds; i++) {\n          const addCode = line.slice(7 + i * 7, 10 + i * 7);\n          if (addCode === 'LAD' || addCode === 'LOD') {\n            // in IGC format, columns are numbered from 1\n            const addStart = parseInt(line.slice(3 + i * 7, 5 + i * 7), 10) - 1;\n            const addStop = parseInt(line.slice(5 + i * 7, 7 + i * 7), 10);\n            if (addCode === 'LAD') {\n              this.lad_ = true;\n              this.ladStart_ = addStart;\n              this.ladStop_ = addStop;\n            } else if (addCode === 'LOD') {\n              this.lod_ = true;\n              this.lodStart_ = addStart;\n              this.lodStop_ = addStop;\n            }\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options),\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @typedef {Object} GPXLink\n * @property {string} [text] text\n * @property {string} [type] type\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @typedef {Object} GPXAuthor\n * @property {string} [name] name\n * @property {string} [email] email\n * @property {GPXLink} [link] link\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst AUTHOR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'email': parseEmail,\n  'link': parseLink,\n});\n\n/**\n * @typedef {Object} GPXMetadata\n * @property {string} [name] name\n * @property {string} [desc] desc\n * @property {GPXAuthor} [author] author\n * @property {GPXLink} [link] link\n * @property {number} [time] time\n * @property {string} [keywords] keywords\n * @property {Array<number>} [bounds] bounds\n * @property {Object} [extensions] extensions\n *\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'author': makeObjectPropertySetter(readAuthor),\n  'copyright': makeObjectPropertySetter(readCopyright),\n  'link': parseLink,\n  'time': makeObjectPropertySetter(readDateTime),\n  'keywords': makeObjectPropertySetter(readString),\n  'bounds': parseBounds,\n  'extensions': parseExtensions,\n});\n\n/**\n * @typedef {Object} GPXCopyright\n * @property {string} [author] author\n * @property {number} [year] year\n * @property {string} [license] license\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst COPYRIGHT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'year': makeObjectPropertySetter(readPositiveInteger),\n  'license': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @typedef {function(Feature, Node): void} ReadExtensions\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {ReadExtensions|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * Reads a GPX file's metadata tag, reading among other things:\n   *   - the name and description of this GPX\n   *   - its author\n   *   - the copyright associated with this GPX file\n   *\n   * Will return null if no metadata tag is present (or no valid source is given).\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {GPXMetadata | null} Metadata\n   * @api\n   */\n  readMetadata(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      return this.readMetadataFromDocument(parse(source));\n    }\n    if (isDocument(source)) {\n      return this.readMetadataFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readMetadataFromNode(source);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {GPXMetadata | null} Metadata\n   */\n  readMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        const metadata = this.readMetadataFromNode(/** @type {Element} */ (n));\n        if (metadata) {\n          return metadata;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Metadata\n   */\n  readMetadataFromNode(node) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName === 'metadata'\n      ) {\n        return pushParseAndPop({}, METADATA_PARSERS, n, []);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options],\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXAuthor | undefined} Person object.\n */\nfunction readAuthor(node, objectStack) {\n  const values = pushParseAndPop({}, AUTHOR_PARSERS, node, objectStack);\n  if (values) {\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXCopyright | undefined} Person object.\n */\nfunction readCopyright(node, objectStack) {\n  const values = pushParseAndPop({}, COPYRIGHT_PARSERS, node, objectStack);\n  if (values) {\n    const author = node.getAttribute('author');\n    if (author !== null) {\n      values['author'] = author;\n    }\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseBounds(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const minlat = node.getAttribute('minlat');\n  const minlon = node.getAttribute('minlon');\n  const maxlat = node.getAttribute('maxlat');\n  const maxlon = node.getAttribute('maxlon');\n  if (\n    minlon !== null &&\n    minlat !== null &&\n    maxlon !== null &&\n    maxlat !== null\n  ) {\n    values['bounds'] = [\n      [parseFloat(minlon), parseFloat(minlat)],\n      [parseFloat(maxlon), parseFloat(maxlat)],\n    ];\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseEmail(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  const domain = node.getAttribute('domain');\n  if (id !== null && domain !== null) {\n    values['email'] = `${id}@${domain}`;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection,\n          ),\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file),\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n"],"names":["$1140dfbeee585f32$var$DEFAULT_COLOR","$1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR","$1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","$1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","$1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SIZE","$1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE_SRC","$1140dfbeee585f32$var$DEFAULT_NO_IMAGE_STYLE","$1140dfbeee585f32$var$DEFAULT_TEXT_STROKE_STYLE","$1140dfbeee585f32$var$TEXTAREA","$a4f89edd2ef65182$var$xmlSerializer_","$a4f89edd2ef65182$var$document_","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$f6170f1a08d72585$export$2e2bcd8739ae039","set","s","enumerable","configurable","$9pD6L","$h7zsK","$9bJty","$1MAUi","$f6170f1a08d72585$var$Circle","default","constructor","center","radius","layout","undefined","setFlatCoordinates","setCenterAndRadius","clone","circle","flatCoordinates","slice","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","dx","dy","squaredDistance","i","stride","delta","getRadius","Math","sqrt","length","containsXY","getRadiusSquared_","getCenter","computeExtent","extent","createOrUpdate","getType","intersectsExtent","circleExtent","getExtent","intersects","forEachCorner","intersectsCoordinate","bind","setCenter","changed","setLayout","offset","deflateCoordinate","ii","getCoordinates","setCoordinates","coordinates","setRadius","rotate","angle","anchor","getStride","prototype","transform","$cc3xD","$9DiKA","$f3WAG","$9jDAx","$4mWlF","$cJntk","$bmHVE","$c3RIb","$9vPkX","$dIG9p","$lrKvI","$jzydl","$inIMS","$5DwXE","$l7VLp","$3xcD3","$fw94T","$jKs1i","$le5ya","$5ydre","$dpRHA","$kgouC","$45uGP","$10d5bd550e039cbe$var$TopoJSON","options","layerName_","layerName","layers_","layers","dataProjection","readFeaturesFromObject","object","type","feature","scale","translate","topoJSONTopology","arcs","$10d5bd550e039cbe$var$transformArcs","$10d5bd550e039cbe$var$transformArc","arc","vertex","$10d5bd550e039cbe$var$transformVertex","features","topoJSONFeatures","property","objectName","includes","push","apply","$10d5bd550e039cbe$var$readFeaturesFromGeometryCollection","collection","name","geometries","$10d5bd550e039cbe$var$readFeatureFromGeometry","readProjectionFromObject","$10d5bd550e039cbe$var$GEOMETRY_READERS","$10d5bd550e039cbe$var$concatenateArcs","polyArray","ringCoords","j","jj","indices","index","pop","geometry","geometryReader","transformGeometryWithOptions","setId","properties","setProperties","$wnhPR","$aSvtr","$fVVyM","$4iSHH","$1eatv","$9byFX","$a4f89edd2ef65182$export$be284679de3fbea8","$a4f89edd2ef65182$export$7094a064528c7fee","namespaceURI","qualifiedName","$a4f89edd2ef65182$export$f65ca476c09acec0","createElementNS","$a4f89edd2ef65182$export$b089dda0fde13047","node","normalizeWhitespace","$a4f89edd2ef65182$export$caa0047a9c11e135","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","String","nodeValue","replace","n","firstChild","nextSibling","join","$a4f89edd2ef65182$export$62858bae88b53fd0","$a4f89edd2ef65182$export$98e6a39c04603d36","xml","DOMParser","parseFromString","$a4f89edd2ef65182$export$b2d5eb949eb55a2a","valueReader","thisArg","objectStack","value","array","extend","$a4f89edd2ef65182$export$18ed2f5932a1b385","$a4f89edd2ef65182$export$b1b80676c57c5713","$a4f89edd2ef65182$export$b69a91976ee81208","localName","$a4f89edd2ef65182$export$77b73fc7f982cc07","nodeWriter","parentNode","parent","appendChild","$a4f89edd2ef65182$export$fa227189764d6986","serializersNS","nodeFactory","serializers","$a4f89edd2ef65182$export$7989129829daaabf","$a4f89edd2ef65182$export$dfdc1655ccc5b9cb","fixedNodeName","fixedNamespaceURI","newNodeName","context","nodeName","$a4f89edd2ef65182$export$d91b08b611cef144","$a4f89edd2ef65182$export$939885a13683f4dc","orderedKeys","sequence","Array","$a4f89edd2ef65182$export$c6eb0402f939765f","namespaceURIs","structure","structureNS","$a4f89edd2ef65182$export$dc8ce45ce1679f4f","parsersNS","firstElementChild","nextElementSibling","parsers","parser","$a4f89edd2ef65182$export$5c934df85741dbd1","values","keys","$a4f89edd2ef65182$export$a79a01f4edad8da8","document","implementation","createDocument","$9iPUS","$ce16c3ce3167dc37$var$XMLFeature","xmlSerializer_","XMLSerializer","readFeature","source","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","ELEMENT_NODE","abstract","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","writeFeature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","writeGeometryNode","$ce16c3ce3167dc37$export$2e2bcd8739ae039","$lVIA6","$d5e0fde316cac971$export$f9a84177eae95ed5","string","m","exec","$d5e0fde316cac971$export$5079def2140fe6f2","dateTime","Date","parse","isNaN","$d5e0fde316cac971$export$5be9c99d34ad295b","parseFloat","$d5e0fde316cac971$export$6161a72ab5b6b722","parseInt","$d5e0fde316cac971$export$dda73877cb166cd3","trim","$d5e0fde316cac971$export$9de8e8a584a450b7","bool","$d5e0fde316cac971$export$3255ca5635e70aed","$d5e0fde316cac971$export$f8009f9ca036d7d1","decimal","toPrecision","createTextNode","$d5e0fde316cac971$export$b6c828910b813a07","nonNegativeInteger","toString","$d5e0fde316cac971$var$whiteSpaceStart","$d5e0fde316cac971$var$whiteSpaceEnd","$d5e0fde316cac971$var$cdataCharacters","test","split","forEach","part","a","createCDATASection","$1140dfbeee585f32$var$GX_NAMESPACE_URIS","$1140dfbeee585f32$var$NAMESPACE_URIS","$1140dfbeee585f32$var$ICON_ANCHOR_UNITS_MAP","$1140dfbeee585f32$var$PLACEMARK_PARSERS","$1140dfbeee585f32$var$extendedDataParser","$1140dfbeee585f32$var$regionParser","$1140dfbeee585f32$var$readMultiGeometry","$1140dfbeee585f32$var$readLineString","$1140dfbeee585f32$var$readLinearRing","$1140dfbeee585f32$var$readPoint","$1140dfbeee585f32$var$readPolygon","$1140dfbeee585f32$var$readStyle","styleMapValue","$1140dfbeee585f32$var$readStyleMapValue","placemarkObject","isArray","$1140dfbeee585f32$var$readStyleURL","lineStrings","$1140dfbeee585f32$var$GX_MULTITRACK_GEOMETRY_PARSERS","$1140dfbeee585f32$var$readGxTrack","$1140dfbeee585f32$var$NETWORK_LINK_PARSERS","$1140dfbeee585f32$var$LINK_PARSERS","$1140dfbeee585f32$var$readURI","$1140dfbeee585f32$var$CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","$1140dfbeee585f32$var$REGION_PARSERS","$1140dfbeee585f32$var$LAT_LON_ALT_BOX_PARSERS","regionObject","$1140dfbeee585f32$var$LOD_PARSERS","lodObject","$1140dfbeee585f32$var$KML_SEQUENCE","$1140dfbeee585f32$var$KML_SERIALIZERS","$1140dfbeee585f32$var$DOCUMENT_SERIALIZERS","$1140dfbeee585f32$var$DOCUMENT_NODE_FACTORY","$1140dfbeee585f32$var$writePlacemark","$1140dfbeee585f32$var$DEFAULT_FILL_STYLE","$1140dfbeee585f32$var$DEFAULT_IMAGE_STYLE","$1140dfbeee585f32$var$DEFAULT_STROKE_STYLE","$1140dfbeee585f32$var$DEFAULT_TEXT_STYLE","$1140dfbeee585f32$var$DEFAULT_STYLE","$1140dfbeee585f32$var$DEFAULT_STYLE_ARRAY","$1140dfbeee585f32$var$scaleForSize","size","min","$1140dfbeee585f32$var$defaultIconUrlFunction","href","$1140dfbeee585f32$var$readColor","hexColor","substr","$1140dfbeee585f32$export$b231062f8c36cd1","re","z","baseURI","window","location","url","URL","$1140dfbeee585f32$var$readScale","$1140dfbeee585f32$var$STYLE_MAP_PARSERS","pairObject","$1140dfbeee585f32$var$PAIR_PARSERS","key","styleUrl","style","$1140dfbeee585f32$var$ICON_STYLE_PARSERS","iconObject","$1140dfbeee585f32$var$ICON_PARSERS","origin","xunits","getAttribute","yunits","$1140dfbeee585f32$var$LABEL_STYLE_PARSERS","$1140dfbeee585f32$var$LINE_STYLE_PARSERS","$1140dfbeee585f32$var$POLY_STYLE_PARSERS","$1140dfbeee585f32$var$FLAT_LINEAR_RING_PARSERS","$1140dfbeee585f32$var$readFlatLinearRing","$1140dfbeee585f32$var$GX_TRACK_PARSERS","whens","gxTrackObject","when","$1140dfbeee585f32$var$GEOMETRY_FLAT_COORDINATES_PARSERS","$1140dfbeee585f32$var$readFlatCoordinatesFromNode","$1140dfbeee585f32$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS","lineString","polygon","$1140dfbeee585f32$var$MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","point","getLayout","getFlatCoordinates","$1140dfbeee585f32$var$setCommonGeometryProperties","startsWith","$1140dfbeee585f32$var$FLAT_LINEAR_RINGS_PARSERS","innerBoundaryFlatLinearRings","$1140dfbeee585f32$var$INNER_BOUNDARY_IS_PARSERS","flatLinearRings","flatLinearRing","$1140dfbeee585f32$var$OUTER_BOUNDARY_IS_PARSERS","ends","$1140dfbeee585f32$var$STYLE_PARSERS","src","anchorXUnits","anchorYUnits","rotation","styleObject","IconObject","drawIcon","anchorOrigin","hotSpot","w","h","heading","toRadians","color","imageStyle","crossOrigin","crossOrigin_","offsetOrigin","iconUrlFunction_","imageScale","getScaleArray","imageSize","getSize","imageState","getImageState","IDLE","LOADING","listener","resizeScale","setScale","unlistenImageChange","listenImageChange","load","fill","width","outline","fillStyle","textStyle","strokeStyle","image","stroke","text","zIndex","getGeometry","getGeometriesArrayRecursive","filter","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","$1140dfbeee585f32$var$DATA_PARSERS","$1140dfbeee585f32$var$EXTENDED_DATA_PARSERS","featureObject","displayName","$1140dfbeee585f32$var$SCHEMA_DATA_PARSERS","data","$1140dfbeee585f32$var$writeColorTextNode","rgba","asArray","abgr","opacity","hex","floor","$1140dfbeee585f32$var$EXTENDEDDATA_NODE_SERIALIZERS","pair","setAttribute","$1140dfbeee585f32$var$DATA_NODE_FACTORY","$1140dfbeee585f32$var$ICON_SEQUENCE","$1140dfbeee585f32$var$ICON_SERIALIZERS","$1140dfbeee585f32$var$GX_NODE_FACTORY","$1140dfbeee585f32$var$ICON_STYLE_SEQUENCE","$1140dfbeee585f32$var$ICON_STYLE_SERIALIZERS","icon","vec2","$1140dfbeee585f32$var$writeScaleTextNode","$1140dfbeee585f32$var$LABEL_STYLE_SEQUENCE","$1140dfbeee585f32$var$LABEL_STYLE_SERIALIZERS","$1140dfbeee585f32$var$LINE_STYLE_SEQUENCE","$1140dfbeee585f32$var$LINE_STYLE_SERIALIZERS","$1140dfbeee585f32$var$GEOMETRY_TYPE_TO_NODENAME","$1140dfbeee585f32$var$GEOMETRY_NODE_FACTORY","$1140dfbeee585f32$var$POINT_NODE_FACTORY","$1140dfbeee585f32$var$LINE_STRING_NODE_FACTORY","$1140dfbeee585f32$var$LINEAR_RING_NODE_FACTORY","$1140dfbeee585f32$var$POLYGON_NODE_FACTORY","$1140dfbeee585f32$var$MULTI_GEOMETRY_SERIALIZERS","$1140dfbeee585f32$var$writePrimitiveGeometry","$1140dfbeee585f32$var$writePolygon","$1140dfbeee585f32$var$writeMultiGeometry","factory","concat","getPoints","getLineStrings","getPolygons","$1140dfbeee585f32$var$BOUNDARY_IS_SERIALIZERS","$1140dfbeee585f32$var$writeBoundaryIs","linearRing","$1140dfbeee585f32$var$PLACEMARK_SERIALIZERS","namesAndValues","names","styles","pointStyles","getText","getImage","getSrc","lineStyles","getStroke","polyStyles","$1140dfbeee585f32$var$STYLE_SEQUENCE","$1140dfbeee585f32$var$STYLE_SERIALIZERS","$1140dfbeee585f32$var$PLACEMARK_SEQUENCE","$1140dfbeee585f32$var$EXTENDEDDATA_NODE_FACTORY","getId","getProperties","getGeometryName","sort","v","styleFunction","getStyleFunction","styleArray","getGeometryFunction","writeStyles_","$1140dfbeee585f32$var$PRIMITIVE_GEOMETRY_SEQUENCE","$1140dfbeee585f32$var$PRIMITIVE_GEOMETRY_SERIALIZERS","dimension","d","$1140dfbeee585f32$var$POLY_STYLE_SEQUENCE","$1140dfbeee585f32$var$POLYGON_SERIALIZERS","$1140dfbeee585f32$var$INNER_BOUNDARY_NODE_FACTORY","$1140dfbeee585f32$var$OUTER_BOUNDARY_NODE_FACTORY","linearRings","getLinearRings","outerRing","shift","$1140dfbeee585f32$var$POLY_STYLE_SERIALIZERS","round","iconImageSize","getImageSize","iconProperties","getAnchor","getOrigin","getRotation","getColor","getFill","getScale","Number","getWidth","$1140dfbeee585f32$export$2e2bcd8739ae039","font","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","supportedMediaTypes","readDocumentOrFolder_","readPlacemark_","readSharedStyle_","readSharedStyleMap_","setGeometry","sharedStyles","resolution","drawName","multiGeometryPoints","createElement","innerHTML","featureStyle","$1140dfbeee585f32$var$findStyle","styleValue","nameStyle","$1140dfbeee585f32$var$createNameStyleFunction","foundStyle","textOffset","textAlign","setFont","getFont","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","setStyle","styleUri","getReadOptions","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","adaptOptions","kml","xmlnsUri","setAttributeNS","$bnthu","$2e03ce1a961db7fd$var$TextFeature","readFeatureFromText","$2e03ce1a961db7fd$var$getText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","$2e03ce1a961db7fd$export$2e2bcd8739ae039","$a3eff48c5fdb69ef$var$B_RECORD_RE","$a3eff48c5fdb69ef$var$H_RECORD_RE","$a3eff48c5fdb69ef$var$HFDTE_RECORD_RE","$a3eff48c5fdb69ef$var$HFDTEDATE_RECORD_RE","$a3eff48c5fdb69ef$var$NEWLINE_RE","$a3eff48c5fdb69ef$export$2e2bcd8739ae039","altitudeMode_","altitudeMode","lad_","lod_","ladStart_","ladStop_","lodStart_","lodStop_","lines","year","month","day","lastDateTime","line","charAt","hour","minute","second","UTC","numberAdds","addCode","addStart","addStop","$l7vEP","$c7152e7ae8968a6e$var$NAMESPACE_URIS","$c7152e7ae8968a6e$var$FEATURE_READER","$c7152e7ae8968a6e$var$readRte","$c7152e7ae8968a6e$var$readTrk","$c7152e7ae8968a6e$var$readWpt","$c7152e7ae8968a6e$var$GPX_PARSERS","$c7152e7ae8968a6e$var$LINK_PARSERS","$c7152e7ae8968a6e$var$AUTHOR_PARSERS","domain","$c7152e7ae8968a6e$var$parseLink","$c7152e7ae8968a6e$var$METADATA_PARSERS","$c7152e7ae8968a6e$var$COPYRIGHT_PARSERS","author","minlat","minlon","maxlat","maxlon","$c7152e7ae8968a6e$var$parseExtensions","$c7152e7ae8968a6e$var$GPX_SERIALIZERS","$c7152e7ae8968a6e$var$RTE_SEQUENCE","$c7152e7ae8968a6e$var$RTE_SERIALIZERS","multiLineString","$c7152e7ae8968a6e$var$TRK_SEQUENCE","$c7152e7ae8968a6e$var$TRK_SERIALIZERS","$c7152e7ae8968a6e$var$writeWptType","$c7152e7ae8968a6e$var$RTE_PARSERS","$c7152e7ae8968a6e$var$RTEPT_PARSERS","rteValues","$c7152e7ae8968a6e$var$appendCoordinate","$c7152e7ae8968a6e$var$TRK_PARSERS","$c7152e7ae8968a6e$var$TRKSEG_PARSERS","$c7152e7ae8968a6e$var$TRKPT_PARSERS","trkValues","$c7152e7ae8968a6e$var$WPT_PARSERS","$c7152e7ae8968a6e$var$LINK_SEQUENCE","$c7152e7ae8968a6e$var$LINK_SERIALIZERS","$c7152e7ae8968a6e$var$writeLink","$c7152e7ae8968a6e$var$RTEPT_TYPE_SEQUENCE","$c7152e7ae8968a6e$var$TRKSEG_SERIALIZERS","$c7152e7ae8968a6e$var$TRKSEG_NODE_FACTORY","$c7152e7ae8968a6e$var$WPT_TYPE_SEQUENCE","$c7152e7ae8968a6e$var$WPT_TYPE_SERIALIZERS","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","$c7152e7ae8968a6e$var$GEOMETRY_TYPE_TO_NODENAME","$c7152e7ae8968a6e$var$GPX_NODE_FACTORY","layoutOptions","hasZ","hasM","$c7152e7ae8968a6e$var$applyLayoutOptions","coordinate","$c7152e7ae8968a6e$export$2e2bcd8739ae039","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","readMetadata","readMetadataFromDocument","readMetadataFromNode","metadata","featureReader","gpx","$f18Q2","$3xzSb","$ilM9F","$6wUzV","$4U60I","$9b46bac5c293ebb3$var$DragAndDropEventType","ADD_FEATURES","$9b46bac5c293ebb3$export$5ac429618e6d21e6","file","projection","$9b46bac5c293ebb3$var$DragAndDrop","handleEvent","TRUE","on","once","un","readAsBuffer_","formats_","formatConstructors","format","projection_","dropListenKeys_","source_","target","handleResult_","event","result","map","getMap","getUserProjection","view","getView","getProjection","formats","input","TextDecoder","decode","tryReadFeatures_","featureProjection","clear","addFeatures","dispatchEvent","registerListeners_","dropArea","getViewport","listen","DROP","handleDrop","DRAGENTER","handleStop","DRAGOVER","setActive","active","getActive","unregisterListeners_","setMap","unlistenByKey","files","dataTransfer","item","reader","FileReader","addEventListener","LOAD","readAsArrayBuffer","readAsText","stopPropagation","preventDefault","dropEffect","$bdrRp","$5gNCk","$927f48c83533ce78$var$iconFeature","$927f48c83533ce78$var$textFeature","$927f48c83533ce78$var$cervinFeature","$927f48c83533ce78$var$modelFeatures","factor","PI","$927f48c83533ce78$var$iconStyle","textBaseline","$927f48c83533ce78$var$textStyle","$927f48c83533ce78$var$iCase","modelStyle","host","cesiumOptions","modelMatrix","createMatrixAtCoordinates","heightReference","$927f48c83533ce78$var$Cesium","HeightReference","CLAMP_TO_GROUND","minimumPixelSize","$927f48c83533ce78$var$image","$927f48c83533ce78$var$styles","lineDash","$927f48c83533ce78$var$styleFunction","geo","$927f48c83533ce78$var$vectorSource","$927f48c83533ce78$var$theCircle","$927f48c83533ce78$var$cartographicRectangleStyle","$927f48c83533ce78$var$cartographicRectangleGeometry","$927f48c83533ce78$var$cartographicRectangle","$927f48c83533ce78$var$cartographicRectangleGeometry2","$927f48c83533ce78$var$cartographicRectangle2","$927f48c83533ce78$var$vectorLayer","$927f48c83533ce78$var$vectorSource2","$927f48c83533ce78$var$vectorLayer2","$927f48c83533ce78$var$dragAndDropInteraction","$927f48c83533ce78$var$map","interactions","defaults","controls","attributionOptions","collapsible","zoom","vectorSource","getLayers","fitExtent","Cesium","$927f48c83533ce78$var$ol3d","$927f48c83533ce78$var$scene","getCesiumScene","setEnabled","$927f48c83533ce78$var$csLabels","LabelCollection","add","position","Cartesian3","fromRadians","primitives","addFeature","$927f48c83533ce78$var$hasTheVectorLayer","remove","insertAt","found","getFeatures","indexOf","removeFeature","$927f48c83533ce78$var$oldStyle","swap","getStyle","removeLayer","addLayer","fps","fpsEl","querySelector","setTargetFrameRate","getElementById","getEnabled","enableAutoRenderLoop","initCodeSandbox"],"version":3,"file":"vectors.28179c39.js.map"}